{"version":3,"sources":["node_modules/browser-pack/_prelude.js","core.js","jsforce-core.min.js","lib/VERSION.js","lib/_required.js","lib/browser/canvas.js","lib/browser/client.js","lib/browser/jsonp.js","lib/browser/request.js","lib/cache.js","lib/connection.js","lib/core.js","lib/csv.js","lib/date.js","lib/http-api.js","lib/logger.js","lib/oauth2.js","lib/process.js","lib/promise.js","lib/query.js","lib/quick-action.js","lib/record-stream.js","lib/record.js","lib/require.js","lib/soap.js","lib/sobject.js","lib/soql-builder.js","lib/transport.js","node_modules/asap/browser-raw.js","node_modules/base64-js/index.js","node_modules/buffer/index.js","node_modules/core-util-is/lib/util.js","node_modules/csv-parse/lib/index.js","node_modules/csv-parse/lib/sync.js","node_modules/csv-stringify/lib/index.js","node_modules/csv-stringify/lib/sync.js","node_modules/events/events.js","node_modules/ieee754/index.js","node_modules/inherits/inherits_browser.js","node_modules/is-buffer/index.js","node_modules/isarray/index.js","node_modules/lodash.get/index.js","node_modules/lodash/core.js","node_modules/multistream/index.js","node_modules/process-nextick-args/index.js","node_modules/process/browser.js","node_modules/promise/lib/core.js","node_modules/promise/lib/es6-extensions.js","node_modules/querystring-es3/decode.js","node_modules/querystring-es3/encode.js","node_modules/querystring-es3/index.js","node_modules/readable-stream/duplex-browser.js","node_modules/readable-stream/lib/_stream_duplex.js","node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/readable-stream/lib/_stream_readable.js","node_modules/readable-stream/lib/_stream_transform.js","node_modules/readable-stream/lib/_stream_writable.js","node_modules/readable-stream/lib/internal/streams/BufferList.js","node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/readable-stream/passthrough.js","node_modules/readable-stream/readable-browser.js","node_modules/readable-stream/transform.js","node_modules/readable-stream/writable-browser.js","node_modules/safe-buffer/index.js","node_modules/sax/lib/sax.js","node_modules/stream-browserify/index.js","node_modules/string_decoder/lib/string_decoder.js","node_modules/timers-browserify/main.js","node_modules/util-deprecate/browser.js","node_modules/util/support/isBufferBrowser.js","node_modules/util/util.js","node_modules/xml2js/lib/bom.js","node_modules/xml2js/lib/builder.js","node_modules/xml2js/lib/defaults.js","node_modules/xml2js/lib/parser.js","node_modules/xml2js/lib/processors.js","node_modules/xml2js/lib/xml2js.js","node_modules/xmlbuilder/lib/Utility.js","node_modules/xmlbuilder/lib/XMLAttribute.js","node_modules/xmlbuilder/lib/XMLCData.js","node_modules/xmlbuilder/lib/XMLComment.js","node_modules/xmlbuilder/lib/XMLDTDAttList.js","node_modules/xmlbuilder/lib/XMLDTDElement.js","node_modules/xmlbuilder/lib/XMLDTDEntity.js","node_modules/xmlbuilder/lib/XMLDTDNotation.js","node_modules/xmlbuilder/lib/XMLDeclaration.js","node_modules/xmlbuilder/lib/XMLDocType.js","node_modules/xmlbuilder/lib/XMLDocument.js","node_modules/xmlbuilder/lib/XMLDocumentCB.js","node_modules/xmlbuilder/lib/XMLElement.js","node_modules/xmlbuilder/lib/XMLNode.js","node_modules/xmlbuilder/lib/XMLProcessingInstruction.js","node_modules/xmlbuilder/lib/XMLRaw.js","node_modules/xmlbuilder/lib/XMLStreamWriter.js","node_modules/xmlbuilder/lib/XMLStringWriter.js","node_modules/xmlbuilder/lib/XMLStringifier.js","node_modules/xmlbuilder/lib/XMLText.js","node_modules/xmlbuilder/lib/XMLWriterBase.js","node_modules/xmlbuilder/lib/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","jsforce","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","browser","../core","./client","2","3","inherits","util","events","lodash/core","readable-stream","multistream","./cache","./connection","./core","./csv","./date","./http-api","./logger","./oauth2","./process","./promise","./query","./quick-action","./record-stream","./record","./soap","./sobject","./soql-builder","./transport","./VERSION","4","parseHeaders","hs","headers","split","forEach","line","pair","name","toLowerCase","value","Duplex","_","supported","Sfdc","canvas","createRequest","signedRequest","params","callback","send","body","settings","client","method","data","contentType","success","responseHeaders","payload","isString","JSON","stringify","response","statusCode","status","str","end","failure","err","ajax","url","_read","size","push","bufs","sent","_write","chunk","encoding","toString","on","join","test","5","popupWin","w","h","left","screen","width","top","height","open","handleCallbackResponse","res","checkCallbackResponse","state","localStorage","getItem","removeItem","states","prefix","promptType","cli","Client","_storeTokens","location","hash","_storeError","close","qs","parse","substring","access_token","search","error","Connection","OAuth2","clientIdx","_prefix","connection","EventEmitter","prototype","init","config","tokens","_getTokens","initialize","setTimeout","emit","login","options","isFunction","extend","_prompt","oauth2","rand","Math","random","setItem","authzUrl","getAuthorizationUrl","response_type","scope","pw","href","_removeTokens","pid","setInterval","closed","clearInterval","_getError","error_description","isLoggedIn","accessToken","logout","loggedIn","regexp","RegExp","document","cookie","match","issuedAt","Number","Date","now","userInfo","idUrl","ids","id","pop","organizationId","instanceUrl","instance_url","issued_at","../connection","../oauth2","querystring","6","_index","jsonpParam","timeout","toUpperCase","cbFuncName","callbacks","indexOf","script","createElement","type","src","documentElement","appendChild","cleanup","content-type","clearTimeout","removeChild","7","getResponseHeaderNames","xhr","headerLines","getAllResponseHeaders","map","headerLine","XMLHttpRequest","header","setRequestHeader","onreadystatechange","readyState","headerNames","headerName","getResponseHeader","8","createCacheKey","namespace","args","Array","slice","apply","CacheEntry","fetching","get","once","isUndefined","_value","set","clear","Cache","_entries","key","entry","k","makeResponseCacheable","fn","cache","arguments","result","ret","then","undefined","makeCacheable","$fn","9","Buffer","oauthRefreshFn","conn","refreshToken","parseIdUrl","parseSignedRequest","sr","msg","json","from","formatDate","date","pad","number","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","idUrls","userId","orgId","createUsernamePasswordRefreshFn","username","password","esc","String","replace","Promise","Logger","Query","SObject","QuickAction","HttpApi","Transport","Process","defaults","loginUrl","version","MAX_DML_COUNT","_logger","logLevel","clientId","clientSecret","redirectUri","proxyUrl","httpProxy","maxRequest","_transport","ProxyTransport","HttpProxyTransport","callOptions","process","refreshFn","_refreshDelegate","SessionRefreshDelegate","cacheOptions","describe$","describe","describeSObject$","describeSObject","describeGlobal$","describeGlobal","serverUrl","sessionId","oauthToken","CanvasTransport","limitInfo","sobjects","removeAllListeners","bind","types","so","sobject","tooling","_sessionType","_baseUrl","_normalizeUrl","request","httpApi","apiUsage","used","parseInt","limit","thenCall","requestGet","requestPost","requestPut","requestPatch","requestDelete","query","soql","run","queryAll","scanAll","queryMore","locator","_ensureVersion","majorVersion","versions","_supports","feature","retrieve","isArray","_retrieveMany","_retrieveParallel","_retrieveSingle","reject","fields","all","allOrNone","errorCode","resolve","field","Content-Type","_toRecordResult","message","content","errors","insert","create","records","_createMany","_createParallel","_createSingle","record","sobjectType","attributes","clone","Id","allowRecursive","rets1","rets2","concat","update","_updateMany","_updateParallel","_updateSingle","noContentResponse","upsert","extIdField","extId","results","del","destroy","_destroyMany","_destroyParallel","_destroySingle","sosl","encodeURIComponent","identity","user_id","organization_id","authorize","logger","requestToken","refresh_token","debug","loginByOAuth2","loginBySoap","authenticate","soapLoginEndpoint","httpRequest","SOAPAction","m","faultstring","revoke","logoutByOAuth2","logoutBySoap","revokeToken","recent","isNumber","recentItems","updated","start","deleted","tabs","limits","theme","quickActions","quickAction","actionName","buffer","10","VERSION","SfDate","RecordStream","./require","11","parseCSV","columns","csvParseSync","toCSV","csvStringifySync","parseCSVStream","csvParse","serializeCSVStream","csvStringify","csv-parse","csv-parse/lib/sync","csv-stringify","csv-stringify/lib/sync","12","zeropad","createLiteralBuilder","literal","num","_literal","toJSON","toDateLiteral","parseDate","yy","getFullYear","mm","getMonth","dd","getDate","dstr","toDateTimeLiteral","hh","mi","ss","dtstr","d","setUTCFullYear","setUTCDate","setUTCMonth","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","offset","setTime","getTime","setFullYear","setDate","setMonth","setHours","setMinutes","setSeconds","setMilliseconds","SfDateLiterals","YESTERDAY","TODAY","TOMORROW","LAST_WEEK","THIS_WEEK","NEXT_WEEK","LAST_MONTH","THIS_MONTH","NEXT_MONTH","LAST_90_DAYS","NEXT_90_DAYS","LAST_N_DAYS","NEXT_N_DAYS","NEXT_N_WEEKS","LAST_N_WEEKS","NEXT_N_MONTHS","LAST_N_MONTHS","THIS_QUARTER","LAST_QUARTER","NEXT_QUARTER","NEXT_N_QUARTERS","LAST_N_QUARTERS","THIS_YEAR","LAST_YEAR","NEXT_YEAR","NEXT_N_YEARS","LAST_N_YEARS","THIS_FISCAL_QUARTER","LAST_FISCAL_QUARTER","NEXT_FISCAL_QUARTER","NEXT_N_FISCAL_QUARTERS","LAST_N_FISCAL_QUARTERS","THIS_FISCAL_YEAR","LAST_FISCAL_YEAR","NEXT_FISCAL_YEAR","NEXT_N_FISCAL_YEARS","LAST_N_FISCAL_YEARS","13","parseJSON","parseXML","parseString","explicitArray","parseText","_conn","_responseType","responseType","transport","_noContentResponse","refreshDelegate","getRefreshDelegate","lastInstanceUrl","deferred","defer","onResume","_refreshing","promise","beforeSend","requestTime","responseTime","isSessionExpired","refresh","isErrorResponse","getError","getResponseBody","Authorization","getResponseContentType","parseResponseBody","parseBody","hasErrorInResponseBody","parseError","isObject","_refreshFn","since","_lastRefreshedAt","xml2js","14","createLoggerFunction","level","log","LogLevels","INFO","_logLevel","DEBUG","WARN","ERROR","FATAL","console","15","authzServiceUrl","tokenServiceUrl","revokeServiceUrl","client_id","redirect_uri","grant_type","client_secret","_postParams","token","16","ProcessRule","rule","approval","ApprovalProcess","list","rules","trigger","contextIds","approvals","requests","req","_request","_createRequest","actionType","contextId","comments","ApprovalProcessRequest","submit","approve","workitemId","_process","onResolve","onReject","_promise","rets","17","nextTick","fail","Deferred","promise/lib/es6-extensions","18","stream","SOQLBuilder","super_","objectMode","_soql","_locator","_config","select","includes","include","sort","_options","maxFetch","autoFetch","responseTarget","ResponseTargets","QueryResult","_executed","_finished","_chaining","_deferred","Readable","_fields","where","conditions","skip","orderby","dir","childRelName","childConfig","table","childQuery","SubQuery","_children","crname","setResponseTarget","exec","execute","promiseCallback","Records","onRecord","removeListener","_execute","toSOQL","totalFetched","totalSize","SingleRecord","Count","numRecords","nextRecordsUrl","done","read","addListener","_expandFields","findRelationTable","rname","ptable","_parent","describeCache","upperRname","childRelation","find","childRelationships","cr","relationshipName","childSObject","expandAsteriskField","fpath","shift","rfield","rtable","referenceTo","fpaths","expandedFields","flatten","explain","createSOQL","Serializable","filter","DEFAULT_BULK_THRESHOLD","thresholdNum","allowBulk","bulkThreshold","batch","handleRecord","rec","write","deleteBulk","handleEnd","mapping","updateStream","recordMapStream","updateBulk","pipe","onResolved","parent","19","path","_path","defaultValues","20","convertRecordForSerialization","Object","keys","reduce","urec","nullValue","precord","prec","pkey","createPipelineStream","s1","s2","pipeline","PassThrough","source","unpipe","dest","Transform","CSV","_transform","enc","_dataStream","converter","DataStreamConverters","serialize","Parsable","_parserStream","highWaterMark","ev","mapStream","noeval","evalMapping","$0","prop","v","isNull","mapped","filterStream","CSVStreamConverter","csv","21","RecordReference","blob","fieldName","22","required","./_required","23","convertType","schema","$","lookupValue","obj","propRegExps","toXML","attrs","elems","startTag","endTag","SOAP","_endpointUrl","endpointUrl","_xmlns","xmlns","invoke","_createEnvelope","faultcode","SessionHeader","CallOptions","24","Record","layouts$","layouts","compactLayouts$","compactLayouts","approvalLayouts$","approvalLayouts","findOne","count","count()","bulkload","operation","input","bulk","load","insertBulk","createBulk","upsertBulk","destroyBulk","deleteHardBulk","destroyHardBulk","layoutName","listviews","listview","ListView","25","createFieldsClause","cond","createConditionClause","createOrderByClause","childQueries","values","cquery","operator","depth","conds","op","createFieldExpression","expr","paren","sfop","opMap","valueExpr","createValueExpression","escapeSOQLString","flag","s","=","$eq","!=","$ne",">","$gt","<","$lt",">=","$gte","<=","$lte","$like","$nlike","$in","$nin","$includes","$excludes","$exists","26","streamify","factory","_then","newPromise","normalizeApiHost","apiHost","jsonp","followAllRedirects","env","HTTP_PROXY","proxy","HTTP_TIMEOUT","baseUrl","LOCATION_BASE_URL","host","_getHttpRequestModule","JsonpTransport","_jsonpParam","_signedRequest","_proxyUrl","proxyParams","salesforceproxy-endpoint","_httpProxy","./browser/canvas","./browser/jsonp","27","rawAsap","task","queue","requestFlush","flushing","flush","index","currentIndex","capacity","scan","newLength","makeRequestCallFromMutationObserver","toggle","observer","BrowserMutationObserver","node","createTextNode","observe","characterData","makeRequestCallFromTimer","handleTimer","timeoutHandle","intervalHandle","MutationObserver","WebKitMutationObserver","28","getLens","b64","len","validLen","placeHoldersLen","byteLength","lens","_byteLength","toByteArray","tmp","arr","Arr","curByte","revLookup","charCodeAt","tripletToBase64","lookup","encodeChunk","uint8","output","fromByteArray","extraBytes","parts","maxChunkLength","len2","Uint8Array","29","30","typedArraySupport","__proto__","foo","createBuffer","K_MAX_LENGTH","RangeError","buf","arg","encodingOrOffset","allocUnsafe","TypeError","isArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","checked","string","isEncoding","actual","fromArrayLike","array","byteOffset","isBuffer","copy","ArrayBuffer","isView","numberIsNaN","SlowBuffer","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","val","arrayIndexOf","lastIndexOf","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","j","hexWrite","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","min","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","out","toHex","bytes","checkOffset","ext","checkInt","max","checkIEEE754","writeFloat","littleEndian","noAssert","ieee754","writeDouble","base64clean","trim","INVALID_BASE64_RE","units","Infinity","leadSurrogate","byteArray","hi","lo","dst","constructor","INSPECT_MAX_BYTES","kMaxLength","TYPED_ARRAY_SUPPORT","defineProperty","Symbol","species","configurable","enumerable","writable","poolSize","allocUnsafeSlow","_isBuffer","compare","x","y","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","_arr","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","base64-js","31","objectToString","isBoolean","isNullOrUndefined","isSymbol","isRegExp","re","isDate","isError","isPrimitive","../../is-buffer/index.js","32","Parser","StringDecoder","isObjLiteral","called","chunks","parser","objname","base","base1","base10","base11","base12","base13","base14","base15","base16","base2","base3","base4","base5","base6","base7","base8","base9","rowDelimiter","delimiter","quote","escape","comment","ltrim","rtrim","auto_parse","auto_parse_date","isNaN","relax","relax_column_count","skip_empty_lines","max_limit_on_data_read","skip_lines_with_empty_values","lines","skipped_line_count","empty_line_count","is_int","is_float","parseFloat","decoder","quoting","commenting","nextChar","closingQuote","rawBuf","rowDelimiterLength","__write","_flush","__push","call_column_udf","lineAsColumns","ref","row","line_length","to","raw","chars","areNextCharsDelimiter","areNextCharsRowDelimiters","char","escapeIsQuote","isDelimiter","isEscape","isNextCharAComment","isQuote","isRowDelimiter","isRowDelimiterLength","l","nextCharPos","ref1","ref2","ref3","ref4","ref5","remainingBuffer","wasCommenting","_this","some","rd","charAt","trimRight","_obj","_test","getPrototypeOf","string_decoder","33","./index","34","Stringifier","stringifier","opts","quoted","quotedEmpty","quotedString","eof","formatters","bool","object","countWriten","label","labels","preserve","_line","column","containsEscape","containsLinebreak","containsQuote","containsdelimiter","newLine","shouldQuote","splice","lodash.get","35","36","_events","hasOwnProperty","objectCreate","_eventsCount","_maxListeners","$getMaxListeners","that","defaultMaxListeners","emitNone","handler","isFn","listeners","arrayClone","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","_addListener","listener","prepend","existing","newListener","unshift","warned","emitter","warn","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","listenerCount","spliceOne","objectCreatePolyfill","proto","F","objectKeysPolyfill","functionBindPolyfill","context","objectKeys","Function","hasDefineProperty","setMaxListeners","getMaxListeners","er","doError","prependListener","prependOnceListener","position","originalListener","rawListeners","eventNames","Reflect","ownKeys","37","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","floor","LN2","38","ctor","superCtor","TempCtor","39","isSlowBuffer","40","41","getValue","isHostObject","Hash","entries","hashClear","__data__","nativeCreate","hashDelete","has","hashGet","HASH_UNDEFINED","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","lastIndex","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","Map","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","eq","baseGet","isKey","castPath","toKey","baseIsNative","isMasked","pattern","reIsNative","reIsHostCtor","toSource","baseToString","symbolToString","INFINITY","stringToPath","isKeyable","getNative","reIsPlainProp","reIsDeepProp","func","maskSrcKey","funcToString","memoize","resolver","FUNC_ERROR_TEXT","memoized","other","tag","funcTag","genTag","isObjectLike","symbolTag","defaultValue","reLeadingDot","rePropName","reRegExpChar","reEscapeChar","freeGlobal","freeSelf","root","arrayProto","funcProto","objectProto","coreJsData","uid","IE_PROTO","symbolProto","42","arrayPush","baseFindIndex","predicate","fromIndex","fromRight","baseProperty","basePropertyOf","baseReduce","collection","iteratee","accumulator","initAccum","eachFunc","baseValues","props","baseMap","overArg","transform","lodash","LodashWrapper","chainAll","__wrapped__","__actions__","__chain__","assignValue","objValue","baseAssignValue","baseDelay","wait","baseEvery","baseEach","baseExtremum","comparator","current","computed","baseFilter","baseFlatten","isStrict","isFlattenable","baseForOwn","baseFor","baseFunctions","baseGetTag","baseGt","baseIsDate","dateTag","baseIsEqual","bitmask","customizer","stack","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","argsTag","objectTag","objIsObj","othIsObj","isSameTag","objStack","othStack","equalArrays","equalByTag","COMPARE_PARTIAL_FLAG","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsRegExp","regexpTag","baseIteratee","baseMatches","baseLt","isArrayLike","nativeKeys","COMPARE_UNORDERED_FLAG","basePick","baseRest","setToString","overRest","baseSlice","copyArray","baseSome","baseWrapperValue","actions","action","thisArg","compareAscending","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","copyObject","isNew","newValue","createAssigner","assigner","sources","createBaseEach","iterable","createBaseFor","keysFunc","createCtor","Ctor","thisBinding","baseCreate","createFind","findIndexFunc","createPartial","partials","wrapper","argsIndex","argsLength","leftIndex","leftLength","isBind","WRAP_BIND_FLAG","isPartial","othLength","seen","compared","arrValue","othValue","othIndex","boolTag","numberTag","errorTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","flatRest","isArguments","isIndex","MAX_SAFE_INTEGER","reIsUint","isIterateeCall","nativeKeysIn","nativeObjectToString","nativeMax","otherArgs","compact","Boolean","findIndex","toInteger","flattenDeep","head","isReflexive","last","chain","tap","interceptor","thru","wrapperValue","every","guard","sortBy","criteria","before","negate","isLength","isEmpty","isEqual","nativeIsFinite","asyncTag","proxyTag","toArray","properties","assign","reHasUnescapedHtml","reUnescapedHtml","escapeHtmlChar","matches","mixin","methodNames","isFunc","methodName","noConflict","oldDash","noop","uniqueId","idCounter","WRAP_PARTIAL_FLAG","htmlEscapes","&","\"","'","freeExports","nodeType","freeModule","propertyIsEnumerable","baseIsArguments","delay","toNumber","assignIn","keysIn","propsIndex","propsLength","pick","paths","each","first","chainName","retUnwrapped","valueOf","43","MultiStream","streams","destroyed","_drained","_forwarding","_current","_toStreams2","toStreams2Obj","toStreams2Buf","_queue","_attachErrorListener","_next","toStreams2","_readableState","wrap","_forward","_gotNextStream","onReadable","onClose","ended","onEnd","onError","44","45","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","Item","title","argv","off","binding","cwd","chdir","umask","46","getThen","ex","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","_40","_65","_55","_72","doResolve","safeThen","onFulfilled","onRejected","handle","Handler","_37","handleResolved","asap","cb","finale","_87","reason","_61","asap/raw","47","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","race","./core.js","48","sep","maxKeys","kstr","vstr","idx","decodeURIComponent","xs","49","stringifyPrimitive","ks","50","decode","encode","./decode","./encode","51","./lib/_stream_duplex.js","52","Writable","readable","allowHalfOpen","onend","_writableState","pna","onEndNT","_destroy","./_stream_readable","./_stream_writable","core-util-is","process-nextick-args","53","./_stream_transform","54","_uint8ArrayToBuffer","_isUint8Array","OurUint8Array","event","ReadableState","isDuplex","readableObjectMode","hwm","readableHwm","readableHighWaterMark","defaultHwm","BufferList","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","awaitDrain","readingMore","Stream","readableAddChunk","addToFront","skipChunkCheck","onEofChunk","chunkInvalid","addChunk","maybeReadMore","needMoreData","emitReadable","computeNewHighWaterMark","MAX_HWM","howMuchToRead","emitReadable_","flow","maybeReadMore_","pipeOnDrain","EElistenerCount","nReadingNextTick","resume","resume_","fromList","fromListPartial","hasStrings","copyFromBufferString","copyFromBuffer","next","nb","tail","endReadable","endReadableNT","debugUtil","debuglog","destroyImpl","kProxyEvents","_undestroy","undestroy","isPaused","setEncoding","nOrig","doRead","pipeOpts","onunpipe","unpipeInfo","hasUnpiped","onclose","onfinish","ondrain","onerror","ondata","cleanedUp","needDrain","increasedAwaitDrain","pause","doEnd","stdout","stderr","endFn","dests","paused","_fromList","./_stream_duplex","./internal/streams/BufferList","./internal/streams/destroy","./internal/streams/stream","isarray","safe-buffer","string_decoder/","55","afterTransform","ts","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","prefinish","_this2","err2","56","setImmediate","CorkedRequest","finish","onCorkedFinish","nop","WritableState","writableObjectMode","writableHwm","writableHighWaterMark","finalCalled","ending","finished","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","bufferedRequestCount","corkedRequestsFree","realHasInstance","writev","_writev","_final","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","asyncWrite","afterWrite","onwriteDrain","holder","allBuffers","callFinal","need","endWritable","corkReq","internalUtil","deprecate","getBuffer","hasInstance","cork","uncork","setDefaultEncoding","timers","util-deprecate","57","_classCallCheck","instance","Constructor","copyBuffer","custom","58","readableDestroyed","writableDestroyed","emitErrorNT","59","60","./readable","61","./lib/_stream_passthrough.js","./lib/_stream_readable.js","./lib/_stream_transform.js","./lib/_stream_writable.js","62","63","64","copyProps","SafeBuffer","65","sax","SAXParser","strict","opt","clearBuffers","q","bufferCheckPosition","MAX_BUFFER_LENGTH","lowercase","lowercasetags","looseCase","tags","closedRoot","sawRoot","noscript","S","BEGIN","strictEntities","ENTITIES","XML_ENTITIES","attribList","ns","rootNS","trackPosition","checkBufferLength","maxAllowed","maxActual","buffers","closeText","emitNode","cdata","flushBuffers","createStream","SAXStream","_parser","me","_decoder","streamWraps","isWhitespace","isAttribEnd","isMatch","regex","notMatch","textNode","textopts","text","normalize","strictFail","BEGIN_WHITESPACE","TEXT","newTag","tagName","qname","attribute","qualName","local","attrib","attribName","attribValue","qn","XML_NAMESPACE","XMLNS_NAMESPACE","openTag","selfClosing","uri","nv","isSelfClosing","SCRIPT","closeTag","closeTo","parseEntity","entity","entityLC","numStr","fromCodePoint","beginWhiteSpace","OPEN_WAKA","startTagPosition","starti","TEXT_ENTITY","SCRIPT_ENDING","CLOSE_TAG","SGML_DECL","sgmlDecl","nameStart","OPEN_TAG","PROC_INST","procInstName","procInstBody","CDATA","COMMENT","DOCTYPE","doctype","SGML_DECL_QUOTED","DOCTYPE_DTD","DOCTYPE_QUOTED","DOCTYPE_DTD_QUOTED","COMMENT_ENDING","COMMENT_ENDED","CDATA_ENDING","CDATA_ENDING_2","PROC_INST_ENDING","PROC_INST_BODY","nameBody","OPEN_TAG_SLASH","ATTRIB","ATTRIB_NAME","ATTRIB_VALUE","ATTRIB_NAME_SAW_WHITE","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_CLOSED","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG_SAW_WHITE","returnState","entityBody","entityStart","EVENTS","newf","SD","xml","STATE","COMMENT_STARTING","amp","gt","lt","quot","apos","AElig","Aacute","Acirc","Agrave","Aring","Atilde","Auml","Ccedil","ETH","Eacute","Ecirc","Egrave","Euml","Iacute","Icirc","Igrave","Iuml","Ntilde","Oacute","Ocirc","Ograve","Oslash","Otilde","Ouml","THORN","Uacute","Ucirc","Ugrave","Uuml","Yacute","aacute","acirc","aelig","agrave","aring","atilde","auml","ccedil","eacute","ecirc","egrave","eth","euml","iacute","icirc","igrave","iuml","ntilde","oacute","ocirc","ograve","oslash","otilde","ouml","szlig","thorn","uacute","ucirc","ugrave","uuml","yacute","yuml","reg","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","macr","deg","plusmn","sup1","sup2","sup3","acute","micro","para","middot","cedil","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","stringFromCharCode","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","66","EE","didOnEnd","_isStdio","readable-stream/duplex.js","readable-stream/passthrough.js","readable-stream/readable.js","readable-stream/transform.js","readable-stream/writable.js","67","_normalizeEncoding","retried","normalizeEncoding","nenc","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckIncomplete","utf8CheckExtraBytes","utf8Text","total","utf8End","68","clearImmediate","Timeout","clearFn","_id","_clearFn","immediateIds","nextImmediateId","unref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","process/browser.js","69","deprecated","trace","70","71","ctx","stylize","stylizeNoColor","colors","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","arrayToHash","recurseTimes","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","formatError","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","desc","getOwnPropertyDescriptor","numLinesEst","prev","cur","ar","timestamp","time","getHours","getMinutes","getSeconds","months","formatRegExp","format","objects","throwDeprecation","traceDeprecation","noDeprecation","debugEnviron","debugs","NODE_DEBUG","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","boolean","null","origin","add","./support/isBuffer","72","stripBOM","73","builder","escapeCDATA","requiresCDATA","wrapCDATA","hasProp","Builder","buildObject","rootObj","attrkey","charkey","render","rootElement","rootName","element","attr","child","txt","ele","up","att","xmldec","headless","allowSurrogateChars","renderOpts","./defaults","xmlbuilder","74","0.1","explicitCharkey","normalizeTags","ignoreAttrs","mergeAttrs","explicitRoot","validator","explicitChildren","childkey","charsAsChildren","includeWhiteChars","async","attrNameProcessors","attrValueProcessors","tagNameProcessors","valueProcessors","emptyTag","0.2","preserveChildrenOrder","standalone","pretty","indent","newline","chunkSize","75","bom","processItem","processors","__super__","thing","superClass","reset","assignOrPush","processAsync","xmlnskey","saxParser","error1","errThrown","ontext","resultObject","EXPLICIT_CHARKEY","onopentag","processedKey","onclosetag","emptyStr","nodeName","objClone","old","xpath","charChild","#name","oncdata","./bom","./processors","76","prefixMatch","firstCharLowerCase","stripPrefix","parseNumbers","parseBooleans","77","ValidationError","./builder","./parser","78","isPlainObject","79","XMLAttribute","attName","attValue","writer","80","XMLCData","XMLNode","./XMLNode","81","XMLComment","82","XMLDTDAttList","elementName","attributeName","attributeType","defaultValueType","eleName","dtdAttType","dtdAttDefault","dtdAttList","83","XMLDTDElement","dtdElementValue","dtdElement","84","XMLDTDEntity","pe","pubID","sysID","dtdPubID","dtdSysID","nData","dtdNData","dtdEntityValue","dtdEntity","./Utility","85","XMLDTDNotation","dtdNotation","86","XMLDeclaration","xmlVersion","xmlEncoding","xmlStandalone","declaration","87","XMLDocType","documentObject","children","attList","pEntity","notation","docType","ent","pent","./XMLDTDAttList","./XMLDTDElement","./XMLDTDEntity","./XMLDTDNotation","88","XMLDocument","XMLStringWriter","XMLStringifier","isDocument","writerOptions","./XMLStringWriter","./XMLStringifier","89","XMLDocumentCB","XMLElement","XMLProcessingInstruction","XMLRaw","XMLText","onData","onDataCallback","onEndCallback","currentNode","currentLevel","openTags","documentStarted","documentCompleted","openCurrent","skipNullAttributes","instruction","insTarget","insValue","processingInstruction","rootNodeName","closeNode","openNode","isOpen","isClosed","nod","dat","com","ins","dec","dtd","./XMLAttribute","./XMLCData","./XMLComment","./XMLDeclaration","./XMLDocType","./XMLElement","./XMLProcessingInstruction","./XMLRaw","./XMLText","90","isRoot","rootObject","clonedSelf","clonedChild","removeAttribute","91","childNode","lastChild","len1","ignoreDecorators","convertAttKey","separateArrayItems","convertTextKey","convertCDataKey","convertCommentKey","convertRawKey","convertPIKey","insertBefore","removed","insertAfter","remove","commentBefore","commentAfter","instructionBefore","instructionAfter","doc","importDocument","clonedRoot","importXMLBuilder","92","93","94","XMLStreamWriter","XMLWriterBase","isLastRootNode","space","endline","spacebeforeslash","allowEmpty","./XMLWriterBase","95","textispresent","textispresentwasset","newlinedefault","prettydefault","dontprettytextnodes","96","assertLegalChar","noDoubleEncoding","eleText","elEscape","attEscape","ampregex","97","98","ref6","99","begin","stringWriter","streamWriter","./XMLDocument","./XMLDocumentCB","./XMLStreamWriter"],"mappings":"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","file":"jsforce-core.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\r\n\r\nvar jsforce = require('../core');\r\njsforce.browser = require('./client');\r\nmodule.exports = jsforce;\r\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.jsforce = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\r\n\r\nvar jsforce = require('../core');\r\njsforce.browser = require('./client');\r\nmodule.exports = jsforce;\r\n\n},{\"../core\":10,\"./client\":5}],2:[function(require,module,exports){\n'use strict';\r\nmodule.exports = '1.9.1';\r\n\n},{}],3:[function(require,module,exports){\n// This file content is dynamically created in build script\n\"use strict\";\nmodule.exports = {\n  'inherits': require('inherits'),\n  'util': require('util'),\n  'events': require('events'),\n  'lodash/core': require('lodash/core'),\n  'readable-stream': require('readable-stream'),\n  'multistream': require('multistream'),\n  './cache': require('./cache'),\n  './connection': require('./connection'),\n  './core': require('./core'),\n  './csv': require('./csv'),\n  './date': require('./date'),\n  './http-api': require('./http-api'),\n  './logger': require('./logger'),\n  './oauth2': require('./oauth2'),\n  './process': require('./process'),\n  './promise': require('./promise'),\n  './query': require('./query'),\n  './quick-action': require('./quick-action'),\n  './record-stream': require('./record-stream'),\n  './record': require('./record'),\n  './soap': require('./soap'),\n  './sobject': require('./sobject'),\n  './soql-builder': require('./soql-builder'),\n  './transport': require('./transport'),\n  './VERSION': require('./VERSION')\n};\n},{\"./VERSION\":2,\"./cache\":8,\"./connection\":9,\"./core\":10,\"./csv\":11,\"./date\":12,\"./http-api\":13,\"./logger\":14,\"./oauth2\":15,\"./process\":16,\"./promise\":17,\"./query\":18,\"./quick-action\":19,\"./record\":21,\"./record-stream\":20,\"./soap\":23,\"./sobject\":24,\"./soql-builder\":25,\"./transport\":26,\"events\":36,\"inherits\":38,\"lodash/core\":42,\"multistream\":43,\"readable-stream\":61,\"util\":71}],4:[function(require,module,exports){\n/*global Sfdc */\r\n'use strict';\r\n\r\nvar Duplex = require('readable-stream').Duplex,\r\n    _ = require('lodash/core');\r\n\r\nfunction parseHeaders(hs) {\r\n  var headers = {};\r\n  hs.split(/\\n/).forEach(function(line) {\r\n    var pair = line.split(/\\s*:\\s*/);\r\n    var name = pair[0].toLowerCase();\r\n    var value = pair[1];\r\n    headers[name] = value;\r\n  });\r\n  return headers;\r\n}\r\n\r\nmodule.exports = {\r\n\r\n  supported: typeof Sfdc === 'object' && typeof Sfdc.canvas !== 'undefined',\r\n\r\n  createRequest: function(signedRequest) {\r\n    return function(params, callback) {\r\n      var response;\r\n      var str = new Duplex();\r\n      str._read = function(size) {\r\n        if (response) {\r\n          str.push(response.body);\r\n        }\r\n      };\r\n      var bufs = [];\r\n      var sent = false;\r\n      str._write = function(chunk, encoding, callback) {\r\n        bufs.push(chunk.toString(encoding));\r\n        callback();\r\n      };\r\n      str.on('finish', function() {\r\n        if (!sent) {\r\n          send(bufs.join(''));\r\n          sent = true;\r\n        }\r\n      });\r\n      if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {\r\n        send(params.body);\r\n        sent = true;\r\n      }\r\n\r\n      function send(body) {\r\n        var settings = {\r\n          client: signedRequest.client,\r\n          method: params.method,\r\n          data: body\r\n        };\r\n        if (params.headers) {\r\n          settings.headers = {};\r\n          for (var name in params.headers) {\r\n            if (name.toLowerCase() === 'content-type') {\r\n              settings.contentType = params.headers[name];\r\n            } else {\r\n              settings.headers[name] = params.headers[name];\r\n            }\r\n          }\r\n        }\r\n        settings.success = function(data) {\r\n          var headers = parseHeaders(data.responseHeaders);\r\n          var body = data.payload;\r\n          if (!_.isString(body)) {\r\n            body = JSON.stringify(body);\r\n          }\r\n          response = {\r\n            statusCode : data.status,\r\n            headers: headers,\r\n            body: body\r\n          };\r\n          if (callback) {\r\n            callback(null, response, response.body);\r\n          }\r\n          str.end();\r\n        };\r\n        settings.failure = function(err) {\r\n          if (callback) {\r\n            callback(err);\r\n          }\r\n        };\r\n        Sfdc.canvas.client.ajax(params.url, settings);\r\n      }\r\n      return str;\r\n    };\r\n  }\r\n};\r\n\n},{\"lodash/core\":42,\"readable-stream\":61}],5:[function(require,module,exports){\n/**\r\n * @file Browser client connection management class\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar events = require('events'),\r\n    inherits = require('inherits'),\r\n    qs = require('querystring'),\r\n    _ = require('lodash/core'),\r\n    Connection = require('../connection'),\r\n    OAuth2 = require('../oauth2');\r\n\r\n/**\r\n * @private\r\n */\r\nfunction popupWin(url, w, h) {\r\n  var left = (screen.width/2)-(w/2);\r\n  var top = (screen.height/2)-(h/2);\r\n  return window.open(url, null, 'location=yes,toolbar=no,status=no,menubar=no,width='+w+',height='+h+',top='+top+',left='+left);\r\n}\r\n\r\nfunction handleCallbackResponse() {\r\n  var res = checkCallbackResponse();\r\n  var state = localStorage.getItem('jsforce_state');\r\n  if (res && state && res.body.state === state) {\r\n    localStorage.removeItem('jsforce_state');\r\n    var states = state.split('.');\r\n    var prefix = states[0], promptType = states[1];\r\n    var cli = new Client(prefix);\r\n    if (res.success) {\r\n      cli._storeTokens(res.body);\r\n      location.hash = '';\r\n    } else {\r\n      cli._storeError(res.body);\r\n    }\r\n    if (promptType === 'popup') { window.close(); }\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction checkCallbackResponse() {\r\n  var params;\r\n  if (window.location.hash) {\r\n    params = qs.parse(window.location.hash.substring(1));\r\n    if (params.access_token) {\r\n      return { success: true, body: params };\r\n    }\r\n  } else if (window.location.search) {\r\n    params = qs.parse(window.location.search.substring(1));\r\n    if (params.error) {\r\n      return { success: false, body: params };\r\n    }\r\n  }\r\n}\r\n\r\n/** @private **/\r\nvar clientIdx = 0;\r\n\r\n\r\n/**\r\n * @class\r\n * @todo add document\r\n */\r\nvar Client = function(prefix) {\r\n  this._prefix = prefix || 'jsforce' + clientIdx++;\r\n  this.connection = null;\r\n};\r\n\r\ninherits(Client, events.EventEmitter);\r\n\r\n/**\r\n *\r\n */\r\nClient.prototype.init = function(config) {\r\n  if (handleCallbackResponse()) { return; }\r\n  this.config = config;\r\n  this.connection = new Connection(config);\r\n  var tokens = this._getTokens();\r\n  if (tokens) {\r\n    this.connection.initialize(tokens);\r\n    var self = this;\r\n    setTimeout(function() {\r\n      self.emit('connect', self.connection);\r\n    }, 10);\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n */\r\nClient.prototype.login = function(options, callback) {\r\n  if (_.isFunction(options)) {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  callback = callback || function(){ };\r\n  _.extend(options, this.config);\r\n  var self = this;\r\n  this._prompt(options, callback);\r\n};\r\n\r\n\r\nClient.prototype._prompt = function(options, callback) {\r\n  var self = this;\r\n  var oauth2 = new OAuth2(options);\r\n  var rand = Math.random().toString(36).substring(2);\r\n  var state = [ this._prefix, \"popup\", rand ].join('.');\r\n  localStorage.setItem(\"jsforce_state\", state);\r\n  var authzUrl = oauth2.getAuthorizationUrl({\r\n    response_type: 'token',\r\n    scope : options.scope,\r\n    state: state\r\n  });\r\n  var size = options.size || {};\r\n  var pw = popupWin(authzUrl, size.width || 912, size.height || 513);\r\n  if (!pw) {\r\n    state = [ this._prefix, \"redirect\", rand ].join('.');\r\n    localStorage.setItem(\"jsforce_state\", state);\r\n    authzUrl = oauth2.getAuthorizationUrl({\r\n      response_type: 'token',\r\n      scope : options.scope,\r\n      state: state\r\n    });\r\n    location.href = authzUrl;\r\n    return;\r\n  }\r\n  self._removeTokens();\r\n  var pid = setInterval(function() {\r\n    try {\r\n      if (!pw || pw.closed) {\r\n        clearInterval(pid);\r\n        var tokens = self._getTokens();\r\n        if (tokens) {\r\n          self.connection.initialize(tokens);\r\n          self.emit('connect', self.connection);\r\n          callback(null, { status: 'connect' });\r\n        } else {\r\n          var err = self._getError();\r\n          if (err) {\r\n            callback(new Error(err.error + \": \" + err.error_description));\r\n          } else {\r\n            callback(null, { status: 'cancel' });\r\n          }\r\n        }\r\n      }\r\n    } catch(e) {}\r\n  }, 1000);\r\n};\r\n\r\n/**\r\n *\r\n */\r\nClient.prototype.isLoggedIn = function() {\r\n  return !!(this.connection && this.connection.accessToken);\r\n};\r\n\r\n/**\r\n *\r\n */\r\nClient.prototype.logout = function() {\r\n  this.connection.logout();\r\n  this._removeTokens();\r\n  this.emit('disconnect');\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nClient.prototype._getTokens = function() {\r\n  var loggedIn = JSON.stringify(localStorage.getItem(this._prefix + '_loggedin'));\r\n  var regexp = new RegExp(\"(^|;\\\\s*)\"+this._prefix+\"_loggedin=true(;|$)\");\r\n  if (document.cookie.match(regexp) || loggedIn) {\r\n    var issuedAt = Number(localStorage.getItem(this._prefix+'_issued_at'));\r\n    if (Date.now() < issuedAt + 2 * 60 * 60 * 1000) { // 2 hours\r\n      var userInfo;\r\n      var idUrl = localStorage.getItem(this._prefix + '_id');\r\n      if (idUrl) {\r\n        var ids = idUrl.split('/');\r\n        userInfo = { id: ids.pop(), organizationId: ids.pop(), url: idUrl };\r\n      }\r\n      return {\r\n        accessToken: localStorage.getItem(this._prefix + '_access_token'),\r\n        instanceUrl: localStorage.getItem(this._prefix + '_instance_url'),\r\n        userInfo: userInfo\r\n      };\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nClient.prototype._storeTokens = function(params) {\r\n  localStorage.setItem(this._prefix + '_access_token', params.access_token);\r\n  localStorage.setItem(this._prefix + '_instance_url', params.instance_url);\r\n  localStorage.setItem(this._prefix + '_issued_at', params.issued_at);\r\n  localStorage.setItem(this._prefix + '_id', params.id);\r\n  localStorage.setItem(this._prefix + '_loggedin', 'true');\r\n  document.cookie = this._prefix + '_loggedin=true;';\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nClient.prototype._removeTokens = function() {\r\n  localStorage.removeItem(this._prefix + '_access_token');\r\n  localStorage.removeItem(this._prefix + '_instance_url');\r\n  localStorage.removeItem(this._prefix + '_issued_at');\r\n  localStorage.removeItem(this._prefix + '_id');\r\n  localStorage.removeItem(this._prefix + '_loggedin');\r\n  document.cookie = this._prefix + '_loggedin=';\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nClient.prototype._getError = function() {\r\n  try {\r\n    var err = JSON.parse(localStorage.getItem(this._prefix + '_error'));\r\n    localStorage.removeItem(this._prefix + '_error');\r\n    return err;\r\n  } catch(e) {}\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nClient.prototype._storeError = function(err) {\r\n  localStorage.setItem(this._prefix + '_error', JSON.stringify(err));\r\n};\r\n\r\n/**\r\n *\r\n */\r\nmodule.exports = new Client();\r\n\r\nmodule.exports.Client = Client;\r\n\n},{\"../connection\":9,\"../oauth2\":15,\"events\":36,\"inherits\":38,\"lodash/core\":42,\"querystring\":50}],6:[function(require,module,exports){\n/*global window, document */\r\n'use strict';\r\n\r\nvar _index = 0;\r\n\r\nmodule.exports = {\r\n\r\n  supported: typeof window !== 'undefined' && typeof document !== 'undefined',\r\n\r\n  createRequest: function(jsonpParam, timeout) {\r\n    jsonpParam = jsonpParam || 'callback';\r\n    timeout = timeout || 10000;\r\n\r\n    return function(params, callback) {\r\n      if (params.method.toUpperCase() !== 'GET') {\r\n        return callback(new Error('JSONP only supports GET request.'));\r\n      }\r\n      var cbFuncName = '_jsforce_jsonpCallback_' + (++_index);\r\n      var callbacks = window;\r\n      var url = params.url;\r\n      url += url.indexOf('?')>0 ? '&' : '?';\r\n      url += jsonpParam + '=' + cbFuncName;\r\n\r\n      var script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = url;\r\n      document.documentElement.appendChild(script);\r\n\r\n      var pid = setTimeout(function() {\r\n        cleanup();\r\n        callback(new Error(\"JSONP call time out.\"));\r\n      }, timeout);\r\n\r\n      callbacks[cbFuncName] = function(res) {\r\n        cleanup();\r\n        callback(null, {\r\n          statusCode: 200,\r\n          headers: { \"content-type\": \"application/json\" },\r\n          body: JSON.stringify(res)\r\n        });\r\n      };\r\n\r\n      var cleanup = function() {\r\n        clearTimeout(pid);\r\n        document.documentElement.removeChild(script);\r\n        delete callbacks[cbFuncName];\r\n      };\r\n    };\r\n\r\n  }\r\n\r\n};\n},{}],7:[function(require,module,exports){\n'use strict';\r\n\r\nvar Duplex = require('readable-stream').Duplex;\r\nvar _ = require('lodash/core');\r\n\r\nmodule.exports = function(params, callback) {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open(params.method, params.url);\r\n  if (params.headers) {\r\n    for (var header in params.headers) {\r\n      xhr.setRequestHeader(header, params.headers[header]);\r\n    }\r\n  }\r\n  xhr.setRequestHeader(\"Accept\", \"*/*\");\r\n  var response;\r\n  var str = new Duplex();\r\n  str._read = function(size) {\r\n    if (response) {\r\n      str.push(response.body);\r\n    }\r\n  };\r\n  var bufs = [];\r\n  var sent = false;\r\n  str._write = function(chunk, encoding, callback) {\r\n    bufs.push(chunk.toString(encoding === \"buffer\" ? \"binary\" : encoding));\r\n    callback();\r\n  };\r\n  str.on('finish', function() {\r\n    if (!sent) {\r\n      xhr.send(bufs.join(''));\r\n      sent = true;\r\n    }\r\n  });\r\n  if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {\r\n    xhr.send(params.body);\r\n    sent = true;\r\n  }\r\n  xhr.onreadystatechange = function() {\r\n    if (xhr.readyState === 4) {\r\n      var headerNames = getResponseHeaderNames(xhr);\r\n      var headers = {};\r\n      _.forEach(headerNames, function(headerName) {\r\n        if (headerName) {\r\n          headers[headerName] = xhr.getResponseHeader(headerName);\r\n        }\r\n      });\r\n      response = {\r\n        statusCode: xhr.status,\r\n        headers: headers,\r\n        body: xhr.response\r\n      };\r\n      if (!response.statusCode) {\r\n        response.statusCode = 400;\r\n        response.body = \"Access Declined\";\r\n      }\r\n      if (callback) {\r\n        callback(null, response, response.body);\r\n      }\r\n      str.end();\r\n    }\r\n  };\r\n  return str;\r\n};\r\n\r\nfunction getResponseHeaderNames(xhr) {\r\n  var headerLines = (xhr.getAllResponseHeaders() || \"\").split(/[\\r\\n]+/);\r\n  return _.map(headerLines, function(headerLine) {\r\n    return headerLine.split(/\\s*:/)[0].toLowerCase();\r\n  });\r\n}\r\n\n},{\"lodash/core\":42,\"readable-stream\":61}],8:[function(require,module,exports){\n/**\r\n * @file Manages asynchronous method response cache\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar events = require('events'),\r\n    inherits = require('inherits'),\r\n    _      = require('lodash/core');\r\n\r\n/**\r\n * Class for managing cache entry\r\n *\r\n * @private\r\n * @class\r\n * @constructor\r\n * @template T\r\n */\r\nvar CacheEntry = function() {\r\n  this.fetching = false;\r\n};\r\n\r\ninherits(CacheEntry, events.EventEmitter);\r\n\r\n/**\r\n * Get value in the cache entry\r\n *\r\n * @param {Callback.<T>} [callback] - Callback function callbacked the cache entry updated\r\n * @returns {T|undefined}\r\n */\r\nCacheEntry.prototype.get = function(callback) {\r\n  if (!callback) {\r\n    return this._value;\r\n  } else {\r\n    this.once('value', callback);\r\n    if (!_.isUndefined(this._value)) {\r\n      this.emit('value', this._value);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Set value in the cache entry\r\n *\r\n * @param {T} [value] - A value for caching\r\n */\r\nCacheEntry.prototype.set = function(value) {\r\n  this._value = value;\r\n  this.emit('value', this._value);\r\n};\r\n\r\n/**\r\n * Clear cached value\r\n */\r\nCacheEntry.prototype.clear = function() {\r\n  this.fetching = false;\r\n  delete this._value;\r\n};\r\n\r\n\r\n/**\r\n * Caching manager for async methods\r\n *\r\n * @class\r\n * @constructor\r\n */\r\nvar Cache = function() {\r\n  this._entries = {};\r\n};\r\n\r\n/**\r\n * retrive cache entry, or create if not exists.\r\n *\r\n * @param {String} [key] - Key of cache entry\r\n * @returns {CacheEntry}\r\n */\r\nCache.prototype.get = function(key) {\r\n  if (key && this._entries[key]) {\r\n    return this._entries[key];\r\n  } else {\r\n    var entry = new CacheEntry();\r\n    this._entries[key] = entry;\r\n    return entry;\r\n  }\r\n};\r\n\r\n/**\r\n * clear cache entries prefix matching given key\r\n * @param {String} [key] - Key prefix of cache entry to clear\r\n */\r\nCache.prototype.clear = function(key) {\r\n  for (var k in this._entries) {\r\n    if (!key || k.indexOf(key) === 0) {\r\n      this._entries[k].clear();\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * create and return cache key from namespace and serialized arguments.\r\n * @private\r\n */\r\nfunction createCacheKey(namespace, args) {\r\n  args = Array.prototype.slice.apply(args);\r\n  return namespace + '(' + _.map(args, function(a){ return JSON.stringify(a); }).join(',') + ')';\r\n}\r\n\r\n/**\r\n * Enable caching for async call fn to intercept the response and store it to cache.\r\n * The original async calll fn is always invoked.\r\n *\r\n * @protected\r\n * @param {Function} fn - Function to covert cacheable\r\n * @param {Object} [scope] - Scope of function call\r\n * @param {Object} [options] - Options\r\n * @return {Function} - Cached version of function\r\n */\r\nCache.prototype.makeResponseCacheable = function(fn, scope, options) {\r\n  var cache = this;\r\n  options = options || {};\r\n  return function() {\r\n    var args = Array.prototype.slice.apply(arguments);\r\n    var callback = args.pop();\r\n    if (!_.isFunction(callback)) {\r\n      args.push(callback);\r\n      callback = null;\r\n    }\r\n    var key = _.isString(options.key) ? options.key :\r\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\r\n              createCacheKey(options.namespace, args);\r\n    var entry = cache.get(key);\r\n    entry.fetching = true;\r\n    if (callback) {\r\n      args.push(function(err, result) {\r\n        entry.set({ error: err, result: result });\r\n        callback(err, result);\r\n      });\r\n    }\r\n    var ret, error;\r\n    try {\r\n      ret = fn.apply(scope || this, args);\r\n    } catch(e) {\r\n      error = e;\r\n    }\r\n    if (ret && _.isFunction(ret.then)) { // if the returned value is promise\r\n      if (!callback) {\r\n        return ret.then(function(result) {\r\n          entry.set({ error: undefined, result: result });\r\n          return result;\r\n        }, function(err) {\r\n          entry.set({ error: err, result: undefined });\r\n          throw err;\r\n        });\r\n      } else {\r\n        return ret;\r\n      }\r\n    } else {\r\n      entry.set({ error: error, result: ret });\r\n      if (error) { throw error; }\r\n      return ret;\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Enable caching for async call fn to lookup the response cache first, then invoke original if no cached value.\r\n *\r\n * @protected\r\n * @param {Function} fn - Function to covert cacheable\r\n * @param {Object} [scope] - Scope of function call\r\n * @param {Object} [options] - Options\r\n * @return {Function} - Cached version of function\r\n */\r\nCache.prototype.makeCacheable = function(fn, scope, options) {\r\n  var cache = this;\r\n  options = options || {};\r\n  var $fn = function() {\r\n    var args = Array.prototype.slice.apply(arguments);\r\n    var callback = args.pop();\r\n    if (!_.isFunction(callback)) {\r\n      args.push(callback);\r\n    }\r\n    var key = _.isString(options.key) ? options.key :\r\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\r\n              createCacheKey(options.namespace, args);\r\n    var entry = cache.get(key);\r\n    if (!_.isFunction(callback)) { // if callback is not given in last arg, return cached result (immediate).\r\n      var value = entry.get();\r\n      if (!value) { throw new Error('Function call result is not cached yet.'); }\r\n      if (value.error) { throw value.error; }\r\n      return value.result;\r\n    }\r\n    entry.get(function(value) {\r\n      callback(value.error, value.result);\r\n    });\r\n    if (!entry.fetching) { // only when no other client is calling function\r\n      entry.fetching = true;\r\n      args.push(function(err, result) {\r\n        entry.set({ error: err, result: result });\r\n      });\r\n      fn.apply(scope || this, args);\r\n    }\r\n  };\r\n  $fn.clear = function() {\r\n    var key = _.isString(options.key) ? options.key :\r\n              _.isFunction(options.key) ? options.key.apply(scope, arguments) :\r\n              createCacheKey(options.namespace, arguments);\r\n    cache.clear(key);\r\n  };\r\n  return $fn;\r\n};\r\n\r\n\r\nmodule.exports = Cache;\r\n\n},{\"events\":36,\"inherits\":38,\"lodash/core\":42}],9:[function(require,module,exports){\n(function (Buffer){\n/*global Buffer */\r\n/**\r\n * @file Connection class to keep the API session information and manage requests\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar events  = require('events'),\r\n    inherits = require('inherits'),\r\n    _       = require('lodash/core'),\r\n    Promise = require('./promise'),\r\n    Logger  = require('./logger'),\r\n    OAuth2  = require('./oauth2'),\r\n    Query   = require('./query'),\r\n    SObject = require('./sobject'),\r\n    QuickAction = require('./quick-action'),\r\n    HttpApi = require('./http-api'),\r\n    Transport = require('./transport'),\r\n    Process = require('./process'),\r\n    Cache   = require('./cache');\r\n\r\nvar defaults = {\r\n  loginUrl: \"https://login.salesforce.com\",\r\n  instanceUrl: \"\",\r\n  version: \"42.0\"\r\n};\r\n\r\n/*\r\n * Constant of maximum records num in DML operation (update/delete)\r\n */\r\nvar MAX_DML_COUNT = 200;\r\n\r\n\r\n/**\r\n * Connection class to keep the API session information and manage requests\r\n *\r\n * @constructor\r\n * @extends events.EventEmitter\r\n * @param {Object} [options] - Connection options\r\n * @param {OAuth2|Object} [options.oauth2] - OAuth2 instance or options to be passed to OAuth2 constructor\r\n * @param {String} [options.logLevel] - Output logging level (DEBUG|INFO|WARN|ERROR|FATAL)\r\n * @param {String} [options.version] - Salesforce API Version (without \"v\" prefix)\r\n * @param {Number} [options.maxRequest] - Max number of requests allowed in parallel call\r\n * @param {String} [options.loginUrl] - Salesforce Login Server URL (e.g. https://login.salesforce.com/)\r\n * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\r\n * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\r\n * @param {String} [options.accessToken] - Salesforce OAuth2 access token\r\n * @param {String} [options.sessionId] - Salesforce session ID\r\n * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token\r\n * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)\r\n * @param {String} [options.proxyUrl] - Cross-domain proxy server URL, used in browser client, non Visualforce app.\r\n * @param {String} [options.httpProxy] - URL of HTTP proxy server, used in server client.\r\n * @param {Object} [options.callOptions] - Call options used in each SOAP/REST API request. See manual.\r\n */\r\nvar Connection = module.exports = function(options) {\r\n  options = options || {};\r\n\r\n  this._logger = new Logger(options.logLevel);\r\n\r\n  var oauth2 = options.oauth2 || {\r\n    loginUrl : options.loginUrl,\r\n    clientId : options.clientId,\r\n    clientSecret : options.clientSecret,\r\n    redirectUri : options.redirectUri,\r\n    proxyUrl: options.proxyUrl,\r\n    httpProxy: options.httpProxy\r\n  };\r\n\r\n  /**\r\n   * OAuth2 object\r\n   * @member {OAuth2} Connection#oauth2\r\n   */\r\n  this.oauth2 = oauth2 = oauth2 instanceof OAuth2 ? oauth2 : new OAuth2(oauth2);\r\n\r\n  this.loginUrl = options.loginUrl || oauth2.loginUrl || defaults.loginUrl;\r\n  this.version = options.version || defaults.version;\r\n  this.maxRequest = options.maxRequest || this.maxRequest || 10;\r\n\r\n  /** @private */\r\n  if (options.proxyUrl) {\r\n    this._transport = new Transport.ProxyTransport(options.proxyUrl);\r\n  } else if (options.httpProxy) {\r\n    this._transport = new Transport.HttpProxyTransport(options.httpProxy);\r\n  } else {\r\n    this._transport = new Transport();\r\n  }\r\n\r\n  this.callOptions = options.callOptions;\r\n\r\n  /*\r\n   * Fire connection:new event to notify jsforce plugin modules\r\n   */\r\n  var jsforce = require('./core');\r\n  jsforce.emit('connection:new', this);\r\n\r\n  /**\r\n   * Streaming API object\r\n   * @member {Streaming} Connection#streaming\r\n   */\r\n  // this.streaming = new Streaming(this);\r\n  /**\r\n   * Bulk API object\r\n   * @member {Bulk} Connection#bulk\r\n   */\r\n  // this.bulk = new Bulk(this);\r\n  /**\r\n   * Tooling API object\r\n   * @member {Tooling} Connection#tooling\r\n   */\r\n  // this.tooling = new Tooling(this);\r\n  /**\r\n   * Analytics API object\r\n   * @member {Analytics} Connection#analytics\r\n   */\r\n  // this.analytics = new Analytics(this);\r\n  /**\r\n   * Chatter API object\r\n   * @member {Chatter} Connection#chatter\r\n   */\r\n  // this.chatter = new Chatter(this);\r\n  /**\r\n   * Metadata API object\r\n   * @member {Metadata} Connection#metadata\r\n   */\r\n  // this.metadata = new Metadata(this);\r\n\r\n  /**\r\n   * SOAP API object\r\n   * @member {SoapApi} Connection#soap\r\n   */\r\n  // this.soap = new SoapApi(this);\r\n\r\n  /**\r\n   * Apex REST API object\r\n   * @member {Apex} Connection#apex\r\n   */\r\n  // this.apex = new Apex(this);\r\n\r\n  /**\r\n   * @member {Process} Connection#process\r\n   */\r\n  this.process = new Process(this);\r\n\r\n  /**\r\n   * Cache object for result\r\n   * @member {Cache} Connection#cache\r\n   */\r\n  this.cache = new Cache();\r\n\r\n  // Allow to delegate connection refresh to outer function\r\n  var self = this;\r\n  var refreshFn = options.refreshFn;\r\n  if (!refreshFn && this.oauth2.clientId) {\r\n    refreshFn = oauthRefreshFn;\r\n  }\r\n  if (refreshFn) {\r\n    this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, refreshFn);\r\n  }\r\n\r\n  var cacheOptions = {\r\n    key: function(type) { return type ? \"describe.\" + type : \"describe\"; }\r\n  };\r\n  this.describe$ = this.cache.makeCacheable(this.describe, this, cacheOptions);\r\n  this.describe = this.cache.makeResponseCacheable(this.describe, this, cacheOptions);\r\n  this.describeSObject$ = this.describe$;\r\n  this.describeSObject = this.describe;\r\n\r\n  cacheOptions = { key: 'describeGlobal' };\r\n  this.describeGlobal$ = this.cache.makeCacheable(this.describeGlobal, this, cacheOptions);\r\n  this.describeGlobal = this.cache.makeResponseCacheable(this.describeGlobal, this, cacheOptions);\r\n\r\n  this.initialize(options);\r\n};\r\n\r\ninherits(Connection, events.EventEmitter);\r\n\r\n/**\r\n * Initialize connection.\r\n *\r\n * @protected\r\n * @param {Object} options - Initialization options\r\n * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\r\n * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\r\n * @param {String} [options.accessToken] - Salesforce OAuth2 access token\r\n * @param {String} [options.sessionId] - Salesforce session ID\r\n * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token\r\n * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)\r\n * @param {UserInfo} [options.userInfo] - Logged in user information\r\n */\r\nConnection.prototype.initialize = function(options) {\r\n  if (!options.instanceUrl && options.serverUrl) {\r\n    options.instanceUrl = options.serverUrl.split('/').slice(0, 3).join('/');\r\n  }\r\n  this.instanceUrl = options.instanceUrl || options.serverUrl || this.instanceUrl || defaults.instanceUrl;\r\n\r\n  this.accessToken = options.sessionId || options.accessToken || this.accessToken;\r\n  this.refreshToken = options.refreshToken || this.refreshToken;\r\n  if (this.refreshToken && !this._refreshDelegate) {\r\n    throw new Error(\"Refresh token is specified without oauth2 client information or refresh function\");\r\n  }\r\n\r\n  this.signedRequest = options.signedRequest && parseSignedRequest(options.signedRequest);\r\n  if (this.signedRequest) {\r\n    this.accessToken = this.signedRequest.client.oauthToken;\r\n    if (Transport.CanvasTransport.supported) {\r\n      this._transport = new Transport.CanvasTransport(this.signedRequest);\r\n    }\r\n  }\r\n\r\n  if (options.userInfo) {\r\n    this.userInfo = options.userInfo;\r\n  }\r\n\r\n  this.limitInfo = {};\r\n\r\n  this.sobjects = {};\r\n  this.cache.clear();\r\n  this.cache.get('describeGlobal').removeAllListeners('value');\r\n  this.cache.get('describeGlobal').on('value', _.bind(function(res) {\r\n    if (res.result) {\r\n      var types = _.map(res.result.sobjects, function(so) { return so.name; });\r\n      types.forEach(this.sobject, this);\r\n    }\r\n  }, this));\r\n\r\n  if (this.tooling) {\r\n    this.tooling.initialize();\r\n  }\r\n\r\n  this._sessionType = options.sessionId ? \"soap\" : \"oauth2\";\r\n\r\n};\r\n\r\n/** @private **/\r\nfunction oauthRefreshFn(conn, callback) {\r\n  conn.oauth2.refreshToken(conn.refreshToken, function(err, res) {\r\n    if (err) { return callback(err); }\r\n    var userInfo = parseIdUrl(res.id);\r\n    conn.initialize({\r\n      instanceUrl : res.instance_url,\r\n      accessToken : res.access_token,\r\n      userInfo : userInfo\r\n    });\r\n    callback(null, res.access_token, res);\r\n  });\r\n}\r\n\r\n/** @private **/\r\nfunction parseSignedRequest(sr) {\r\n  if (_.isString(sr)) {\r\n    if (sr[0] === '{') { // might be JSON\r\n      return JSON.parse(sr);\r\n    } else { // might be original base64-encoded signed request\r\n      var msg = sr.split('.').pop(); // retrieve latter part\r\n      var json = Buffer.from(msg, 'base64').toString('utf-8');\r\n      return JSON.parse(json);\r\n    }\r\n    return null;\r\n  }\r\n  return sr;\r\n}\r\n\r\n\r\n/** @private **/\r\nConnection.prototype._baseUrl = function() {\r\n  return [ this.instanceUrl, \"services/data\", \"v\" + this.version ].join('/');\r\n};\r\n\r\n/**\r\n * Convert path to absolute url\r\n * @private\r\n */\r\nConnection.prototype._normalizeUrl = function(url) {\r\n  if (url[0] === '/') {\r\n    if (url.indexOf('/services/') === 0) {\r\n      return this.instanceUrl + url;\r\n    } else {\r\n      return this._baseUrl() + url;\r\n    }\r\n  } else {\r\n    return url;\r\n  }\r\n};\r\n\r\n/**\r\n * Send REST API request with given HTTP request info, with connected session information.\r\n *\r\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\r\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\r\n * , or relative path from version root ('/sobjects/Account/describe').\r\n *\r\n * @param {String|Object} request - HTTP request object or URL to GET request\r\n * @param {String} request.method - HTTP method URL to send HTTP request\r\n * @param {String} request.url - URL to send HTTP request\r\n * @param {Object} [request.headers] - HTTP request headers in hash object (key-value)\r\n * @param {Object} [options] - HTTP API request options\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nConnection.prototype.request = function(request, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = null;\r\n  }\r\n  options = options || {};\r\n  var self = this;\r\n\r\n  // if request is simple string, regard it as url in GET method\r\n  if (_.isString(request)) {\r\n    request = { method: 'GET', url: request };\r\n  }\r\n  // if url is given in relative path, prepend base url or instance url before.\r\n  request.url = this._normalizeUrl(request.url);\r\n\r\n  var httpApi = new HttpApi(this, options);\r\n\r\n  // log api usage and its quota\r\n  httpApi.on('response', function(response) {\r\n    if (response.headers && response.headers[\"sforce-limit-info\"]) {\r\n      var apiUsage = response.headers[\"sforce-limit-info\"].match(/api\\-usage=(\\d+)\\/(\\d+)/);\r\n      if (apiUsage) {\r\n        self.limitInfo = {\r\n          apiUsage: {\r\n            used: parseInt(apiUsage[1], 10),\r\n            limit: parseInt(apiUsage[2], 10)\r\n          }\r\n        };\r\n      }\r\n    }\r\n  });\r\n  return httpApi.request(request).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Send HTTP GET request\r\n *\r\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\r\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\r\n * , or relative path from version root ('/sobjects/Account/describe').\r\n *\r\n * @param {String} url - Endpoint URL to request HTTP GET\r\n * @param {Object} [options] - HTTP API request options\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nConnection.prototype.requestGet = function(url, options, callback) {\r\n  var request = {\r\n    method: \"GET\",\r\n    url: url\r\n  };\r\n  return this.request(request, options, callback);\r\n};\r\n\r\n\r\n/**\r\n * Send HTTP POST request with JSON body, with connected session information\r\n *\r\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\r\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\r\n * , or relative path from version root ('/sobjects/Account/describe').\r\n *\r\n * @param {String} url - Endpoint URL to request HTTP POST\r\n * @param {Object} body - Any JS object which can be serialized to JSON\r\n * @param {Object} [options] - HTTP API request options\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nConnection.prototype.requestPost = function(url, body, options, callback) {\r\n  var request = {\r\n    method: \"POST\",\r\n    url: url,\r\n    body: JSON.stringify(body),\r\n    headers: { \"content-type\": \"application/json\" }\r\n  };\r\n  return this.request(request, options, callback);\r\n};\r\n\r\n/**\r\n * Send HTTP PUT request with JSON body, with connected session information\r\n *\r\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\r\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\r\n * , or relative path from version root ('/sobjects/Account/describe').\r\n *\r\n * @param {String} url - Endpoint URL to request HTTP PUT\r\n * @param {Object} body - Any JS object which can be serialized to JSON\r\n * @param {Object} [options] - HTTP API request options\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nConnection.prototype.requestPut = function(url, body, options, callback) {\r\n  var request = {\r\n    method: \"PUT\",\r\n    url: url,\r\n    body: JSON.stringify(body),\r\n    headers: { \"content-type\": \"application/json\" }\r\n  };\r\n  return this.request(request, options, callback);\r\n};\r\n\r\n/**\r\n * Send HTTP PATCH request with JSON body\r\n *\r\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\r\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\r\n * , or relative path from version root ('/sobjects/Account/describe').\r\n *\r\n * @param {String} url - Endpoint URL to request HTTP PATCH\r\n * @param {Object} body - Any JS object which can be serialized to JSON\r\n * @param {Object} [options] - HTTP API request options\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nConnection.prototype.requestPatch = function(url, body, options, callback) {\r\n  var request = {\r\n    method: \"PATCH\",\r\n    url: url,\r\n    body: JSON.stringify(body),\r\n    headers: { \"content-type\": \"application/json\" }\r\n  };\r\n  return this.request(request, options, callback);\r\n};\r\n\r\n/**\r\n * Send HTTP DELETE request\r\n *\r\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\r\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\r\n * , or relative path from version root ('/sobjects/Account/describe').\r\n *\r\n * @param {String} url - Endpoint URL to request HTTP DELETE\r\n * @param {Object} [options] - HTTP API request options\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nConnection.prototype.requestDelete = function(url, options, callback) {\r\n  var request = {\r\n    method: \"DELETE\",\r\n    url: url\r\n  };\r\n  return this.request(request, options, callback);\r\n};\r\n\r\n\r\n/** @private */\r\nfunction formatDate(date) {\r\n  function pad(number) {\r\n    if (number < 10) {\r\n      return '0' + number;\r\n    }\r\n    return number;\r\n  }\r\n\r\n  return date.getUTCFullYear() +\r\n    '-' + pad(date.getUTCMonth() + 1) +\r\n    '-' + pad(date.getUTCDate()) +\r\n    'T' + pad(date.getUTCHours()) +\r\n    ':' + pad(date.getUTCMinutes()) +\r\n    ':' + pad(date.getUTCSeconds()) +\r\n    '+00:00';\r\n}\r\n\r\n\r\n/** @private **/\r\nfunction parseIdUrl(idUrl) {\r\n  var idUrls = idUrl.split(\"/\");\r\n  var userId = idUrls.pop(), orgId = idUrls.pop();\r\n  return {\r\n    id: userId,\r\n    organizationId: orgId,\r\n    url: idUrl\r\n  };\r\n}\r\n\r\n/**\r\n * @callback Callback\r\n * @type {Function}\r\n * @param {Error} err - Callback error\r\n * @param {T} response - Callback response\r\n * @template T\r\n */\r\n\r\n/**\r\n * @typedef {Object} QueryResult\r\n * @prop {Boolean} done - Flag if the query is fetched all records or not\r\n * @prop {String} [nextRecordsUrl] - URL locator for next record set, (available when done = false)\r\n * @prop {Number} totalSize - Total size for query\r\n * @prop {Array.<Record>} [records] - Array of records fetched\r\n */\r\n\r\n/**\r\n * Execute query by using SOQL\r\n *\r\n * @param {String} soql - SOQL string\r\n * @param {Object} [options] - Query options\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n * @param {Callback.<QueryResult>} [callback] - Callback function\r\n * @returns {Query.<QueryResult>}\r\n */\r\nConnection.prototype.query = function(soql, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = undefined;\r\n  }\r\n  var query = new Query(this, soql, options);\r\n  if (callback) {\r\n    query.run(callback);\r\n  }\r\n  return query;\r\n};\r\n\r\n/**\r\n * Execute query by using SOQL, including deleted records\r\n *\r\n * @param {String} soql - SOQL string\r\n * @param {Object} [options] - Query options\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n * @param {Callback.<QueryResult>} [callback] - Callback function\r\n * @returns {Query.<QueryResult>}\r\n */\r\nConnection.prototype.queryAll = function(soql, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = undefined;\r\n  }\r\n  var query = new Query(this, soql, options);\r\n  query.scanAll(true);\r\n  if (callback) {\r\n    query.run(callback);\r\n  }\r\n  return query;\r\n};\r\n\r\n/**\r\n * Query next record set by using query locator\r\n *\r\n * @param {String} locator - Next record set locator\r\n * @param {Object} [options] - Query options\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n * @param {Callback.<QueryResult>} [callback] - Callback function\r\n * @returns {Query.<QueryResult>}\r\n */\r\nConnection.prototype.queryMore = function(locator, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = undefined;\r\n  }\r\n  var query = new Query(this, { locator: locator }, options);\r\n  if (callback) {\r\n    query.run(callback);\r\n  }\r\n  return query;\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._ensureVersion = function(majorVersion) {\r\n  var versions = this.version.split('.');\r\n  return parseInt(versions[0], 10) >= majorVersion;\r\n}\r\n\r\n/** @private */\r\nConnection.prototype._supports = function(feature) {\r\n  switch (feature) {\r\n    case 'sobject-collection':\r\n      return this._ensureVersion(42);\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Retrieve specified records\r\n *\r\n * @param {String} type - SObject Type\r\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Array.<String>} [options.fields] - Fetching field names in retrieving record\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\r\n * @returns {Promise.<Record|Array.<Record>>}\r\n */\r\nConnection.prototype.retrieve = function(type, ids, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  return (\r\n    _.isArray(ids) ?\r\n      (this._supports('sobject-collection') ? // check whether SObject collection API is supported\r\n        this._retrieveMany(type, ids, options) :\r\n        this._retrieveParallel(type, ids, options)) :\r\n      this._retrieveSingle(type, ids, options)\r\n  ).thenCall(callback);\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._retrieveSingle = function(type, id, options) {\r\n  if (!id) {\r\n    return Promise.reject(new Error('Invalid record ID. Specify valid record ID value'));\r\n  }\r\n  var url = [ this._baseUrl(), \"sobjects\", type, id ].join('/');\r\n  if (options.fields) {\r\n    url += '?fields=' + options.fields.join(',');\r\n  }\r\n  return this.request({\r\n    method: 'GET',\r\n    url: url,\r\n    headers: options.headers,\r\n  });\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._retrieveParallel = function(type, ids, options) {\r\n  if (ids.length > this.maxRequest) {\r\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\r\n  }\r\n  var self = this;\r\n  return Promise.all(\r\n    ids.map(function(id) {\r\n      return self._retrieveSingle(type, id, options).catch(function(err) {\r\n        if (options.allOrNone || err.errorCode !== 'NOT_FOUND') {\r\n          throw err;\r\n        }\r\n        return null;\r\n      });\r\n    })\r\n  );\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._retrieveMany = function(type, ids, options) {\r\n  if (ids.length === 0) {\r\n    return Promise.resolve([]);\r\n  }\r\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\", type ].join('/');\r\n  var self = this;\r\n  return (\r\n    options.fields ?\r\n      Promise.resolve(options.fields) :\r\n      new Promise(function(resolve, reject) {\r\n        self.describe$(type, function(err, so) {\r\n          if (err) {\r\n            reject(err);\r\n          } else {\r\n            var fields = so.fields.map(function(field) {\r\n              return field.name;\r\n            });\r\n            resolve(fields);\r\n          }\r\n        });\r\n      })\r\n  ).then(function(fields) {\r\n    return self.request({\r\n      method : 'POST',\r\n      url : url,\r\n      body : JSON.stringify({\r\n        ids : ids,\r\n        fields : fields\r\n      }),\r\n      headers : _.defaults(options.headers || {}, {\r\n        \"Content-Type\" : \"application/json\"\r\n      })\r\n    });\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * @typedef RecordResult\r\n * @prop {Boolean} success - The result is succeessful or not\r\n * @prop {String} [id] - Record ID\r\n * @prop {Array.<Object>} [errors] - Errors (available when success = false)\r\n */\r\n\r\n/** @private */\r\nConnection.prototype._toRecordResult = function(id, err) {\r\n  var error = {\r\n    statusCode: err.errorCode,\r\n    message: err.message\r\n  };\r\n  if (err.content) { error.content = err.content; } // preserve External id duplication message\r\n  if (err.fields) { error.fields = err.fields; } // preserve DML exception occurred fields\r\n  var result = {\r\n    success: false,\r\n    errors: [error]\r\n  };\r\n  if (id) { result.id = id; }\r\n  return result;\r\n};\r\n\r\n/**\r\n * Synonym of Connection#create()\r\n *\r\n * @method Connection#insert\r\n * @param {String} type - SObject Type\r\n * @param {Object|Array.<Object>} records - A record or array of records to create\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Create records\r\n *\r\n * @method Connection#create\r\n * @param {String} type - SObject Type\r\n * @param {Record|Array.<Record>} records - A record or array of records to create\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nConnection.prototype.insert =\r\nConnection.prototype.create = function(type, records, options, callback) {\r\n  if (!_.isString(type)) {\r\n    // reverse order\r\n    callback = options;\r\n    options = records;\r\n    records = type;\r\n    type = null;\r\n  }\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  return (\r\n    _.isArray(records) ?\r\n      (this._supports('sobject-collection') ? // check whether SObject collection API is supported\r\n        this._createMany(type, records, options) :\r\n        this._createParallel(type, records, options)) :\r\n      this._createSingle(type, records, options)\r\n  ).thenCall(callback);\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._createSingle = function(type, record, options) {\r\n  var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\r\n  if (!sobjectType) {\r\n    return Promise.reject(new Error('No SObject Type defined in record'));\r\n  }\r\n  record = _.clone(record);\r\n  delete record.Id;\r\n  delete record.type;\r\n  delete record.attributes;\r\n  var url = [ this._baseUrl(), \"sobjects\", sobjectType ].join('/');\r\n  return this.request({\r\n    method : 'POST',\r\n    url : url,\r\n    body : JSON.stringify(record),\r\n    headers : _.defaults(options.headers || {}, {\r\n      \"Content-Type\" : \"application/json\"\r\n    })\r\n  });\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._createParallel = function(type, records, options) {\r\n  if (records.length > this.maxRequest) {\r\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\r\n  }\r\n  var self = this;\r\n  return Promise.all(\r\n    records.map(function(record) {\r\n      return self._createSingle(type, record, options).catch(function(err) {\r\n        // be aware that allOrNone in parallel mode will not revert the other successful requests\r\n        // it only raises error when met at least one failed request.\r\n        if (options.allOrNone || !err.errorCode) {\r\n          throw err;\r\n        }\r\n        return this._toRecordResult(null, err);\r\n      });\r\n    })\r\n  );\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._createMany = function(type, records, options) {\r\n  if (records.length === 0) {\r\n    return Promise.resolve([]);\r\n  }\r\n  if (records.length > MAX_DML_COUNT && options.allowRecursive) {\r\n    var self = this;\r\n    return self._createMany(type, records.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\r\n      return self._createMany(type, records.slice(MAX_DML_COUNT), options).then(function(rets2) {\r\n        return rets1.concat(rets2);\r\n      });\r\n    });\r\n  }\r\n  records = _.map(records, function(record) {\r\n    var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\r\n    if (!sobjectType) {\r\n      return Promise.reject(new Error('No SObject Type defined in record'));\r\n    }\r\n    record = _.clone(record);\r\n    delete record.Id;\r\n    delete record.type;\r\n    record.attributes = { type : sobjectType };\r\n    return record;\r\n  });\r\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\" ].join('/');\r\n  return this.request({\r\n    method : 'POST',\r\n    url : url,\r\n    body : JSON.stringify({\r\n      allOrNone : options.allOrNone || false,\r\n      records : records\r\n    }),\r\n    headers : _.defaults(options.headers || {}, {\r\n      \"Content-Type\" : \"application/json\"\r\n    })\r\n  });\r\n};\r\n\r\n/**\r\n * Update records\r\n *\r\n * @param {String} type - SObject Type\r\n * @param {Record|Array.<Record>} records - A record or array of records to update\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nConnection.prototype.update = function(type, records, options, callback) {\r\n  if (!_.isString(type)) {\r\n    // reverse order\r\n    callback = options;\r\n    options = records;\r\n    records = type;\r\n    type = null;\r\n  }\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  return (\r\n    _.isArray(records) ?\r\n      (this._supports('sobject-collection') ? // check whether SObject collection API is supported\r\n        this._updateMany(type, records, options) :\r\n        this._updateParallel(type, records, options)) :\r\n      this._updateSingle(type, records, options)\r\n  ).thenCall(callback);\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._updateSingle = function(type, record, options) {\r\n  var id = record.Id;\r\n  if (!id) {\r\n    return Promise.reject(new Error('Record id is not found in record.'));\r\n  }\r\n  var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\r\n  if (!sobjectType) {\r\n    return Promise.reject(new Error('No SObject Type defined in record'));\r\n  }\r\n  record = _.clone(record);\r\n  delete record.Id;\r\n  delete record.type;\r\n  delete record.attributes;\r\n  var url = [ this._baseUrl(), \"sobjects\", sobjectType, id ].join('/');\r\n  return this.request({\r\n    method : 'PATCH',\r\n    url : url,\r\n    body : JSON.stringify(record),\r\n    headers : _.defaults(options.headers || {}, {\r\n      \"Content-Type\" : \"application/json\"\r\n    })\r\n  }, {\r\n    noContentResponse: { id : id, success : true, errors : [] }\r\n  });\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._updateParallel = function(type, records, options) {\r\n  if (records.length > this.maxRequest) {\r\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\r\n  }\r\n  var self = this;\r\n  return Promise.all(\r\n    records.map(function(record) {\r\n      return self._updateSingle(type, record, options).catch(function(err) {\r\n        // be aware that allOrNone in parallel mode will not revert the other successful requests\r\n        // it only raises error when met at least one failed request.\r\n        if (options.allOrNone || !err.errorCode) {\r\n          throw err;\r\n        }\r\n        return this._toRecordResult(record.Id, err);\r\n      });\r\n    })\r\n  );\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._updateMany = function(type, records, options) {\r\n  if (records.length === 0) {\r\n    return Promise.resolve([]);\r\n  }\r\n  if (records.length > MAX_DML_COUNT && options.allowRecursive) {\r\n    var self = this;\r\n    return self._updateMany(type, records.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\r\n      return self._updateMany(type, records.slice(MAX_DML_COUNT), options).then(function(rets2) {\r\n        return rets1.concat(rets2);\r\n      });\r\n    });\r\n  }\r\n  records = _.map(records, function(record) {\r\n    var id = record.Id;\r\n    if (!id) {\r\n      throw new Error('Record id is not found in record.');\r\n    }\r\n    var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\r\n    if (!sobjectType) {\r\n      throw new Error('No SObject Type defined in record');\r\n    }\r\n    record = _.clone(record);\r\n    delete record.Id;\r\n    record.id = id;\r\n    delete record.type;\r\n    record.attributes = { type : sobjectType };\r\n    return record;\r\n  });\r\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\" ].join('/');\r\n  return this.request({\r\n    method : 'PATCH',\r\n    url : url,\r\n    body : JSON.stringify({\r\n      allOrNone : options.allOrNone || false,\r\n      records : records\r\n    }),\r\n    headers : _.defaults(options.headers || {}, {\r\n      \"Content-Type\" : \"application/json\"\r\n    })\r\n  });\r\n};\r\n\r\n/**\r\n * Upsert records\r\n *\r\n * @param {String} type - SObject Type\r\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\r\n * @param {String} extIdField - External ID field name\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nConnection.prototype.upsert = function(type, records, extIdField, options, callback) {\r\n  // You can omit \"type\" argument, when the record includes type information.\r\n  if (!_.isString(type)) {\r\n    // reverse order\r\n    callback = options;\r\n    options = extIdField;\r\n    extIdField = records;\r\n    records = type;\r\n    type = null;\r\n  }\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  var self = this;\r\n  var isArray = _.isArray(records);\r\n  records = isArray ? records : [ records ];\r\n  if (records.length > this.maxRequest) {\r\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);\r\n  }\r\n  return Promise.all(\r\n    _.map(records, function(record) {\r\n      var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\r\n      var extId = record[extIdField];\r\n      record = _.clone(record);\r\n      delete record[extIdField];\r\n      delete record.type;\r\n      delete record.attributes;\r\n\r\n      var url = [ self._baseUrl(), \"sobjects\", sobjectType, extIdField, extId ].join('/');\r\n      return self.request({\r\n        method : 'PATCH',\r\n        url : url,\r\n        body : JSON.stringify(record),\r\n        headers : _.defaults(options.headers || {}, {\r\n          \"Content-Type\" : \"application/json\"\r\n        })\r\n      }, {\r\n        noContentResponse: { success : true, errors : [] }\r\n      })\r\n      .catch(function(err) {\r\n        // be aware that `allOrNone` option in upsert method will not revert the other successful requests\r\n        // it only raises error when met at least one failed request.\r\n        if (!isArray || options.allOrNone || !err.errorCode) { throw err; }\r\n        return self._toRecordResult(null, err);\r\n      })\r\n    })\r\n  ).then(function(results) {\r\n    return !isArray && _.isArray(results) ? results[0] : results;\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Synonym of Connection#destroy()\r\n *\r\n * @method Connection#delete\r\n * @param {String} type - SObject Type\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Synonym of Connection#destroy()\r\n *\r\n * @method Connection#del\r\n * @param {String} type - SObject Type\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Delete records\r\n *\r\n * @method Connection#destroy\r\n * @param {String} type - SObject Type\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nConnection.prototype[\"delete\"] =\r\nConnection.prototype.del =\r\nConnection.prototype.destroy = function(type, ids, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  return (\r\n    _.isArray(ids) ?\r\n      (this._supports('sobject-collection') ? // check whether SObject collection API is supported\r\n        this._destroyMany(type, ids, options) :\r\n        this._destroyParallel(type, ids, options)) :\r\n      this._destroySingle(type, ids, options)\r\n  ).thenCall(callback);\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._destroySingle = function(type, id, options) {\r\n  var url = [ this._baseUrl(), \"sobjects\", type, id ].join('/');\r\n  return this.request({\r\n    method : 'DELETE',\r\n    url : url,\r\n    headers: options.headers || null\r\n  }, {\r\n    noContentResponse: { id : id, success : true, errors : [] }\r\n  });\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._destroyParallel = function(type, ids, options) {\r\n  if (ids.length > this.maxRequest) {\r\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\r\n  }\r\n  var self = this;\r\n  return Promise.all(\r\n    ids.map(function(id) {\r\n      return self._destroySingle(type, id, options).catch(function(err) {\r\n        // be aware that `allOrNone` option in parallel mode will not revert the other successful requests\r\n        // it only raises error when met at least one failed request.\r\n        if (options.allOrNone || !err.errorCode) {\r\n          throw err;\r\n        }\r\n        return this._toRecordResult(id, err);\r\n      });\r\n    })\r\n  );\r\n};\r\n\r\n\r\n/** @private */\r\nConnection.prototype._destroyMany = function(type, ids, options) {\r\n  if (ids.length === 0) {\r\n    return Promise.resolve([]);\r\n  }\r\n  if (ids.length > MAX_DML_COUNT && options.allowRecursive) {\r\n    var self = this;\r\n    return self._destroyMany(type, ids.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\r\n      return self._destroyMany(type, ids.slice(MAX_DML_COUNT), options).then(function(rets2) {\r\n        return rets1.concat(rets2);\r\n      });\r\n    });\r\n  }\r\n  var url = [ this._baseUrl(), \"composite\", \"sobjects?ids=\" ].join('/') + ids.join(',');\r\n  if (options.allOrNone) {\r\n    url += '&allOrNone=true';\r\n  }\r\n  return this.request({\r\n    method : 'DELETE',\r\n    url : url,\r\n    headers: options.headers || null\r\n  });\r\n};\r\n\r\n/**\r\n * Execute search by SOSL\r\n *\r\n * @param {String} sosl - SOSL string\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\nConnection.prototype.search = function(sosl, callback) {\r\n  var url = this._baseUrl() + \"/search?q=\" + encodeURIComponent(sosl);\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Result returned by describeSObject call\r\n *\r\n * @typedef {Object} DescribeSObjectResult\r\n */\r\n/**\r\n * Synonym of Connection#describe()\r\n *\r\n * @method Connection#describeSObject\r\n * @param {String} type - SObject Type\r\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\r\n * @returns {Promise.<DescribeSObjectResult>}\r\n */\r\n/**\r\n * Describe SObject metadata\r\n *\r\n * @method Connection#describe\r\n * @param {String} type - SObject Type\r\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\r\n * @returns {Promise.<DescribeSObjectResult>}\r\n */\r\nConnection.prototype.describe =\r\nConnection.prototype.describeSObject = function(type, callback) {\r\n  var url = [ this._baseUrl(), \"sobjects\", type, \"describe\" ].join('/');\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * Result returned by describeGlobal call\r\n *\r\n * @typedef {Object} DescribeGlobalResult\r\n */\r\n/**\r\n * Describe global SObjects\r\n *\r\n * @param {Callback.<DescribeGlobalResult>} [callback] - Callback function\r\n * @returns {Promise.<DescribeGlobalResult>}\r\n */\r\nConnection.prototype.describeGlobal = function(callback) {\r\n  var url = this._baseUrl() + \"/sobjects\";\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * Get SObject instance\r\n *\r\n * @param {String} type - SObject Type\r\n * @returns {SObject}\r\n */\r\nConnection.prototype.sobject = function(type) {\r\n  this.sobjects = this.sobjects || {};\r\n  var sobject = this.sobjects[type] =\r\n    this.sobjects[type] || new SObject(this, type);\r\n  return sobject;\r\n};\r\n\r\n/**\r\n * Get identity information of current user\r\n *\r\n * @param {Object} [options] - Identity call options\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request\r\n * @param {Callback.<IdentityInfo>} [callback] - Callback function\r\n * @returns {Promise.<IdentityInfo>}\r\n */\r\nConnection.prototype.identity = function(options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  var self = this;\r\n  var idUrl = this.userInfo && this.userInfo.url;\r\n  return Promise.resolve(\r\n    idUrl ?\r\n    { identity: idUrl } :\r\n    this.request({ method: 'GET', url: this._baseUrl(), headers: options.headers })\r\n  ).then(function(res) {\r\n    var url = res.identity;\r\n    return self.request({ method: 'GET', url: url });\r\n  }).then(function(res) {\r\n    self.userInfo = {\r\n      id: res.user_id,\r\n      organizationId: res.organization_id,\r\n      url: res.id\r\n    };\r\n    return res;\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * @typedef UserInfo\r\n * @prop {String} id - User ID\r\n * @prop {String} organizationId - Organization ID\r\n * @prop {String} url - Identity URL of the user\r\n */\r\n\r\n/**\r\n * Authorize (using oauth2 web server flow)\r\n *\r\n * @param {String} code - Authorization code\r\n * @param {Object} [params] - Optional parameters to send in token retrieval\r\n * @param {String} [params.code_verifier] - Code verifier value (RFC 7636 - Proof Key of Code Exchange)\r\n * @param {Callback.<UserInfo>} [callback] - Callback function\r\n * @returns {Promise.<UserInfo>}\r\n */\r\nConnection.prototype.authorize = function(code, params, callback) {\r\n  if (typeof params === 'function') {\r\n    callback = params;\r\n    params = {};\r\n  }\r\n  var self = this;\r\n  var logger = this._logger;\r\n\r\n  return this.oauth2.requestToken(code, params).then(function(res) {\r\n    var userInfo = parseIdUrl(res.id);\r\n    self.initialize({\r\n      instanceUrl : res.instance_url,\r\n      accessToken : res.access_token,\r\n      refreshToken : res.refresh_token,\r\n      userInfo: userInfo\r\n    });\r\n    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);\r\n    return userInfo;\r\n\r\n  }).thenCall(callback);\r\n\r\n};\r\n\r\n\r\n/**\r\n * Login to Salesforce\r\n *\r\n * @param {String} username - Salesforce username\r\n * @param {String} password - Salesforce password (and security token, if required)\r\n * @param {Callback.<UserInfo>} [callback] - Callback function\r\n * @returns {Promise.<UserInfo>}\r\n */\r\nConnection.prototype.login = function(username, password, callback) {\r\n  // register refreshDelegate for session expiration\r\n  this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, createUsernamePasswordRefreshFn(username, password));\r\n  if (this.oauth2 && this.oauth2.clientId && this.oauth2.clientSecret) {\r\n    return this.loginByOAuth2(username, password, callback);\r\n  } else {\r\n    return this.loginBySoap(username, password, callback);\r\n  }\r\n};\r\n\r\n/** @private **/\r\nfunction createUsernamePasswordRefreshFn(username, password) {\r\n  return function(conn, callback) {\r\n    conn.login(username, password, function(err) {\r\n      if (err) { return callback(err); }\r\n      callback(null, conn.accessToken);\r\n    });\r\n  };\r\n}\r\n\r\n/**\r\n * Login by OAuth2 username & password flow\r\n *\r\n * @param {String} username - Salesforce username\r\n * @param {String} password - Salesforce password (and security token, if required)\r\n * @param {Callback.<UserInfo>} [callback] - Callback function\r\n * @returns {Promise.<UserInfo>}\r\n */\r\nConnection.prototype.loginByOAuth2 = function(username, password, callback) {\r\n  var self = this;\r\n  var logger = this._logger;\r\n  return this.oauth2.authenticate(username, password).then(function(res) {\r\n    var userInfo = parseIdUrl(res.id);\r\n    self.initialize({\r\n      instanceUrl : res.instance_url,\r\n      accessToken : res.access_token,\r\n      userInfo: userInfo\r\n    });\r\n    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);\r\n    return userInfo;\r\n\r\n  }).thenCall(callback);\r\n\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nfunction esc(str) {\r\n  return str && String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;')\r\n                           .replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\r\n}\r\n\r\n/**\r\n * Login by SOAP web service API\r\n *\r\n * @param {String} username - Salesforce username\r\n * @param {String} password - Salesforce password (and security token, if required)\r\n * @param {Callback.<UserInfo>} [callback] - Callback function\r\n * @returns {Promise.<UserInfo>}\r\n */\r\nConnection.prototype.loginBySoap = function(username, password, callback) {\r\n  var self = this;\r\n  var logger = this._logger;\r\n  var body = [\r\n    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\r\n      '<se:Header/>',\r\n      '<se:Body>',\r\n        '<login xmlns=\"urn:partner.soap.sforce.com\">',\r\n          '<username>' + esc(username) + '</username>',\r\n          '<password>' + esc(password) + '</password>',\r\n        '</login>',\r\n      '</se:Body>',\r\n    '</se:Envelope>'\r\n  ].join('');\r\n\r\n  var soapLoginEndpoint = [ this.loginUrl, \"services/Soap/u\", this.version ].join('/');\r\n\r\n  return this._transport.httpRequest({\r\n    method : 'POST',\r\n    url : soapLoginEndpoint,\r\n    body : body,\r\n    headers : {\r\n      \"Content-Type\" : \"text/xml\",\r\n      \"SOAPAction\" : '\"\"'\r\n    }\r\n  }).then(function(response) {\r\n    var m;\r\n    if (response.statusCode >= 400) {\r\n      m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\r\n      var faultstring = m && m[1];\r\n      throw new Error(faultstring || response.body);\r\n    }\r\n    logger.debug(\"SOAP response = \" + response.body);\r\n    m = response.body.match(/<serverUrl>([^<]+)<\\/serverUrl>/);\r\n    var serverUrl = m && m[1];\r\n    m = response.body.match(/<sessionId>([^<]+)<\\/sessionId>/);\r\n    var sessionId = m && m[1];\r\n    m = response.body.match(/<userId>([^<]+)<\\/userId>/);\r\n    var userId = m && m[1];\r\n    m = response.body.match(/<organizationId>([^<]+)<\\/organizationId>/);\r\n    var orgId = m && m[1];\r\n    var idUrl = soapLoginEndpoint.split('/').slice(0, 3).join('/');\r\n    idUrl += \"/id/\" + orgId + \"/\" + userId;\r\n    var userInfo = {\r\n      id: userId,\r\n      organizationId: orgId,\r\n      url: idUrl\r\n    };\r\n    self.initialize({\r\n      serverUrl: serverUrl.split('/').slice(0, 3).join('/'),\r\n      sessionId: sessionId,\r\n      userInfo: userInfo\r\n    });\r\n    logger.debug(\"<login> completed. user id = \" + userId + \", org id = \" + orgId);\r\n    return userInfo;\r\n\r\n  }).thenCall(callback);\r\n\r\n};\r\n\r\n/**\r\n * Logout the current session \r\n *\r\n * @param {Boolean} [revoke] - Revokes API Access if set to true\r\n * @param {Callback.<undefined>} [callback] - Callback function\r\n * @returns {Promise.<undefined>}\r\n */\r\nConnection.prototype.logout = function(revoke, callback) {\r\n  if (typeof revoke === 'function') {\r\n    callback = revoke;\r\n    revoke = false;\r\n  }\r\n\r\n  if (this._sessionType === \"oauth2\") {\r\n    return this.logoutByOAuth2(revoke, callback);\r\n  } else {\r\n    return this.logoutBySoap(revoke, callback);\r\n  }\r\n};\r\n\r\n/**\r\n * Logout the current session by revoking access token via OAuth2 session revoke\r\n *\r\n * @param {Boolean} [revoke] - Revokes API Access if set to true\r\n * @param {Callback.<undefined>} [callback] - Callback function\r\n * @returns {Promise.<undefined>}\r\n */\r\nConnection.prototype.logoutByOAuth2 = function(revoke, callback) {\r\n  if (typeof revoke === 'function') {\r\n    callback = revoke;\r\n    revoke = false;\r\n  }\r\n  var self = this;\r\n  var logger = this._logger;\r\n\r\n  return this.oauth2.revokeToken(revoke ? this.refreshToken : this.accessToken).then(function() {\r\n    // Destroy the session bound to this connection\r\n    self.accessToken = null;\r\n    self.userInfo = null;\r\n    self.refreshToken = null;\r\n    self.instanceUrl = null;\r\n    self.cache.clear();\r\n\r\n    // nothing useful returned by logout API, just return\r\n    return undefined;\r\n  }).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * Logout the session by using SOAP web service API\r\n *\r\n * @param {Boolean} [revoke] - Revokes API Access if set to true\r\n * @param {Callback.<undefined>} [callback] - Callback function\r\n * @returns {Promise.<undefined>}\r\n */\r\nConnection.prototype.logoutBySoap = function(revoke, callback) {\r\n  if (typeof revoke === 'function') {\r\n    callback = revoke;\r\n    revoke = false;\r\n  }\r\n  var self = this;\r\n  var logger = this._logger;\r\n\r\n  var body = [\r\n    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\r\n      '<se:Header>',\r\n        '<SessionHeader xmlns=\"urn:partner.soap.sforce.com\">',\r\n          '<sessionId>' + esc(revoke ? this.refreshToken : this.accessToken) + '</sessionId>',\r\n        '</SessionHeader>',\r\n      '</se:Header>',\r\n      '<se:Body>',\r\n        '<logout xmlns=\"urn:partner.soap.sforce.com\"/>',\r\n      '</se:Body>',\r\n    '</se:Envelope>'\r\n  ].join('');\r\n\r\n  return this._transport.httpRequest({\r\n    method : 'POST',\r\n    url : [ this.instanceUrl, \"services/Soap/u\", this.version ].join('/'),\r\n    body : body,\r\n    headers : {\r\n      \"Content-Type\" : \"text/xml\",\r\n      \"SOAPAction\" : '\"\"'\r\n    }\r\n  }).then(function(response) {\r\n    logger.debug(\"SOAP statusCode = \" + response.statusCode + \", response = \" + response.body);\r\n    if (response.statusCode >= 400) {\r\n      var m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\r\n      var faultstring = m && m[1];\r\n      throw new Error(faultstring || response.body);\r\n    }\r\n\r\n    // Destroy the session bound to this connection\r\n    self.accessToken = null;\r\n    self.userInfo = null;\r\n    self.refreshToken = null;\r\n    self.instanceUrl = null;\r\n    self.cache.clear();\r\n\r\n    // nothing useful returned by logout API, just return\r\n    return undefined;\r\n\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * List recently viewed records\r\n *\r\n * @param {String} [type] - SObject type\r\n * @param {Number} [limit] - Limit num to fetch\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\nConnection.prototype.recent = function(type, limit, callback) {\r\n  if (!_.isString(type)) {\r\n    callback = limit;\r\n    limit = type;\r\n    type = undefined;\r\n  }\r\n  if (!_.isNumber(limit)) {\r\n    callback = limit;\r\n    limit = undefined;\r\n  }\r\n  var url;\r\n  if (type) {\r\n    url = [ this._baseUrl(), \"sobjects\", type ].join('/');\r\n    return this.request(url).then(function(res) {\r\n      return limit ? res.recentItems.slice(0, limit) : res.recentItems;\r\n    }).thenCall(callback);\r\n  } else {\r\n    url = this._baseUrl() + \"/recent\";\r\n    if (limit) {\r\n      url += \"?limit=\" + limit;\r\n    }\r\n    return this.request(url).thenCall(callback);\r\n  }\r\n\r\n};\r\n\r\n/**\r\n * @typedef {Object} UpdatedRecordsInfo\r\n * @prop {String} latestDateCovered - The timestamp of the last date covered.\r\n * @prop {Array.<String>} ids - Updated record IDs.\r\n */\r\n\r\n/**\r\n * Retrieve updated records\r\n *\r\n * @param {String} type - SObject Type\r\n * @param {String|Date} start - start date or string representing the start of the interval\r\n * @param {String|Date} end - start date or string representing the end of the interval must be > start\r\n * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function\r\n * @returns {Promise.<UpdatedRecordsInfo>}\r\n */\r\nConnection.prototype.updated = function (type, start, end, callback) {\r\n  var url = [ this._baseUrl(), \"sobjects\", type, \"updated\" ].join('/');\r\n\r\n  if (typeof start === 'string') {\r\n    start = new Date(start);\r\n  }\r\n\r\n  if (start instanceof Date) {\r\n    start = formatDate(start);\r\n  }\r\n\r\n  if (start) {\r\n    url += \"?start=\" + encodeURIComponent(start);\r\n  }\r\n\r\n  if (typeof end === 'string') {\r\n    end = new Date(end);\r\n  }\r\n\r\n  if (end instanceof Date) {\r\n    end = formatDate(end);\r\n  }\r\n\r\n  if (end) {\r\n    url += \"&end=\" + encodeURIComponent(end);\r\n  }\r\n\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} DeletedRecordsInfo\r\n * @prop {String} earliestDateAvailable - The timestamp of the earliest date available\r\n * @prop {String} latestDateCovered - The timestamp of the last date covered\r\n * @prop {Array.<Object>} deletedRecords - Updated records\r\n * @prop {String} deletedRecords.id - Record ID\r\n * @prop {String} deletedRecords.deletedDate - The timestamp when this record was deleted\r\n */\r\n\r\n/**\r\n * Retrieve deleted records\r\n *\r\n * @param {String} type - SObject Type\r\n * @param {String|Date} start - start date or string representing the start of the interval\r\n * @param {String|Date} end - start date or string representing the end of the interval\r\n * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function\r\n * @returns {Promise.<DeletedRecordsInfo>}\r\n */\r\nConnection.prototype.deleted = function (type, start, end, callback) {\r\n  var url = [ this._baseUrl(), \"sobjects\", type, \"deleted\" ].join('/');\r\n\r\n  if (typeof start === 'string') {\r\n    start = new Date(start);\r\n  }\r\n\r\n  if (start instanceof Date) {\r\n    start = formatDate(start);\r\n  }\r\n\r\n  if (start) {\r\n    url += \"?start=\" + encodeURIComponent(start);\r\n  }\r\n\r\n  if (typeof end === 'string') {\r\n    end = new Date(end);\r\n  }\r\n\r\n  if (end instanceof Date) {\r\n    end = formatDate(end);\r\n  }\r\n\r\n  if (end) {\r\n    url += \"&end=\" + encodeURIComponent(end);\r\n  }\r\n\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} TabsInfo - See the API document for detail structure\r\n */\r\n\r\n/**\r\n * Returns a list of all tabs\r\n *\r\n * @param {Callback.<TabsInfo>} [callback] - Callback function\r\n * @returns {Promise.<TabsInfo>}\r\n */\r\nConnection.prototype.tabs = function(callback) {\r\n  var url = [ this._baseUrl(), \"tabs\" ].join('/');\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} LimitsInfo - See the API document for detail structure\r\n */\r\n\r\n/**\r\n * Returns curren system limit in the organization\r\n *\r\n * @param {Callback.<LimitsInfo>} [callback] - Callback function\r\n * @returns {Promise.<LimitsInfo>}\r\n */\r\nConnection.prototype.limits = function(callback) {\r\n  var url = [ this._baseUrl(), \"limits\" ].join('/');\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} ThemeInfo - See the API document for detail structure\r\n */\r\n\r\n/**\r\n * Returns a theme info\r\n *\r\n * @param {Callback.<ThemeInfo>} [callback] - Callback function\r\n * @returns {Promise.<ThemeInfo>}\r\n */\r\nConnection.prototype.theme = function(callback) {\r\n  var url = [ this._baseUrl(), \"theme\" ].join('/');\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Returns all registered global quick actions\r\n *\r\n * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\r\n */\r\nConnection.prototype.quickActions = function(callback) {\r\n  return this.request(\"/quickActions\").thenCall(callback);\r\n};\r\n\r\n/**\r\n * Get reference for specified global quick aciton\r\n *\r\n * @param {String} actionName - Name of the global quick action\r\n * @returns {QuickAction}\r\n */\r\nConnection.prototype.quickAction = function(actionName) {\r\n  return new QuickAction(this, \"/quickActions/\" + actionName);\r\n};\r\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./cache\":8,\"./core\":10,\"./http-api\":13,\"./logger\":14,\"./oauth2\":15,\"./process\":16,\"./promise\":17,\"./query\":18,\"./quick-action\":19,\"./sobject\":24,\"./transport\":26,\"buffer\":30,\"events\":36,\"inherits\":38,\"lodash/core\":42}],10:[function(require,module,exports){\n/**\r\n * @file JSforce Core\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n'use strict';\r\n\r\nvar EventEmitter = require('events').EventEmitter;\r\n\r\nvar jsforce = module.exports = new EventEmitter();\r\njsforce.VERSION = require('./VERSION');\r\njsforce.Connection = require('./connection');\r\njsforce.OAuth2 = require('./oauth2');\r\njsforce.Date = jsforce.SfDate = require(\"./date\");\r\njsforce.RecordStream = require('./record-stream');\r\njsforce.Promise = require('./promise');\r\njsforce.require = require('./require');\r\n\n},{\"./VERSION\":2,\"./connection\":9,\"./date\":12,\"./oauth2\":15,\"./promise\":17,\"./record-stream\":20,\"./require\":22,\"events\":36}],11:[function(require,module,exports){\n'use strict';\r\n\r\nvar _ = require('lodash/core'),\r\n    csvParse = require('csv-parse'),\r\n    csvParseSync = require('csv-parse/lib/sync'),\r\n    csvStringify = require('csv-stringify'),\r\n    csvStringifySync = require('csv-stringify/lib/sync');\r\n\r\n/**\r\n * @private\r\n */\r\nfunction parseCSV(str, options) {\r\n  options = _.extend({}, options, { columns: true });\r\n  return csvParseSync(str, options);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction toCSV(records, options) {\r\n  options = _.extend({}, options, { header: true });\r\n  return csvStringifySync(records, options);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction parseCSVStream(options) {\r\n  options = _.extend({}, options, { columns: true });\r\n  return csvParse(options);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction serializeCSVStream(options) {\r\n  options = _.extend({}, options, { header: true });\r\n  return csvStringify(options);\r\n}\r\n\r\n\r\n/**\r\n * @protected\r\n */\r\nmodule.exports = {\r\n  parseCSV: parseCSV,\r\n  toCSV: toCSV,\r\n  parseCSVStream: parseCSVStream,\r\n  serializeCSVStream: serializeCSVStream\r\n};\r\n\n},{\"csv-parse\":32,\"csv-parse/lib/sync\":33,\"csv-stringify\":34,\"csv-stringify/lib/sync\":35,\"lodash/core\":42}],12:[function(require,module,exports){\n'use strict';\r\n\r\nvar _ = require('lodash/core');\r\n\r\n/**\r\n * A date object to keep Salesforce date literal\r\n *\r\n * @class\r\n * @constructor\r\n * @see http://www.salesforce.com/us/developer/docs/soql_sosl/Content/sforce_api_calls_soql_select_dateformats.htm\r\n */\r\nvar SfDate = module.exports = function(literal) {\r\n  this._literal = literal;\r\n};\r\n\r\n/**\r\n * Returns literal when converted to string\r\n *\r\n * @override\r\n */\r\nSfDate.prototype.toString =\r\nSfDate.prototype.toJSON = function() { return this._literal; };\r\n\r\n\r\n/** @private **/\r\nfunction zeropad(n) { return (n<10 ? \"0\" : \"\") + n; }\r\n\r\n/**\r\n * Convert JavaScript date object to ISO8601 Date format (e.g. 2012-10-31)\r\n *\r\n * @param {String|Number|Date} date - Input date\r\n * @returns {SfDate} - Salesforce date literal with ISO8601 date format\r\n */\r\nSfDate.toDateLiteral = function(date) {\r\n  if (_.isNumber(date)) {\r\n    date = new Date(date);\r\n  } else if (_.isString(date)) {\r\n    date = SfDate.parseDate(date);\r\n  }\r\n  var yy = date.getFullYear();\r\n  var mm = date.getMonth()+1;\r\n  var dd = date.getDate();\r\n  var dstr = [ yy, zeropad(mm), zeropad(dd) ].join(\"-\");\r\n  return new SfDate(dstr);\r\n};\r\n\r\n/**\r\n * Convert JavaScript date object to ISO8601 DateTime format\r\n * (e.g. 2012-10-31T12:34:56Z)\r\n *\r\n * @param {String|Number|Date} date - Input date\r\n * @returns {SfDate} - Salesforce date literal with ISO8601 datetime format\r\n */\r\nSfDate.toDateTimeLiteral = function(date) {\r\n  if (_.isNumber(date)) {\r\n    date = new Date(date);\r\n  } else if (_.isString(date)) {\r\n    date = SfDate.parseDate(date);\r\n  }\r\n  var yy = date.getUTCFullYear();\r\n  var mm = date.getUTCMonth()+1;\r\n  var dd = date.getUTCDate();\r\n  var hh = date.getUTCHours();\r\n  var mi = date.getUTCMinutes();\r\n  var ss = date.getUTCSeconds();\r\n  var dtstr =\r\n    [ yy, zeropad(mm), zeropad(dd) ].join(\"-\") + \"T\" +\r\n    [ zeropad(hh), zeropad(mi), zeropad(ss) ].join(\":\") + \"Z\";\r\n  return new SfDate(dtstr);\r\n};\r\n\r\n/**\r\n * Parse IS08601 date(time) formatted string and return date instance\r\n *\r\n * @param {String} str\r\n * @returns {Date}\r\n */\r\nSfDate.parseDate = function(str) {\r\n  var d = new Date();\r\n  var regexp = /^([\\d]{4})-?([\\d]{2})-?([\\d]{2})(T([\\d]{2}):?([\\d]{2}):?([\\d]{2})(.([\\d]{3}))?(Z|([\\+\\-])([\\d]{2}):?([\\d]{2})))?$/;\r\n  var m = str.match(regexp);\r\n  if (m) {\r\n    d = new Date(0);\r\n    if (!m[4]) {\r\n      d.setFullYear(parseInt(m[1], 10));\r\n      d.setDate(parseInt(m[3], 10));\r\n      d.setMonth(parseInt(m[2], 10) - 1);\r\n      d.setHours(0);\r\n      d.setMinutes(0);\r\n      d.setSeconds(0);\r\n      d.setMilliseconds(0);\r\n    } else {\r\n      d.setUTCFullYear(parseInt(m[1], 10));\r\n      d.setUTCDate(parseInt(m[3], 10));\r\n      d.setUTCMonth(parseInt(m[2], 10) - 1);\r\n      d.setUTCHours(parseInt(m[5], 10));\r\n      d.setUTCMinutes(parseInt(m[6], 10));\r\n      d.setUTCSeconds(parseInt(m[7], 10));\r\n      d.setUTCMilliseconds(parseInt(m[9] || '0', 10));\r\n      if (m[10] && m[10] !== 'Z') {\r\n        var offset = parseInt(m[12],10) * 60 + parseInt(m[13], 10);\r\n        d.setTime((m[11] === '+' ? -1 : 1) * offset * 60 * 1000 +d.getTime());\r\n      }\r\n    }\r\n    return d;\r\n  } else {\r\n    throw new Error(\"Invalid date format is specified : \" + str);\r\n  }\r\n};\r\n\r\n/*\r\n * Pre-defined Salesforce Date Literals\r\n */\r\nvar SfDateLiterals = {\r\n  YESTERDAY: 1,\r\n  TODAY: 1,\r\n  TOMORROW: 1,\r\n  LAST_WEEK: 1,\r\n  THIS_WEEK: 1,\r\n  NEXT_WEEK: 1,\r\n  LAST_MONTH: 1,\r\n  THIS_MONTH: 1,\r\n  NEXT_MONTH: 1,\r\n  LAST_90_DAYS: 1,\r\n  NEXT_90_DAYS: 1,\r\n  LAST_N_DAYS: 2,\r\n  NEXT_N_DAYS: 2,\r\n  NEXT_N_WEEKS: 2,\r\n  LAST_N_WEEKS: 2,\r\n  NEXT_N_MONTHS: 2,\r\n  LAST_N_MONTHS: 2,\r\n  THIS_QUARTER: 1,\r\n  LAST_QUARTER: 1,\r\n  NEXT_QUARTER: 1,\r\n  NEXT_N_QUARTERS: 2,\r\n  LAST_N_QUARTERS: 2,\r\n  THIS_YEAR: 1,\r\n  LAST_YEAR: 1,\r\n  NEXT_YEAR: 1,\r\n  NEXT_N_YEARS: 2,\r\n  LAST_N_YEARS: 2,\r\n  THIS_FISCAL_QUARTER: 1,\r\n  LAST_FISCAL_QUARTER: 1,\r\n  NEXT_FISCAL_QUARTER: 1,\r\n  NEXT_N_FISCAL_QUARTERS:2,\r\n  LAST_N_FISCAL_QUARTERS:2,\r\n  THIS_FISCAL_YEAR:1,\r\n  LAST_FISCAL_YEAR:1,\r\n  NEXT_FISCAL_YEAR:1,\r\n  NEXT_N_FISCAL_YEARS: 2,\r\n  LAST_N_FISCAL_YEARS: 2\r\n};\r\n\r\nfor (var literal in SfDateLiterals) {\r\n  var type = SfDateLiterals[literal];\r\n  SfDate[literal] =\r\n   type === 1 ? new SfDate(literal) : createLiteralBuilder(literal);\r\n}\r\n\r\n/** @private **/\r\nfunction createLiteralBuilder(literal) {\r\n  return function(num) { return new SfDate(literal + \":\" + num); };\r\n}\r\n\n},{\"lodash/core\":42}],13:[function(require,module,exports){\n'use strict';\r\n\r\nvar inherits = require('inherits'),\r\n    events = require('events'),\r\n    _ = require('lodash/core'),\r\n    Promise = require('./promise');\r\n\r\n/**\r\n * HTTP based API class with authorization hook\r\n *\r\n * @constructor\r\n * @extends events.EventEmitter\r\n * @param {Connection} conn - Connection object\r\n * @param {Object} [options] - Http API Options\r\n * @param {String} [options.responseType] - Overriding content mime-type in response\r\n * @param {Transport} [options.transport] - Transport for http api\r\n * @param {Object} [options.noContentResponse] - Alternative response when no content returned in response (= HTTP 204)\r\n */\r\nvar HttpApi = function(conn, options) {\r\n  options = options || {};\r\n  this._conn = conn;\r\n  this.on('resume', function(err) { conn.emit('resume', err); });\r\n  this._responseType = options.responseType;\r\n  this._transport = options.transport || conn._transport;\r\n  this._noContentResponse = options.noContentResponse;\r\n};\r\n\r\ninherits(HttpApi, events.EventEmitter);\r\n\r\n/**\r\n * Callout to API endpoint using http\r\n *\r\n * @param {Object} request - Http Request object\r\n * @param {String} request.url - Endpoint URL to request\r\n * @param {String} request.method - Http method for request\r\n * @param {Object} [request.headers] - Http request headers in hash object\r\n * @param {Callback.<Object>} callback - Callback function\r\n * @returns {Promise.<Object>} -\r\n */\r\nHttpApi.prototype.request = function(request, callback) {\r\n  var self = this;\r\n  var conn = this._conn;\r\n  var logger = conn._logger;\r\n  var refreshDelegate = this.getRefreshDelegate();\r\n  // remember previous instance url in case it changes after a refresh\r\n  var lastInstanceUrl = conn.instanceUrl;\r\n\r\n  var deferred = Promise.defer();\r\n\r\n  var onResume = function(err) {\r\n    if (err) {\r\n      deferred.reject(err);\r\n      return;\r\n    }\r\n    // check to see if the token refresh has changed the instance url\r\n    if(lastInstanceUrl !== conn.instanceUrl){\r\n      // if the instance url has changed\r\n      // then replace the current request urls instance url fragment\r\n      // with the updated instance url\r\n      request.url = request.url.replace(lastInstanceUrl,conn.instanceUrl);\r\n    }\r\n\r\n    self.request(request).then(function(response) {\r\n      deferred.resolve(response);\r\n    }, function(err) {\r\n      deferred.reject(err);\r\n    });\r\n  };\r\n\r\n  if (refreshDelegate && refreshDelegate._refreshing) {\r\n    refreshDelegate.once('resume', onResume);\r\n    return deferred.promise.thenCall(callback);\r\n  }\r\n\r\n  // hook before sending\r\n  self.beforeSend(request);\r\n\r\n  self.emit('request', request);\r\n  logger.debug(\"<request> method=\" + request.method + \", url=\" + request.url);\r\n  var requestTime = Date.now();\r\n\r\n  return this._transport.httpRequest(request).then(function(response) {\r\n    var responseTime = Date.now();\r\n    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");\r\n    logger.debug(\"<response> status=\" + response.statusCode + \", url=\" + request.url);\r\n\r\n    self.emit('response', response);\r\n    // Refresh token if session has been expired and requires authentication\r\n    // when session refresh delegate is available\r\n    if (self.isSessionExpired(response) && refreshDelegate) {\r\n      refreshDelegate.refresh(requestTime, onResume);\r\n      return deferred.promise;\r\n    }\r\n    if (self.isErrorResponse(response)) {\r\n      var err = self.getError(response);\r\n      throw err;\r\n    }\r\n    return self.getResponseBody(response);\r\n  }, function(err) {\r\n    var responseTime = Date.now();\r\n    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");\r\n    logger.error(err);\r\n    throw err;\r\n  })\r\n  .thenCall(callback);\r\n};\r\n\r\n/**\r\n * @protected\r\n */\r\nHttpApi.prototype.getRefreshDelegate = function() {\r\n  return this._conn._refreshDelegate;\r\n};\r\n\r\n/**\r\n *\r\n * @protected\r\n */\r\nHttpApi.prototype.beforeSend = function(request) {\r\n  request.headers = request.headers || {};\r\n  if (this._conn.accessToken) {\r\n    request.headers.Authorization = \"Bearer \" + this._conn.accessToken;\r\n  }\r\n  if (this._conn.callOptions) {\r\n    var callOptions = [];\r\n    for (var name in this._conn.callOptions) {\r\n      callOptions.push(name + \"=\" + this._conn.callOptions[name]);\r\n    }\r\n    request.headers[\"Sforce-Call-Options\"] = callOptions.join(', ');\r\n  }\r\n};\r\n\r\n/**\r\n * Detect response content mime-type\r\n * @protected\r\n */\r\nHttpApi.prototype.getResponseContentType = function(response) {\r\n  return this._responseType || response.headers && response.headers[\"content-type\"];\r\n};\r\n\r\n/**\r\n *\r\n */\r\nHttpApi.prototype.parseResponseBody = function(response) {\r\n  var contentType = this.getResponseContentType(response);\r\n  var parseBody = /^(text|application)\\/xml(;|$)/.test(contentType) ? parseXML :\r\n         /^application\\/json(;|$)/.test(contentType) ? parseJSON :\r\n         /^text\\/csv(;|$)/.test(contentType) ? parseCSV :\r\n         parseText;\r\n  try {\r\n    return parseBody(response.body);\r\n  } catch(e) {\r\n    return response.body;\r\n  }\r\n};\r\n\r\n/**\r\n * Get response body\r\n * @protected\r\n */\r\nHttpApi.prototype.getResponseBody = function(response) {\r\n  if (response.statusCode === 204) { // No Content\r\n    return this._noContentResponse;\r\n  }\r\n  var body = this.parseResponseBody(response);\r\n  var err;\r\n  if (this.hasErrorInResponseBody(body)) {\r\n    err = this.getError(response, body);\r\n    throw err;\r\n  }\r\n  if (response.statusCode === 300) { // Multiple Choices\r\n    err = new Error('Multiple records found');\r\n    err.name = \"MULTIPLE_CHOICES\";\r\n    err.content = body;\r\n    throw err;\r\n  }\r\n  return body;\r\n};\r\n\r\n/** @private */\r\nfunction parseJSON(str) {\r\n  return JSON.parse(str);\r\n}\r\n\r\n/** @private */\r\nfunction parseXML(str) {\r\n  var ret = {};\r\n  require('xml2js').parseString(str, { explicitArray: false }, function(err, result) {\r\n    ret = { error: err, result : result };\r\n  });\r\n  if (ret.error) { throw ret.error; }\r\n  return ret.result;\r\n}\r\n\r\n/** @private */\r\nfunction parseCSV(str) {\r\n  return require('./csv').parseCSV(str);\r\n}\r\n\r\n/** @private */\r\nfunction parseText(str) { return str; }\r\n\r\n\r\n/**\r\n * Detect session expiry\r\n * @protected\r\n */\r\nHttpApi.prototype.isSessionExpired = function(response) {\r\n  return response.statusCode === 401;\r\n};\r\n\r\n/**\r\n * Detect error response\r\n * @protected\r\n */\r\nHttpApi.prototype.isErrorResponse = function(response) {\r\n  return response.statusCode >= 400;\r\n};\r\n\r\n/**\r\n * Detect error in response body\r\n * @protected\r\n */\r\nHttpApi.prototype.hasErrorInResponseBody = function(body) {\r\n  return false;\r\n};\r\n\r\n/**\r\n * Parsing error message in response\r\n * @protected\r\n */\r\nHttpApi.prototype.parseError = function(body) {\r\n  var errors = body;\r\n  return _.isArray(errors) ? errors[0] : errors;\r\n};\r\n\r\n/**\r\n * Get error message in response\r\n * @protected\r\n */\r\nHttpApi.prototype.getError = function(response, body) {\r\n  var error;\r\n  try {\r\n    error = this.parseError(body || this.parseResponseBody(response));\r\n  } catch(e) {}\r\n  error = _.isObject(error) && _.isString(error.message) ? error : {\r\n    errorCode: 'ERROR_HTTP_' + response.statusCode,\r\n    message : response.body\r\n  };\r\n  var err = new Error(error.message);\r\n  err.name = error.errorCode;\r\n  for (var key in error) { err[key] = error[key]; }\r\n  return err;\r\n};\r\n\r\n/*-------------------------------------------------------------------------*/\r\n\r\n/**\r\n * @protected\r\n */\r\nvar SessionRefreshDelegate = function(conn, refreshFn) {\r\n  this._conn = conn;\r\n  this._refreshFn = refreshFn;\r\n  this._refreshing = false;\r\n};\r\n\r\ninherits(SessionRefreshDelegate, events.EventEmitter);\r\n\r\n/**\r\n * Refresh access token\r\n * @private\r\n */\r\nSessionRefreshDelegate.prototype.refresh = function(since, callback) {\r\n  // Callback immediately When refreshed after designated time\r\n  if (this._lastRefreshedAt > since) { return callback(); }\r\n  var self = this;\r\n  var conn = this._conn;\r\n  var logger = conn._logger;\r\n  self.once('resume', callback);\r\n  if (self._refreshing) { return; }\r\n  logger.debug(\"<refresh token>\");\r\n  self._refreshing = true;\r\n  return self._refreshFn(conn, function(err, accessToken, res) {\r\n    if (!err) {\r\n      logger.debug(\"Connection refresh completed.\");\r\n      conn.accessToken = accessToken;\r\n      conn.emit(\"refresh\", accessToken, res);\r\n    }\r\n    self._lastRefreshedAt = Date.now();\r\n    self._refreshing = false;\r\n    self.emit('resume', err);\r\n  });\r\n};\r\n\r\n\r\n/**\r\n *\r\n */\r\nHttpApi.SessionRefreshDelegate = SessionRefreshDelegate;\r\nmodule.exports = HttpApi;\r\n\n},{\"./csv\":11,\"./promise\":17,\"events\":36,\"inherits\":38,\"lodash/core\":42,\"xml2js\":77}],14:[function(require,module,exports){\n'use strict';\r\n\r\n/**\r\n * @protected\r\n * @class\r\n * @constructor\r\n * @param {String|Number} logLevel - Log level\r\n */\r\nvar Logger = module.exports = function(logLevel) {\r\n  if (typeof logLevel === 'string') {\r\n    logLevel = LogLevels[logLevel];\r\n  }\r\n  if (!logLevel) {\r\n    logLevel = LogLevels.INFO;\r\n  }\r\n  this._logLevel = logLevel;\r\n};\r\n\r\n/**\r\n * @memberof Logger\r\n */\r\nvar LogLevels = Logger.LogLevels = {\r\n  \"DEBUG\" : 1,\r\n  \"INFO\" : 2,\r\n  \"WARN\" : 3,\r\n  \"ERROR\" : 4,\r\n  \"FATAL\" : 5\r\n};\r\n\r\n/**\r\n * Output log\r\n *\r\n * @param {String} level - Logging target level\r\n * @param {String} message - Message to log\r\n */\r\nLogger.prototype.log = function(level, message) {\r\n  if (this._logLevel <= level) {\r\n    if (level < LogLevels.ERROR) {\r\n      console.log(message);\r\n    } else {\r\n      console.error(message);\r\n    }\r\n  }\r\n};\r\n\r\nfor (var level in LogLevels) {\r\n  Logger.prototype[level.toLowerCase()] = createLoggerFunction(LogLevels[level]);\r\n}\r\n\r\nfunction createLoggerFunction(level) {\r\n  return function(message) { this.log(level, message); };\r\n}\r\n\n},{}],15:[function(require,module,exports){\n/**\r\n * @file Manages Salesforce OAuth2 operations\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar querystring = require('querystring'),\r\n    _ = require('lodash/core'),\r\n    Transport = require('./transport');\r\n\r\nvar defaults = {\r\n  loginUrl : \"https://login.salesforce.com\"\r\n};\r\n\r\n/**\r\n * OAuth2 class\r\n *\r\n * @class\r\n * @constructor\r\n * @param {Object} options - OAuth2 config options\r\n * @param {String} [options.loginUrl] - Salesforce login server URL\r\n * @param {String} [options.authzServiceUrl] - OAuth2 authorization service URL. If not specified, it generates from default by adding to login server URL.\r\n * @param {String} [options.tokenServiceUrl] - OAuth2 token service URL. If not specified it generates from default by adding to login server URL.\r\n * @param {String} options.clientId - OAuth2 client ID.\r\n * @param {String} [options.clientSecret] - OAuth2 client secret (This is optional for public client).\r\n * @param {String} options.redirectUri - URI to be callbacked from Salesforce OAuth2 authorization service.\r\n */\r\nvar OAuth2 = module.exports = function(options) {\r\n  if (options.authzServiceUrl && options.tokenServiceUrl) {\r\n    this.loginUrl = options.authzServiceUrl.split('/').slice(0, 3).join('/');\r\n    this.authzServiceUrl = options.authzServiceUrl;\r\n    this.tokenServiceUrl = options.tokenServiceUrl;\r\n    this.revokeServiceUrl = options.revokeServiceUrl;\r\n  } else {\r\n    this.loginUrl = options.loginUrl || defaults.loginUrl;\r\n    this.authzServiceUrl = this.loginUrl + \"/services/oauth2/authorize\";\r\n    this.tokenServiceUrl = this.loginUrl + \"/services/oauth2/token\";\r\n    this.revokeServiceUrl = this.loginUrl + \"/services/oauth2/revoke\";\r\n  }\r\n  this.clientId = options.clientId;\r\n  this.clientSecret = options.clientSecret;\r\n  this.redirectUri = options.redirectUri;\r\n  if (options.proxyUrl) {\r\n    this._transport = new Transport.ProxyTransport(options.proxyUrl);\r\n  } else if (options.httpProxy) {\r\n    this._transport = new Transport.HttpProxyTransport(options.httpProxy);\r\n  } else {\r\n    this._transport = new Transport();\r\n  }\r\n};\r\n\r\n\r\n\r\n/**\r\n *\r\n */\r\n_.extend(OAuth2.prototype, /** @lends OAuth2.prototype **/ {\r\n\r\n  /**\r\n   * Get Salesforce OAuth2 authorization page URL to redirect user agent.\r\n   *\r\n   * @param {Object} params - Parameters\r\n   * @param {String} [params.scope] - Scope values in space-separated string\r\n   * @param {String} [params.state] - State parameter\r\n   * @param {String} [params.code_challenge] - Code challenge value (RFC 7636 - Proof Key of Code Exchange)\r\n   * @returns {String} Authorization page URL\r\n   */\r\n  getAuthorizationUrl : function(params) {\r\n    params = _.extend({\r\n      response_type : \"code\",\r\n      client_id : this.clientId,\r\n      redirect_uri : this.redirectUri\r\n    }, params || {});\r\n    return this.authzServiceUrl +\r\n      (this.authzServiceUrl.indexOf('?') >= 0 ? \"&\" : \"?\") +\r\n      querystring.stringify(params);\r\n  },\r\n\r\n  /**\r\n   * @typedef TokenResponse\r\n   * @type {Object}\r\n   * @property {String} access_token\r\n   * @property {String} refresh_token\r\n   */\r\n\r\n  /**\r\n   * OAuth2 Refresh Token Flow\r\n   *\r\n   * @param {String} refreshToken - Refresh token\r\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\r\n   * @returns {Promise.<TokenResponse>}\r\n   */\r\n  refreshToken : function(refreshToken, callback) {\r\n    var params = {\r\n      grant_type : \"refresh_token\",\r\n      refresh_token : refreshToken,\r\n      client_id : this.clientId\r\n    };\r\n    if (this.clientSecret) {\r\n      params.client_secret = this.clientSecret;\r\n    }\r\n    return this._postParams(params, callback);\r\n  },\r\n\r\n  /**\r\n   * OAuth2 Web Server Authentication Flow (Authorization Code)\r\n   * Access Token Request\r\n   *\r\n   * @param {String} code - Authorization code\r\n   * @param {Object} [params] - Optional parameters to send in token retrieval\r\n   * @param {String} [params.code_verifier] - Code verifier value (RFC 7636 - Proof Key of Code Exchange)\r\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\r\n   * @returns {Promise.<TokenResponse>}\r\n   */\r\n  requestToken : function(code, params, callback) {\r\n    if (typeof params === 'function') {\r\n      callback = params;\r\n      params = {};\r\n    }\r\n    params = _.extend({\r\n      grant_type : \"authorization_code\",\r\n      code : code,\r\n      client_id : this.clientId,\r\n      redirect_uri : this.redirectUri\r\n    }, params || {});\r\n    if (this.clientSecret) {\r\n      params.client_secret = this.clientSecret;\r\n    }\r\n    return this._postParams(params, callback);\r\n  },\r\n\r\n  /**\r\n   * OAuth2 Username-Password Flow (Resource Owner Password Credentials)\r\n   *\r\n   * @param {String} username - Salesforce username\r\n   * @param {String} password - Salesforce password\r\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\r\n   * @returns {Promise.<TokenResponse>}\r\n   */\r\n  authenticate : function(username, password, callback) {\r\n    return this._postParams({\r\n      grant_type : \"password\",\r\n      username : username,\r\n      password : password,\r\n      client_id : this.clientId,\r\n      client_secret : this.clientSecret,\r\n      redirect_uri : this.redirectUri\r\n    }, callback);\r\n  },\r\n\r\n  /**\r\n   * OAuth2 Revoke Session or API Token\r\n   *\r\n   * @param {String} token - Access or Refresh token to revoke. Passing in the Access token revokes the session. Passing in the Refresh token revokes API Access.\r\n   * @param {Callback.<undefined>} [callback] - Callback function\r\n   * @returns {Promise.<undefined>}\r\n   */\r\n  revokeToken : function(token, callback) {\r\n    return this._transport.httpRequest({\r\n      method : 'POST',\r\n      url : this.revokeServiceUrl,\r\n      body: querystring.stringify({ token: token }),\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n      }\r\n    }).then(function(response) {\r\n      if (response.statusCode >= 400) {\r\n        var res = querystring.parse(response.body);\r\n        if (!res || !res.error) {\r\n          res = { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };\r\n        }\r\n        var err = new Error(res.error_description);\r\n        err.name = res.error;\r\n        throw err;\r\n      }\r\n    }).thenCall(callback);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _postParams : function(params, callback) {\r\n    return this._transport.httpRequest({\r\n      method : 'POST',\r\n      url : this.tokenServiceUrl,\r\n      body : querystring.stringify(params),\r\n      headers : {\r\n        \"content-type\" : \"application/x-www-form-urlencoded\"\r\n      }\r\n    }).then(function(response) {\r\n      var res;\r\n      try {\r\n        res = JSON.parse(response.body);\r\n      } catch(e) {}\r\n      if (response.statusCode >= 400) {\r\n        res = res || { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };\r\n        var err = new Error(res.error_description);\r\n        err.name = res.error;\r\n        throw err;\r\n      }\r\n      return res;\r\n    }).thenCall(callback);\r\n  }\r\n\r\n});\r\n\n},{\"./transport\":26,\"lodash/core\":42,\"querystring\":50}],16:[function(require,module,exports){\n/**\r\n * @file Process class to manage/run workflow rule and approval process\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar _ = require('lodash/core'),\r\n    Promise = require('./promise'),\r\n    Conneciton = require('./connection');\r\n\r\n/**\r\n * A class which manages process rules and approval processes\r\n *\r\n * @class\r\n * @param {Connection} conn - Connection object\r\n */\r\nvar Process = module.exports = function(conn) {\r\n  /**\r\n   * Object which mangages process rules\r\n   * @member {Process~ProcessRule} Process#rule\r\n   */\r\n  this.rule = new ProcessRule(conn);\r\n  /**\r\n   * Object which mangages approval process\r\n   * @member {Process~ApprovalProcess} Process#approval\r\n   */\r\n  this.approval = new ApprovalProcess(conn);\r\n};\r\n\r\n/**\r\n * A class which manages process (workflow) rules\r\n *\r\n * @class Process~ProcessRule\r\n * @param {Connection} conn - Connection object\r\n */\r\nvar ProcessRule = function(conn) {\r\n  this._conn = conn;\r\n};\r\n\r\n/**\r\n * @typedef {Object} Process~ProcessRuleDefinition\r\n * @prop {String} id - Id of approval process definition\r\n * @prop {String} name - Name of process rule definition\r\n * @prop {String} object - SObject name which process rule is defined\r\n */\r\n\r\n/**\r\n * Get all process rule definitions registered to sobjects\r\n *\r\n * @method Process~ProcessRule#list\r\n * @param {Callback.<Map.<String, Array.<Process~ProcessRuleDefinition>>>} [callback] - Callback function\r\n * @returns {Promise.<Map.<String, Array.<Process~ProcessRuleDefinition>>>}\r\n */\r\nProcessRule.prototype.list = function(callback) {\r\n  return this._conn.request(\"/process/rules\").then(function(res) {\r\n    return res.rules;\r\n  }).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} Process~ProcessRuleTriggerResult\r\n * @prop {Boolean} success - Is process rule trigger succeeded or not\r\n * @prop {Array.<Object>} errors - Array of errors returned if the request failed\r\n */\r\n\r\n/**\r\n * Trigger process rule for given entities\r\n *\r\n * @method Process~ProcessRule#trigger\r\n * @param {String|Array.<String>} contextIds - Entity ID(s) to trigger workflow process\r\n * @param {Callback.<Process~ProcessRuleTriggerResult>} [callback] - Callback function\r\n * @returns {Promise.<Process~ProcessRuleTriggerResult>}\r\n */\r\nProcessRule.prototype.trigger = function(contextIds, callback) {\r\n  contextIds = _.isArray(contextIds) ? contextIds : [ contextIds ];\r\n  return this._conn.request({\r\n    method: \"POST\",\r\n    url: \"/process/rules/\",\r\n    body: JSON.stringify({\r\n      contextIds: contextIds\r\n    }),\r\n    headers: {\r\n      \"content-type\": \"application/json\"\r\n    }\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * A class which manages approval processes\r\n *\r\n * @class Process~ApprovalProcess\r\n * @param {Connection} conn - Connection object\r\n */\r\nvar ApprovalProcess = function(conn) {\r\n  this._conn = conn;\r\n};\r\n\r\n/**\r\n * @typedef {Object} Process~ApprovalProcessDefinition\r\n * @prop {String} id - Id of approval process definition\r\n * @prop {String} name - Name of approval process definition\r\n * @prop {String} object - SObject name which approval process is defined\r\n * @prop {Number} sortOrder - Processing order of approval in SObject\r\n */\r\n/**\r\n * Get all approval process definitions registered to sobjects\r\n *\r\n * @method Process~ApprovalProcess#list\r\n * @param {Callback.<Map.<String, Array.<ApprovalProcessDefinition>>>} [callback] - Callback function\r\n * @returns {Promise.<Map.<String, Array.<ApprovalProcessDefinition>>>}\r\n */\r\nApprovalProcess.prototype.list = function(callback) {\r\n  return this._conn.request(\"/process/approvals\").then(function(res) {\r\n    return res.approvals;\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} Process~ApprovalProcessRequestResult\r\n * @prop {Boolean} success - True if processing or approval completed successfully\r\n * @prop {Array.<Object>} errors - The set of errors returned if the request failed\r\n * @prop {Array.<String>} actorIds - IDs of the users who are currently assigned to this approval step\r\n * @prop {String} entityId - Object being processed\r\n * @prop {String} instanceId - ID of the ProcessInstance associated with the object submitted for processing\r\n * @prop {String} instanceStatus - Status of the current process instance (not an individual object but the entire process instance)\r\n * @prop {Array.<String>} newWorkItemIds - Case-insensitive IDs that point to ProcessInstanceWorkitem items (the set of pending approval requests)\r\n */\r\n\r\n/**\r\n * Send bulk requests for approval process\r\n *\r\n * @method Process~ApprovalProcess#request\r\n * @param {Array.<ApprovalProcessRequest>} requests - Array of approval process request to send\r\n * @param {Callback.<Array.<ApprovalProcessRequestResult>>} - Callback function\r\n * @param {Promise.<Array.<ApprovalProcessRequestResult>>}\r\n */\r\nApprovalProcess.prototype.request = function(requests, callback) {\r\n  requests = requests.map(function(req) {\r\n    return req._request ? req._request : req;\r\n  });\r\n  return this._conn.request({\r\n    method: 'POST',\r\n    url: '/process/approvals',\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify({ requests: requests })\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Create approval process request\r\n *\r\n * @private\r\n */\r\nApprovalProcess.prototype._createRequest = function(actionType, contextId, comments, options, callback) {\r\n  if (typeof comments === \"function\") {\r\n    callback = comments;\r\n    options = null;\r\n    comments = null;\r\n  }\r\n  if (typeof options === \"function\") {\r\n    callback = options;\r\n    options = null;\r\n  }\r\n  options = options || {};\r\n  var request = {\r\n    actionType: actionType,\r\n    contextId: contextId,\r\n    comments: comments\r\n  };\r\n  _.extend(request, options);\r\n  return new ApprovalProcessRequest(this, request).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Submit approval request for an item\r\n *\r\n * @method Process~ApprovalProcess#submit\r\n * @param {String} contextId - ID of the item that is being acted upon\r\n * @param {String} [comments] - Comment to add to the history step associated with this request\r\n * @param {Object} [options] - Request parameters\r\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\r\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\r\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\r\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\r\n * @returns {ApprovalProcessRequest}\r\n */\r\nApprovalProcess.prototype.submit = function(contextId, comments, options, callback) {\r\n  return this._createRequest(\"Submit\", contextId, comments, options, callback);\r\n};\r\n\r\n/**\r\n * Approve approval request for an item\r\n *\r\n * @method Process~ApprovalProcess#approve\r\n * @param {String} workitemId - ID of the item that is being acted upon\r\n * @param {String} [comments] - Comment to add to the history step associated with this request\r\n * @param {Object} [options] - Request parameters\r\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\r\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\r\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\r\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\r\n * @returns {ApprovalProcessRequest}\r\n */\r\nApprovalProcess.prototype.approve = function(workitemId, comments, options, callback) {\r\n  return this._createRequest(\"Approve\", workitemId, comments, options, callback);\r\n};\r\n\r\n/**\r\n * Reject approval request for an item\r\n *\r\n * @method Process~ApprovalProcess#reject\r\n * @param {String} workitemId - ID of the item that is being acted upon\r\n * @param {String} [comments] - Comment to add to the history step associated with this request\r\n * @param {Object} [options] - Request parameters\r\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\r\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\r\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\r\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\r\n * @returns {ApprovalProcessRequest}\r\n */\r\nApprovalProcess.prototype.reject = function(workitemId, comments, options, callback) {\r\n  return this._createRequest(\"Reject\", workitemId, comments, options, callback);\r\n};\r\n\r\n/**\r\n * A class representing approval process request\r\n *\r\n * @protected\r\n * @class Process~ApprovalProcessRequest\r\n * @implements {Promise.<Process~ApprovalProcessRequestResult>}\r\n * @param {Process~ApprovalProcess} process - ApprovalProcess\r\n * @param {Object} request - Request parameters\r\n * @param {String} request.actionType - Represents the kind of action to take: Submit, Approve, or Reject\r\n * @param {String} request.contextId - ID of the item that is being acted upon\r\n * @param {String} request.comments - Comment to add to the history step associated with this request\r\n * @param {Array.<String>} [request.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\r\n * @param {String} [request.processDefinitionNameOrId] - Developer name or ID of the process definition\r\n * @param {Boolean} [request.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\r\n */\r\nvar ApprovalProcessRequest = function(process, request) {\r\n  this._process = process;\r\n  this._request = request;\r\n};\r\n\r\n/**\r\n * Promise/A+ interface\r\n * http://promises-aplus.github.io/promises-spec/\r\n *\r\n * @method Process~ApprovalProcessRequest#then\r\n */\r\nApprovalProcessRequest.prototype.then = function(onResolve, onReject) {\r\n  if (!this._promise) {\r\n    this._promise = this._process.request([ this ]).then(function(rets) {\r\n      return rets[0];\r\n    });\r\n  }\r\n  this._promise.then(onResolve, onReject);\r\n};\r\n\r\n/**\r\n * Promise/A+ extension\r\n * Call \"then\" using given node-style callback function\r\n *\r\n * @method Process~ApprovalProcessRequest#thenCall\r\n */\r\nApprovalProcessRequest.prototype.thenCall = function(callback) {\r\n  return callback ? this.then(function(res) {\r\n    callback(null, res);\r\n  }, function(err) {\r\n    callback(err);\r\n  }) :\r\n  this;\r\n};\r\n\n},{\"./connection\":9,\"./promise\":17,\"lodash/core\":42}],17:[function(require,module,exports){\n(function (process){\n/*global process*/\r\n\r\n'use strict';\r\n\r\nvar _ = require('lodash/core');\r\n\r\n/**\r\n * @callback ResolvedCallback\r\n * @param {T} result - Resolved value\r\n * @returns {S}\r\n * @template T,S\r\n */\r\n\r\n/**\r\n * @callback RejectedCallback\r\n * @param {Error} reason - Rejected reason\r\n * @returns {S}\r\n * @template S\r\n */\r\n\r\n/**\r\n * @callback ResolveCallback\r\n * @param {T} result\r\n * @template T\r\n */\r\n\r\n/**\r\n * @callback RejectedCallback\r\n * @param {Error} reason - Rejected reason\r\n * @returns {S}\r\n * @template S\r\n */\r\n\r\n/**\r\n * @callback PromiseCallback\r\n * @param {ResolveCallback.<T>} resolve\r\n * @param {RejectCallback} reject\r\n * @template T\r\n */\r\n\r\n/**\r\n * Promise class with a little extension\r\n *\r\n * @class Promise\r\n * @constructor\r\n * @param {PromiseCallback.<T>}\r\n * @template T\r\n */\r\nvar Promise = require('promise/lib/es6-extensions');\r\n\r\n/**\r\n * The \"then\" method from the Promises/A+ specification\r\n *\r\n * @method Promise#then\r\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\r\n * @param {RejectedCallback.<S2>} [onRejected]\r\n * @returns {Promise.<S1|S2>}\r\n */\r\n\r\n/**\r\n * Call \"then\" using given node-style callback function.\r\n * This is basically same as \"nodeify\" except that it always return the original promise\r\n *\r\n * @method Promise#thenCall\r\n * @param {Callback.<T>} [callback] - Callback function\r\n * @returns {Promise}\r\n */\r\nPromise.prototype.thenCall = function(callback) {\r\n  if (_.isFunction(callback)) {\r\n    this.then(function(res) {\r\n      process.nextTick(function() {\r\n        callback(null, res);\r\n      });\r\n    }, function(err) {\r\n      process.nextTick(function() {\r\n        callback(err);\r\n      });\r\n    });\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * A sugar method, equivalent to promise.then(undefined, onRejected).\r\n *\r\n * @method Promise#catch\r\n * @param {RejectedCallback.<S>} onRejected\r\n * @returns {Promise.<S>}\r\n */\r\n\r\n/**\r\n * Synonym of Promise#catch\r\n *\r\n * @method Promise#fail\r\n * @param {RejectedCallback.<S>} onRejected\r\n * @returns {Promise.<S>}\r\n */\r\nPromise.prototype.fail = Promise.prototype['catch'];\r\n\r\n/**\r\n * Returns resolving promise with given reason\r\n *\r\n * @method Promise.resolve\r\n * @param {*} result - Resolved value\r\n * @returns {Promise}\r\n */\r\n\r\n/**\r\n * Returns rejecting promise with given reason\r\n *\r\n * @method Promise.reject\r\n * @param {Error} reason - Rejecting reason\r\n * @returns {Promise}\r\n */\r\n\r\n/**\r\n * Returns a promise that is fulfilled with an array containing the fulfillment value of each promise,\r\n * or is rejected with the same rejection reason as the first promise to be rejected.\r\n *\r\n * @method Promise.all\r\n * @param {Array.<Promise.<*>|*>} promises\r\n * @returns {Promise.<Array.<*>>}\r\n */\r\n\r\n/**\r\n * Returns a deferred object\r\n *\r\n * @method Promise.defer\r\n * @returns {Deferred}\r\n */\r\nPromise.defer = function() {\r\n  return new Deferred();\r\n};\r\n\r\n/**\r\n * Deferred object\r\n *\r\n * @protected\r\n * @constructor\r\n */\r\nvar Deferred = function() {\r\n  var self = this;\r\n  this.promise = new Promise(function(resolve, reject) {\r\n    self.resolve = resolve;\r\n    self.reject = reject;\r\n  });\r\n};\r\n\r\n/**\r\n * Resolve promise\r\n * @method Deferred#resolve\r\n * @param {*} result - Resolving result\r\n */\r\n\r\n/**\r\n * Reject promise\r\n * @method Deferred#reject\r\n * @param {Error} error - Rejecting reason\r\n */\r\n\r\n/**\r\n *\r\n */\r\nmodule.exports = Promise;\r\n\n}).call(this,require('_process'))\n\n},{\"_process\":45,\"lodash/core\":42,\"promise/lib/es6-extensions\":47}],18:[function(require,module,exports){\n(function (process){\n/*global process*/\r\n/**\r\n * @file Manages query for records in Salesforce\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar inherits = require('inherits'),\r\n    events = require('events'),\r\n    stream = require('readable-stream'),\r\n    _      = require('lodash/core'),\r\n    Promise = require('./promise'),\r\n    SfDate = require(\"./date\"),\r\n    SOQLBuilder = require(\"./soql-builder\"),\r\n    RecordStream = require(\"./record-stream\");\r\n\r\n/**\r\n * Query\r\n *\r\n * @protected\r\n * @class\r\n * @extends {stream.Readable}\r\n * @implements Promise.<T>\r\n * @template T\r\n * @param {Connection} conn - Connection object\r\n * @param {Object|String} config - Query config object or SOQL string\r\n * @param {Object} [options] - Default query options\r\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\r\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\r\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n */\r\nvar Query = module.exports = function(conn, config, options) {\r\n  Query.super_.call(this, { objectMode: true });\r\n\r\n  this._conn = conn;\r\n  if (_.isString(config)) { // if query config is string, it is given in SOQL.\r\n    this._soql = config;\r\n  } else if (config.locator && config.locator.indexOf(\"/\") >= 0) { // if locator given in url for next records\r\n    this._locator = config.locator.split(\"/\").pop();\r\n  } else {\r\n    this._config = config;\r\n    this.select(config.fields);\r\n    if (config.includes) {\r\n      this.include(config.includes);\r\n    }\r\n    if (config.sort) {\r\n      this.sort(config.sort);\r\n    }\r\n  }\r\n  this._options = _.defaults(options || {}, {\r\n    maxFetch: 10000,\r\n    autoFetch: false,\r\n    scanAll: false,\r\n    responseTarget: ResponseTargets.QueryResult\r\n  });\r\n  this._executed = false;\r\n  this._finished = false;\r\n  this._chaining = false;\r\n\r\n  this._deferred = Promise.defer();\r\n\r\n  var self = this;\r\n};\r\n\r\ninherits(Query, stream.Readable);\r\n\r\n/**\r\n * Select fields to include in the returning result\r\n *\r\n * @param {Object|Array.<String>|String} fields - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.select = function(fields) {\r\n  if (this._soql) {\r\n    throw Error(\"Cannot set select fields for the query which has already built SOQL.\");\r\n  }\r\n  fields = fields || '*';\r\n  if (_.isString(fields)) {\r\n    fields = fields.split(/\\s*,\\s*/);\r\n  } else if (_.isObject(fields) && !_.isArray(fields)) {\r\n    var _fields =  [];\r\n    for (var k in fields) {\r\n      if (fields[k]) { _fields.push(k); }\r\n    }\r\n    fields = _fields;\r\n  }\r\n  this._config.fields = fields;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set query conditions to filter the result records\r\n *\r\n * @param {Object|String} conditions - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.where = function(conditions) {\r\n  if (this._soql) {\r\n    throw Error(\"Cannot set where conditions for the query which has already built SOQL.\");\r\n  }\r\n  this._config.conditions = conditions;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Limit the returning result\r\n *\r\n * @param {Number} limit - Maximum number of records the query will return.\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.limit = function(limit) {\r\n  if (this._soql) {\r\n    throw Error(\"Cannot set limit for the query which has already built SOQL.\");\r\n  }\r\n  this._config.limit = limit;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Synonym of Query#offset()\r\n *\r\n * @method Query#skip\r\n * @param {Number} offset - Offset number where begins returning results.\r\n * @returns {Query.<T>}\r\n */\r\n/**\r\n * Skip records\r\n *\r\n * @method Query#offset\r\n * @param {Number} offset - Offset number where begins returning results.\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.skip =\r\nQuery.prototype.offset = function(offset) {\r\n  if (this._soql) {\r\n    throw Error(\"Cannot set skip/offset for the query which has already built SOQL.\");\r\n  }\r\n  this._config.offset = offset;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Synonym of Query#sort()\r\n *\r\n * @memthod Query#orderby\r\n * @param {String|Object} sort - Sorting field or hash object with field name and sord direction\r\n * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)\r\n * @returns {Query.<T>}\r\n */\r\n/**\r\n * Set query sort with direction\r\n *\r\n * @method Query#sort\r\n * @param {String|Object} sort - Sorting field or hash object with field name and sord direction\r\n * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.sort =\r\nQuery.prototype.orderby = function(sort, dir) {\r\n  if (this._soql) {\r\n    throw Error(\"Cannot set sort for the query which has already built SOQL.\");\r\n  }\r\n  if (_.isString(sort) && _.isString(dir)) {\r\n    sort = [ [ sort, dir ] ];\r\n  }\r\n  this._config.sort = sort;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Include child relationship query\r\n *\r\n * @param {String} childRelName - Child relationship name to include in query result\r\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\r\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\r\n * @param {Object} [options] - Optional query configulations.\r\n * @param {Number} [options.limit] - Maximum number of records the query will return.\r\n * @param {Number} [options.offset] - Offset number where begins returning results.\r\n * @param {Number} [options.skip] - Synonym of options.offset.\r\n * @returns {Query~SubQuery}\r\n */\r\nQuery.prototype.include = function(childRelName, conditions, fields, options) {\r\n  if (this._soql) {\r\n    throw Error(\"Cannot include child relationship into the query which has already built SOQL.\");\r\n  }\r\n  if (_.isObject(childRelName)) {\r\n    var includes = childRelName;\r\n    for (var crname in includes) {\r\n      var config = includes[crname];\r\n      this.include(crname, config.conditions, config.fields, config);\r\n    }\r\n    return;\r\n  }\r\n  var childConfig = {\r\n    table: childRelName,\r\n    conditions: conditions,\r\n    fields: fields,\r\n    limit: options && options.limit,\r\n    offset: options && (options.offset || options.skip),\r\n    sort: options && options.sort\r\n  };\r\n  if (!_.isArray(this._config.includes)) this._config.includes = [];\r\n  this._config.includes.push(childConfig);\r\n  var childQuery = new SubQuery(this._conn, this, childConfig);\r\n  this._children = this._children || [];\r\n  this._children.push(childQuery);\r\n  return childQuery;\r\n};\r\n\r\n\r\n/**\r\n * Setting maxFetch query option\r\n *\r\n * @param {Number} maxFetch - Max fetching records in auto fetch mode\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.maxFetch = function(maxFetch) {\r\n  this._options.maxFetch = maxFetch;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Switching auto fetch mode\r\n *\r\n * @param {Boolean} autoFetch - Using auto fetch mode or not\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.autoFetch = function(autoFetch) {\r\n  this._options.autoFetch = autoFetch;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set flag to scan all records including deleted and archived.\r\n *\r\n * @param {Boolean} scanAll - Flag whether include deleted/archived record or not. Default is false.\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.scanAll = function(scanAll) {\r\n  this._options.scanAll = scanAll;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nvar ResponseTargets = Query.ResponseTargets = {};\r\n[ \"QueryResult\", \"Records\", \"SingleRecord\", \"Count\" ].forEach(function(f) {\r\n  ResponseTargets[f] = f;\r\n});\r\n\r\n/**\r\n * @protected\r\n * @param {String} responseTarget - Query response target\r\n * @returns {Query.<S>}\r\n */\r\nQuery.prototype.setResponseTarget = function(responseTarget) {\r\n  if (responseTarget in ResponseTargets) {\r\n    this._options.responseTarget = responseTarget;\r\n  }\r\n  return this;\r\n};\r\n\r\n\r\n/**\r\n * Synonym of Query#execute()\r\n *\r\n * @method Query#run\r\n * @param {Object} [options] - Query options\r\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\r\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\r\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n * @param {Callback.<T>} [callback] - Callback function\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.run =\r\n/**\r\n * Synonym of Query#execute()\r\n *\r\n * @method Query#exec\r\n * @param {Object} [options] - Query options\r\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\r\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\r\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n * @param {Callback.<T>} [callback] - Callback function\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.exec =\r\n/**\r\n * Execute query and fetch records from server.\r\n *\r\n * @method Query#execute\r\n * @param {Object} [options] - Query options\r\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\r\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\r\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n * @param {Callback.<T>} [callback] - Callback function\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.execute = function(options, callback) {\r\n  var self = this;\r\n  var logger = this._conn._logger;\r\n  var deferred = this._deferred;\r\n\r\n  if (this._executed) {\r\n    deferred.reject(new Error(\"re-executing already executed query\"));\r\n    return this;\r\n  }\r\n\r\n  if (this._finished) {\r\n    deferred.reject(new Error(\"executing already closed query\"));\r\n    return this;\r\n  }\r\n\r\n  if (typeof options === \"function\") {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  options = {\r\n    headers: options.headers || self._options.headers,\r\n    responseTarget: options.responseTarget || self._options.responseTarget,\r\n    autoFetch: options.autoFetch || self._options.autoFetch,\r\n    maxFetch: options.maxFetch || self._options.maxFetch,\r\n    scanAll: options.scanAll || self._options.scanAll\r\n  };\r\n\r\n  // callback and promise resolution;\r\n  var promiseCallback = function(err, res) {\r\n    if (_.isFunction(callback)) {\r\n      try {\r\n        res = callback(err, res);\r\n        err = null;\r\n      } catch(e) {\r\n        err = e;\r\n      }\r\n    }\r\n    if (err) {\r\n      deferred.reject(err);\r\n    } else {\r\n      deferred.resolve(res);\r\n    }\r\n  };\r\n  this.once('response', function(res) {\r\n    promiseCallback(null, res);\r\n  });\r\n  this.once('error', function(err) {\r\n    promiseCallback(err);\r\n  });\r\n\r\n  // collect fetched records in array\r\n  // only when response target is Records and\r\n  // either callback or chaining promises are available to this query.\r\n  this.once('fetch', function() {\r\n    if (options.responseTarget === ResponseTargets.Records && (self._chaining || callback)) {\r\n      logger.debug('--- collecting all fetched records ---');\r\n      var records = [];\r\n      var onRecord = function(record) {\r\n        records.push(record);\r\n      };\r\n      self.on('record', onRecord);\r\n      self.once('end', function() {\r\n        self.removeListener('record', onRecord);\r\n        self.emit('response', records, self);\r\n      });\r\n    }\r\n  });\r\n\r\n  // flag to prevent re-execution\r\n  this._executed = true;\r\n\r\n  // start actual query\r\n  logger.debug('>>> Query start >>>');\r\n  this._execute(options).then(function() {\r\n    logger.debug('*** Query finished ***');\r\n  }).fail(function(err) {\r\n    logger.debug('--- Query error ---');\r\n    self.emit('error', err);\r\n  });\r\n\r\n  // return Query instance for chaining\r\n  return this;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nQuery.prototype._execute = function(options) {\r\n  var self = this;\r\n  var logger = this._conn._logger;\r\n  var responseTarget = options.responseTarget;\r\n  var autoFetch = options.autoFetch;\r\n  var maxFetch = options.maxFetch;\r\n  var scanAll = options.scanAll;\r\n\r\n  return Promise.resolve(\r\n    self._locator ?\r\n    self._conn._baseUrl() + \"/query/\" + self._locator :\r\n    self.toSOQL().then(function(soql) {\r\n      self.totalFetched = 0;\r\n      logger.debug(\"SOQL = \" + soql);\r\n      return self._conn._baseUrl() + \"/\" + (scanAll ? \"queryAll\" : \"query\") + \"?q=\" + encodeURIComponent(soql);\r\n    })\r\n  ).then(function(url) {\r\n    return self._conn.request({\r\n      method: 'GET',\r\n      url: url,\r\n      headers: options.headers\r\n    });\r\n  }).then(function(data) {\r\n    self.emit(\"fetch\");\r\n    self.totalSize = data.totalSize;\r\n    var res;\r\n    switch(responseTarget) {\r\n      case ResponseTargets.SingleRecord:\r\n        res = data.records && data.records.length > 0 ? data.records[0] : null;\r\n        break;\r\n      case ResponseTargets.Records:\r\n        res = data.records;\r\n        break;\r\n      case ResponseTargets.Count:\r\n        res = data.totalSize;\r\n        break;\r\n      default:\r\n        res = data;\r\n    }\r\n    // only fire response event when it should be notified per fetch\r\n    if (responseTarget !== ResponseTargets.Records) {\r\n      self.emit(\"response\", res, self);\r\n    }\r\n\r\n    // streaming record instances\r\n    var numRecords = (data.records && data.records.length) || 0;\r\n    for (var i=0; i<numRecords; i++) {\r\n      if (self.totalFetched >= maxFetch) {\r\n        self._finished = true;\r\n        break;\r\n      }\r\n      var record = data.records[i];\r\n      self.push(record);\r\n      self.emit('record', record, self.totalFetched++, self);\r\n    }\r\n    if (data.nextRecordsUrl) {\r\n      self._locator = data.nextRecordsUrl.split('/').pop();\r\n    }\r\n    self._finished = self._finished || data.done || !autoFetch;\r\n    if (self._finished) {\r\n      self.push(null);\r\n    } else {\r\n      self._execute(options);\r\n    }\r\n    return res;\r\n  });\r\n};\r\n\r\n/**\r\n * Readable stream implementation\r\n *\r\n * @override\r\n * @private\r\n */\r\nQuery.prototype._read = function(size) {\r\n  if (!this._finished && !this._executed) {\r\n    this.execute({ autoFetch: true });\r\n  }\r\n};\r\n\r\n/** @override **/\r\nQuery.prototype.on = function(e, fn) {\r\n  if (e === 'record') {\r\n    var self = this;\r\n    this.on('readable', function() {\r\n      while(self.read() !== null) {} // discard buffered records\r\n    });\r\n  }\r\n  return Query.super_.prototype.on.call(this, e, fn);\r\n};\r\n\r\n/** @override **/\r\nQuery.prototype.addListener = Query.prototype.on;\r\n\r\n\r\n/**\r\n * @private\r\n */\r\nQuery.prototype._expandFields = function() {\r\n  if (this._soql) {\r\n    return Promise.reject(new Error(\"Cannot expand fields for the query which has already built SOQL.\"));\r\n  }\r\n  var self = this;\r\n  var logger = self._conn._logger;\r\n  var conn = this._conn;\r\n  var table = this._config.table;\r\n  var fields = this._config.fields || [];\r\n\r\n  logger.debug('_expandFields: table = ' + table + ', fields = ' + fields.join(', '));\r\n\r\n  return Promise.all([\r\n    Promise.resolve(self._parent ? findRelationTable(table) : table)\r\n      .then(function(table) {\r\n        return Promise.all(\r\n          _.map(fields, function(field) { return expandAsteriskField(table, field); })\r\n        ).then(function(expandedFields) {\r\n          self._config.fields = _.flatten(expandedFields);\r\n        });\r\n      }),\r\n    Promise.all(\r\n      _.map(self._children || [], function(childQuery) {\r\n        return childQuery._expandFields();\r\n      })\r\n    )\r\n  ]);\r\n\r\n  function findRelationTable(rname) {\r\n    var ptable = self._parent._config.table;\r\n    logger.debug('finding table for relation \"' + rname + '\" in \"' + ptable + '\"...');\r\n    return describeCache(ptable).then(function(sobject) {\r\n      var upperRname = rname.toUpperCase();\r\n      var childRelation = _.find(sobject.childRelationships, function(cr) {\r\n        return (cr.relationshipName || '').toUpperCase() === upperRname;\r\n      });\r\n      return childRelation ? childRelation.childSObject :\r\n        Promise.reject(new Error(\"No child relationship found: \" + rname ));\r\n    });\r\n  }\r\n\r\n  function describeCache(table) {\r\n    logger.debug('describe cache: '+table);\r\n    var deferred = Promise.defer();\r\n    conn.describe$(table, function(err, sobject) {\r\n      logger.debug('... done.');\r\n      if (err) { deferred.reject(err); }\r\n      else { deferred.resolve(sobject); }\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  function expandAsteriskField(table, field) {\r\n    logger.debug('expanding field \"'+ field + '\" in \"' + table + '\"...');\r\n    var fpath = field.split('.');\r\n    return fpath[fpath.length - 1] === '*' ?\r\n      describeCache(table).then(function(sobject) {\r\n        logger.debug('table '+table+'has been described');\r\n        if (fpath.length > 1) {\r\n          var rname = fpath.shift();\r\n          var rfield = _.find(sobject.fields, function(f) {\r\n            return f.relationshipName &&\r\n                   f.relationshipName.toUpperCase() === rname.toUpperCase();\r\n          });\r\n          if (rfield) {\r\n            var rtable = rfield.referenceTo.length === 1 ? rfield.referenceTo[0] : 'Name';\r\n            return expandAsteriskField(rtable, fpath.join('.')).then(function(fpaths) {\r\n              return _.map(fpaths, function(fpath) { return rname + '.' + fpath; });\r\n            });\r\n          } else {\r\n            return [];\r\n          }\r\n        } else {\r\n          return _.map(sobject.fields, function(f) { return f.name; });\r\n        }\r\n      }) :\r\n      Promise.resolve([ field ]);\r\n  }\r\n};\r\n\r\n/**\r\n * Explain plan for executing query\r\n *\r\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\r\n * @returns {Promise.<ExplainInfo>}\r\n */\r\nQuery.prototype.explain = function(callback) {\r\n  var self = this;\r\n  var logger = this._conn._logger;\r\n  return self.toSOQL().then(function(soql) {\r\n    logger.debug(\"SOQL = \" + soql);\r\n    var url = \"/query/?explain=\" + encodeURIComponent(soql);\r\n    return self._conn.request(url);\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Return SOQL expression for the query\r\n *\r\n * @param {Callback.<String>} [callback] - Callback function\r\n * @returns {Promise.<String>}\r\n */\r\nQuery.prototype.toSOQL = function(callback) {\r\n  var self = this;\r\n  return Promise.resolve(self._soql ||\r\n    self._expandFields().then(function() { return SOQLBuilder.createSOQL(self._config); })\r\n  ).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Create data stream of queried records.\r\n * Automatically resume query if paused.\r\n *\r\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\r\n * @param {Object} [options] - Options passed to converter\r\n * @returns {stream.Readable}\r\n */\r\nQuery.prototype.stream = RecordStream.Serializable.prototype.stream;\r\n\r\n/**\r\n * Get record stream of queried records applying the given mapping function\r\n *\r\n * @param {RecordMapFunction} fn - Record mapping function\r\n * @returns {RecordStream.Serializable}\r\n */\r\nQuery.prototype.map = RecordStream.prototype.map;\r\n\r\n/**\r\n * Get record stream of queried records, applying the given filter function\r\n *\r\n * @param {RecordFilterFunction} fn - Record filtering function\r\n * @returns {RecordStream.Serializable}\r\n */\r\nQuery.prototype.filter = RecordStream.prototype.map;\r\n\r\n/*\r\n * Default threshold num of bulk API switching\r\n */\r\nvar DEFAULT_BULK_THRESHOLD = 200;\r\n\r\n/**\r\n * Synonym of Query#destroy()\r\n *\r\n * @method Query#delete\r\n * @param {String} [type] - SObject type. Required for SOQL based query object.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\n/**\r\n * Synonym of Query#destroy()\r\n *\r\n * @method Query#del\r\n * @param {String} [type] - SObject type. Required for SOQL based query object.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\n/**\r\n * Delete queried records\r\n *\r\n * @method Query#destroy\r\n * @param {String} [type] - SObject type. Required for SOQL based query object.\r\n * @param {Object} [options] - Mass delete operation options\r\n * @param {Boolean} [options.allowBulk] - Allow switching to Bulk API when the num of queried records reached to certain threshold. Default is true.\r\n * @param {Number} [options.bulkThreshold] - Threshold num to switch to use Bulk API instead of usual `SObject#delete()` call. Default value is 200 after API ver 42.0, and 0.5 * `maxRequest` before API ver 42.0.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\nQuery.prototype[\"delete\"] =\r\nQuery.prototype.del =\r\nQuery.prototype.destroy = function(type, options, callback) {\r\n  if (typeof type === 'function') {\r\n    callback = type;\r\n    options = {};\r\n    type = null;\r\n  } else if (typeof type === 'object' && type !== null) {\r\n    callback = options;\r\n    options = type;\r\n    type = null;\r\n  }\r\n  options = options || {};\r\n  type = type || (this._config && this._config.table);\r\n  if (!type) {\r\n    throw new Error(\"SOQL based query needs SObject type information to bulk delete.\");\r\n  }\r\n  // Set the threshold number to pass to bulk API\r\n  var thresholdNum =\r\n    options.allowBulk === false ?\r\n      -1 :\r\n    typeof options.bulkThreshold === 'number' ?\r\n      options.bulkThreshold :\r\n      // determine threshold if the connection version supports SObject collection API or not\r\n      (this._conn._ensureVersion(42) ? DEFAULT_BULK_THRESHOLD : this._conn.maxRequest / 2);\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    var records = [];\r\n    var batch = null;\r\n    var handleRecord = function(rec) {\r\n      if (!rec.Id) {\r\n        self.emit('error', new Error('Queried record does not include Salesforce record ID.'))\r\n        return;\r\n      }\r\n      var record = { Id: rec.Id };\r\n      if (batch) {\r\n        batch.write(record);\r\n      } else {\r\n        records.push(record);\r\n        if (thresholdNum < 0 || records.length > thresholdNum) {\r\n          // Use bulk delete instead of SObject REST API\r\n          batch =\r\n            self._conn.sobject(type).deleteBulk()\r\n              .on('response', resolve)\r\n              .on('error', reject);\r\n          records.forEach(function(record) {\r\n            batch.write(record);\r\n          });\r\n          records = [];\r\n        }\r\n      }\r\n    };\r\n    var handleEnd = function() {\r\n      if (batch) {\r\n        batch.end();\r\n      } else {\r\n        var ids = records.map(function (record) { return record.Id; });\r\n        self._conn.sobject(type).destroy(ids, { allowRecursive: true }).then(resolve, reject);\r\n      }\r\n    };\r\n    self.on('data', handleRecord)\r\n      .on('end', handleEnd)\r\n      .on('error', reject);\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Update queried records, using given mapping function/object\r\n *\r\n * @param {Record|RecordMapFunction} mapping - Mapping record or record mapping function\r\n * @param {String} [type] - SObject type. Required for SOQL based query object.\r\n * @param {Object} [options] - Mass update operation options\r\n * @param {Boolean} [options.allowBulk] - Allow switching to Bulk API when the num of queried records reached to certain threshold. Default is true.\r\n * @param {Number} [options.bulkThreshold] - Threshold num to switch to use Bulk API instead of usual `SObject#delete()` call. Default value is 200 after API ver 42.0, and 0.5 * `maxRequest` before API ver 42.0.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\nQuery.prototype.update = function(mapping, type, options, callback) {\r\n  if (typeof type === 'function') {\r\n    callback = type;\r\n    options = {};\r\n    type = null;\r\n  } else if (typeof type === 'object' && type !== null) {\r\n    callback = options;\r\n    options = type;\r\n    type = null;\r\n  }\r\n  options = options || {};\r\n  type = type || (this._config && this._config.table);\r\n  if (!type) {\r\n    throw new Error(\"SOQL based query needs SObject type information to bulk update.\");\r\n  }\r\n  var updateStream = _.isFunction(mapping) ? RecordStream.map(mapping) : RecordStream.recordMapStream(mapping);\r\n  // Set the threshold number to pass to bulk API\r\n  var thresholdNum =\r\n    options.allowBulk === false ?\r\n      -1 :\r\n    typeof options.bulkThreshold === 'number' ?\r\n      options.bulkThreshold :\r\n      // determine threshold if the connection version supports SObject collection API or not\r\n      (this._conn._ensureVersion(42) ? DEFAULT_BULK_THRESHOLD : this._conn.maxRequest / 2);\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    var records = [];\r\n    var batch = null;\r\n    var handleRecord = function(record) {\r\n      if (batch) {\r\n        batch.write(record);\r\n      } else {\r\n        records.push(record);\r\n        if (thresholdNum < 0 || records.length > thresholdNum) {\r\n          // Use bulk update instead of SObject REST API\r\n          batch =\r\n            self._conn.sobject(type).updateBulk()\r\n              .on('response', resolve)\r\n              .on('error', reject);\r\n          records.forEach(function(record) {\r\n            batch.write(record);\r\n          });\r\n          records = [];\r\n        }\r\n      }\r\n    };\r\n    var handleEnd = function() {\r\n      if (batch) {\r\n        batch.end();\r\n      } else {\r\n        self._conn.sobject(type).update(records, { allowRecursive: true }).then(resolve, reject);\r\n      }\r\n    };\r\n    self.on('error', reject)\r\n      .pipe(updateStream)\r\n      .on('data', handleRecord)\r\n      .on('end', handleEnd)\r\n      .on('error', reject);\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Promise/A+ interface\r\n * http://promises-aplus.github.io/promises-spec/\r\n *\r\n * Delegate to deferred promise, return promise instance for query result\r\n *\r\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\r\n * @param {RejectedCallback.<S2>} [onRejected]\r\n * @returns {Promise.<S1|S2>}\r\n */\r\nQuery.prototype.then = function(onResolved, onReject) {\r\n  this._chaining = true;\r\n  if (!this._finished && !this._executed) { this.execute(); }\r\n  return this._deferred.promise.then.apply(this._deferred.promise, arguments);\r\n};\r\n\r\n/**\r\n * Promise/A+ extension\r\n * Call \"then\" using given node-style callback function\r\n *\r\n * @param {Callback.<T>} [callback] - Callback function\r\n * @returns {Query}\r\n */\r\nQuery.prototype.thenCall = function(callback) {\r\n  if (_.isFunction(callback)) {\r\n    this.then(function(res) {\r\n      process.nextTick(function() {\r\n        callback(null, res);\r\n      });\r\n    }, function(err) {\r\n      process.nextTick(function() {\r\n        callback(err);\r\n      });\r\n    });\r\n  }\r\n  return this;\r\n};\r\n\r\n/*--------------------------------------------*/\r\n\r\n/**\r\n * SubQuery object for representing child relationship query\r\n *\r\n * @protected\r\n * @class Query~SubQuery\r\n * @extends Query\r\n * @param {Connection} conn - Connection object\r\n * @param {Query} parent - Parent query object\r\n * @param {Object} config - Sub query configuration\r\n */\r\nvar SubQuery = function(conn, parent, config) {\r\n  SubQuery.super_.call(this, conn, config);\r\n  this._parent = parent;\r\n};\r\n\r\ninherits(SubQuery, Query);\r\n\r\n/**\r\n * @method Query~SubQuery#include\r\n * @override\r\n */\r\nSubQuery.prototype.include = function() {\r\n  throw new Error(\"Not allowed to include another subquery in subquery.\");\r\n};\r\n\r\n/**\r\n * Back the context to parent query object\r\n *\r\n * @method Query~SubQuery#end\r\n * @returns {Query}\r\n */\r\nSubQuery.prototype.end = function() {\r\n  return this._parent;\r\n};\r\n\r\n/**\r\n * If execute is called in subquery context, delegate it to parent query object\r\n *\r\n * @method Query~SubQuery#execute\r\n * @override\r\n */\r\nSubQuery.prototype.run =\r\nSubQuery.prototype.exec =\r\nSubQuery.prototype.execute = function() {\r\n  return this._parent.execute.apply(this._parent, arguments);\r\n};\r\n\n}).call(this,require('_process'))\n\n},{\"./date\":12,\"./promise\":17,\"./record-stream\":20,\"./soql-builder\":25,\"_process\":45,\"events\":36,\"inherits\":38,\"lodash/core\":42,\"readable-stream\":61}],19:[function(require,module,exports){\n/**\r\n * @file Represents Salesforce QuickAction\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\n\r\n/**\r\n * A class for quick action\r\n *\r\n * @protected\r\n * @constructor\r\n */\r\nvar QuickAction = module.exports = function(conn, path) {\r\n  this._conn = conn;\r\n  this._path = path;\r\n};\r\n\r\n/**\r\n * @typedef {Object} QuickAction~QuickActionInfo\r\n * @prop {String} type - Type of the action (e.g. Create, Update, Post, LogACall)\r\n * @prop {String} name - Name of the action\r\n * @prop {String} label - Label of the action\r\n * @prop {Object} urls - Endpoint URL information of the action\r\n */\r\n/**\r\n * @typedef {QuickAction~QuickActionInfo} QuickAction~QuickActionDescriveInfo\r\n * @prop {String} contextSobjectType - Object type used for the action\r\n * @prop {String} targetSobjectType - Object type of the action to target\r\n * @prop {String} targetParentField - Field name in the target object which refers parent(context) object record ID.\r\n * @prop {String} targetRecordTypeId - Record type of the targeted record\r\n * @prop {Object} layout - Layout sections that comprise an action\r\n */\r\n\r\n/**\r\n * Describe the action's information (including layout, etc.)\r\n *\r\n * @param {Callback.<QuickAction~QuickActionDescriveInfo>} [callback] - Callback function\r\n * @returns {Promise.<QuickAction~QuickActionDescriveInfo>}\r\n */\r\nQuickAction.prototype.describe = function(callback) {\r\n  var url = this._path + \"/describe\";\r\n  return this._conn.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Retrieve default field values in the action (for given record, if specified)\r\n *\r\n * @param {String} [contextId] - ID of record to get default values specific to the record\r\n * @param {Callback.<Record>} [callback] - Callback function\r\n * @returns {Promise.<Record>}\r\n */\r\nQuickAction.prototype.defaultValues = function(contextId, callback) {\r\n  if (typeof contextId === 'function') {\r\n    callback = contextId;\r\n    contextId = null;\r\n  }\r\n  var url = this._path + \"/defaultValues\";\r\n  if (contextId) {\r\n    url += \"/\" + contextId;\r\n  }\r\n  return this._conn.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} QuickAction~QuickActionResult\r\n * @param {String} id - Record id of the action result\r\n * @param {Array.<String>} feedItemIds - List of IDs for feed item\r\n * @param {Boolean} success - True if the action successfully completed\r\n * @param {Boolean} created - True if the action yields a new record\r\n * @param {String} contextId - Context record ID of the action\r\n * @param {Array.<Object>} errors - Errors if the action failed\r\n */\r\n\r\n/**\r\n * Execute the action for given context Id and record information\r\n * \r\n * @param {String} contextId - Context record ID of the action\r\n * @param {Record} record - Input record information for the action\r\n * @param {Callback.<QuickAction~QuickActionResult>} [callback] - Callback function\r\n * @returns {Promise.<QuickAction~QuickActionResult>}\r\n */\r\nQuickAction.prototype.execute = function(contextId, record, callback) {\r\n  var body = {\r\n    contextId: contextId,\r\n    record: record\r\n  };\r\n  return this._conn.requestPost(this._path, body).thenCall(callback);\r\n};\r\n\n},{}],20:[function(require,module,exports){\n/**\r\n * @file Represents stream that handles Salesforce record as stream data\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar events = require('events'),\r\n    stream = require('readable-stream'),\r\n    Duplex = stream.Duplex,\r\n    Transform = stream.Transform,\r\n    PassThrough = stream.PassThrough,\r\n    inherits = require('inherits'),\r\n    _      = require('lodash/core'),\r\n    CSV    = require('./csv');\r\n\r\n\r\n/**\r\n * Class for Record Stream\r\n *\r\n * @class\r\n * @constructor\r\n * @extends stream.Transform\r\n */\r\nvar RecordStream = module.exports = function() {\r\n  RecordStream.super_.call(this, { objectMode: true });\r\n};\r\n\r\ninherits(RecordStream, Transform);\r\n\r\n\r\n/*\r\n * @override\r\n */\r\nRecordStream.prototype._transform = function(record, enc, callback) {\r\n  this.emit('record', record);\r\n  this.push(record);\r\n  callback();\r\n};\r\n\r\n/**\r\n * Get record stream of queried records applying the given mapping function\r\n *\r\n * @param {RecordMapFunction} fn - Record mapping function\r\n * @returns {RecordStream}\r\n */\r\nRecordStream.prototype.map = function(fn) {\r\n  return this.pipe(RecordStream.map(fn));\r\n};\r\n\r\n/**\r\n * Get record stream of queried records, applying the given filter function\r\n *\r\n * @param {RecordFilterFunction} fn - Record filtering function\r\n * @returns {RecordStream}\r\n */\r\nRecordStream.prototype.filter = function(fn) {\r\n  return this.pipe(RecordStream.filter(fn));\r\n};\r\n\r\n\r\n/**\r\n * @class RecordStream.Serializable\r\n * @extends {RecordStream}\r\n */\r\nvar Serializable = RecordStream.Serializable = function() {\r\n  Serializable.super_.call(this);\r\n  this._dataStream = null;\r\n};\r\n\r\ninherits(Serializable, RecordStream);\r\n\r\n/**\r\n * Create readable data stream which emits serialized record data\r\n *\r\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\r\n * @param {Object} [options] - Options passed to converter\r\n * @returns {stream.Readable}\r\n*/\r\nSerializable.prototype.stream = function(type, options) {\r\n  type = type || 'csv';\r\n  var converter = DataStreamConverters[type];\r\n  if (!converter) {\r\n    throw new Error('Converting [' + type + '] data stream is not supported.');\r\n  }\r\n  if (!this._dataStream) {\r\n    this._dataStream = new PassThrough();\r\n    this.pipe(converter.serialize(options))\r\n      .pipe(this._dataStream);\r\n  }\r\n  return this._dataStream;\r\n};\r\n\r\n\r\n/**\r\n * @class RecordStream.Parsable\r\n * @extends {RecordStream}\r\n */\r\nvar Parsable = RecordStream.Parsable = function() {\r\n  Parsable.super_.call(this);\r\n  this._dataStream = null;\r\n};\r\n\r\ninherits(Parsable, RecordStream);\r\n\r\n/**\r\n * Create writable data stream which accepts serialized record data\r\n *\r\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\r\n * @param {Object} [options] - Options passed to converter\r\n * @returns {stream.Readable}\r\n*/\r\nParsable.prototype.stream = function(type, options) {\r\n  type = type || 'csv';\r\n  var converter = DataStreamConverters[type];\r\n  var self = this;\r\n  if (!converter) {\r\n    throw new Error('Converting [' + type + '] data stream is not supported.');\r\n  }\r\n  if (!this._dataStream) {\r\n    this._dataStream = new PassThrough();\r\n    this._parserStream = converter.parse(options).on('error', function(error) { self.emit('error', error); });\r\n    this._parserStream.pipe(this).pipe(new PassThrough({ objectMode: true, highWaterMark: ( 500 * 1000 ) }));\r\n  }\r\n  return this._dataStream;\r\n};\r\n\r\n\r\n/* @override */\r\nParsable.prototype.on = function(ev, fn) {\r\n  if (ev === 'readable' || ev === 'record') {\r\n    this._dataStream.pipe(this._parserStream);\r\n  }\r\n  return Parsable.super_.prototype.on.call(this, ev, fn);\r\n};\r\n\r\n/* @override */\r\nParsable.prototype.addListener = Parsable.prototype.on;\r\n\r\n/* --------------------------------------------------- */\r\n\r\n/**\r\n * @callback RecordMapFunction\r\n * @param {Record} record - Source record to map\r\n * @returns {Record}\r\n */\r\n\r\n/**\r\n * Create a record stream which maps records and pass them to downstream\r\n *\r\n * @param {RecordMapFunction} fn - Record mapping function\r\n * @returns {RecordStream.Serializable}\r\n */\r\nRecordStream.map = function(fn) {\r\n  var mapStream = new RecordStream.Serializable();\r\n  mapStream._transform = function(record, enc, callback) {\r\n    var rec = fn(record) || record; // if not returned record, use same record\r\n    this.push(rec);\r\n    callback();\r\n  };\r\n  return mapStream;\r\n};\r\n\r\n/**\r\n * Create mapping stream using given record template\r\n *\r\n * @param {Record} record - Mapping record object. In mapping field value, temlate notation can be used to refer field value in source record, if noeval param is not true.\r\n * @param {Boolean} [noeval] - Disable template evaluation in mapping record.\r\n * @returns {RecordStream.Serializable}\r\n */\r\nRecordStream.recordMapStream = function(record, noeval) {\r\n  return RecordStream.map(function(rec) {\r\n    var mapped = { Id: rec.Id };\r\n    for (var prop in record) {\r\n      mapped[prop] = noeval ? record[prop] : evalMapping(record[prop], rec);\r\n    }\r\n    return mapped;\r\n  });\r\n\r\n  function evalMapping(value, mapping) {\r\n    if (_.isString(value)) {\r\n      var m = /^\\$\\{(\\w+)\\}$/.exec(value);\r\n      if (m) { return mapping[m[1]]; }\r\n      return value.replace(/\\$\\{(\\w+)\\}/g, function($0, prop) {\r\n        var v = mapping[prop];\r\n        return _.isNull(v) || _.isUndefined(v) ? \"\" : String(v);\r\n      });\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * @callback RecordFilterFunction\r\n * @param {Record} record - Source record to filter\r\n * @returns {Boolean}\r\n */\r\n\r\n/**\r\n * Create a record stream which filters records and pass them to downstream\r\n *\r\n * @param {RecordFilterFunction} fn - Record filtering function\r\n * @returns {RecordStream.Serializable}\r\n */\r\nRecordStream.filter = function(fn) {\r\n  var filterStream = new RecordStream.Serializable();\r\n  filterStream._transform = function(record, enc, callback) {\r\n    if (fn(record)) { this.push(record); }\r\n    callback();\r\n  };\r\n  return filterStream;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nfunction convertRecordForSerialization(record, options) {\r\n  return Object.keys(record).reduce(function(rec, key) {\r\n    var value = rec[key];\r\n    var t = typeof value;\r\n    var urec = {};\r\n    if (key === 'attributes') { // 'attributes' prop will be ignored\r\n      rec = _.extend({}, rec);\r\n      delete rec[key];\r\n    } else if (options.nullValue && value === null) {\r\n      urec[key] = options.nullValue;\r\n      rec = _.extend({}, rec, urec);\r\n    } else if (value !== null && typeof value === 'object') {\r\n      var precord = convertRecordForSerialization(value, options);\r\n      rec = Object.keys(precord).reduce(function(prec, pkey) {\r\n        prec[key + '.' + pkey] = precord[pkey];\r\n        return prec;\r\n      }, _.extend({}, rec));\r\n    }\r\n    return rec;\r\n  }, record);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction createPipelineStream(s1, s2) {\r\n  var pipeline = new PassThrough();\r\n  pipeline.on('pipe', function(source) {\r\n    source.unpipe(pipeline);\r\n    source.pipe(s1).pipe(s2);\r\n  });\r\n  pipeline.pipe = function(dest, options) {\r\n    return s2.pipe(dest, options);\r\n  };\r\n  return pipeline;\r\n}\r\n\r\n/** ---------------------------------------------------------------------- **/\r\n\r\n/**\r\n * @private\r\n */\r\nvar CSVStreamConverter = {\r\n  serialize: function(options) {\r\n    options = options || {};\r\n    return createPipelineStream(\r\n      RecordStream.map(function(record) {\r\n        return convertRecordForSerialization(record, options);\r\n      }),\r\n      CSV.serializeCSVStream(options)\r\n    );\r\n  },\r\n  parse: function(options) {\r\n    return CSV.parseCSVStream(options);\r\n  }\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nvar DataStreamConverters = RecordStream.DataStreamConverters = {\r\n  csv: CSVStreamConverter\r\n};\r\n\n},{\"./csv\":11,\"events\":36,\"inherits\":38,\"lodash/core\":42,\"readable-stream\":61}],21:[function(require,module,exports){\n/**\r\n * @file Represents Salesforce record information\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar _ = require('lodash/core');\r\n\r\n/**\r\n * A simple hash object including record field information\r\n *\r\n * @typedef {Object} Record\r\n */\r\n\r\n/**\r\n * Remote reference to record information\r\n *\r\n * @protected\r\n * @class\r\n * @constructor\r\n * @param {Connection} conn - Connection object\r\n * @param {String} type - SObject type\r\n * @param {String} id - Record ID\r\n */\r\nvar RecordReference = module.exports = function(conn, type, id) {\r\n  this._conn = conn;\r\n  this.type = type;\r\n  this.id = id;\r\n};\r\n\r\n/**\r\n * Retrieve record field information\r\n *\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<Record>} [callback] - Callback function\r\n * @returns {Promise.<Record>}\r\n */\r\nRecordReference.prototype.retrieve = function(options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.retrieve(this.type, this.id, options, callback);\r\n};\r\n\r\n/**\r\n * Update record field information\r\n *\r\n * @param {Record} record - A Record which includes fields to update\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult>}\r\n */\r\nRecordReference.prototype.update = function(record, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  record = _.clone(record);\r\n  record.Id = this.id;\r\n  return this._conn.update(this.type, record, options, callback);\r\n};\r\n\r\n/**\r\n * Synonym of Record#destroy()\r\n *\r\n * @method RecordReference#delete\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult>}\r\n */\r\nRecordReference.prototype[\"delete\"] =\r\n/**\r\n * Synonym of Record#destroy()\r\n *\r\n * @method RecordReference#del\r\n * @param {Callback.<RecordResult>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult>}\r\n */\r\nRecordReference.prototype.del =\r\n/**\r\n * Delete record field\r\n *\r\n * @method RecordReference#destroy\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult>}\r\n */\r\nRecordReference.prototype.destroy = function(options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.destroy(this.type, this.id, options, callback);\r\n};\r\n\r\n/**\r\n * Get blob field as stream\r\n *\r\n * @param {String} fieldName - Blob field name\r\n * @returns {stream.Stream}\r\n */\r\nRecordReference.prototype.blob = function(fieldName) {\r\n  var url = [ this._conn._baseUrl(), 'sobjects', this.type, this.id, fieldName ].join('/');\r\n  return this._conn.request(url).stream();\r\n};\r\n\n},{\"lodash/core\":42}],22:[function(require,module,exports){\n'use strict';\r\n\r\nvar required = require('./_required');\r\n\r\nmodule.exports = function(name) {\r\n  if (name === './jsforce' || name === 'jsforce') {\r\n    name = './core';\r\n  }\r\n  var m = required[name];\r\n  if (typeof m === 'undefined') {\r\n    throw new Error(\"Cannot find module '\" + name + \"'\");\r\n  }\r\n  return m;\r\n};\r\n\n},{\"./_required\":3}],23:[function(require,module,exports){\n/**\r\n * @file Manages method call to SOAP endpoint\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar inherits = require('inherits'),\r\n    _ = require('lodash/core'),\r\n    xml2js = require('xml2js'),\r\n    HttpApi = require('./http-api');\r\n\r\n\r\n/**\r\n * Class for SOAP endpoint of Salesforce\r\n *\r\n * @protected\r\n * @class\r\n * @constructor\r\n * @param {Connection} conn - Connection instance\r\n * @param {Object} options - SOAP endpoint setting options\r\n * @param {String} options.endpointUrl - SOAP endpoint URL\r\n * @param {String} [options.xmlns] - XML namespace for method call (default is \"urn:partner.soap.sforce.com\")\r\n */\r\nvar SOAP = module.exports = function(conn, options) {\r\n  SOAP.super_.apply(this, arguments);\r\n  this._endpointUrl = options.endpointUrl;\r\n  this._xmlns = options.xmlns || 'urn:partner.soap.sforce.com';\r\n};\r\n\r\ninherits(SOAP, HttpApi);\r\n\r\n/**\r\n * Invoke SOAP call using method and arguments\r\n *\r\n * @param {String} method - Method name\r\n * @param {Object} args - Arguments for the method call\r\n * @param {Object} [schema] - Schema definition of response message\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nSOAP.prototype.invoke = function(method, args, schema, callback) {\r\n  if (typeof schema === 'function') {\r\n    callback = schema;\r\n    schema = null;\r\n  }\r\n  var message = {};\r\n  message[method] = args;\r\n  return this.request({\r\n    method: 'POST',\r\n    url: this._endpointUrl,\r\n    headers: {\r\n      'Content-Type': 'text/xml',\r\n      'SOAPAction': '\"\"'\r\n    },\r\n    message: message\r\n  }).then(function(res) {\r\n    return schema ? convertType(res, schema) : res;\r\n  }).thenCall(callback);\r\n};\r\n\r\n/* @private */\r\nfunction convertType(value, schema) {\r\n  if (_.isArray(value)) {\r\n    return value.map(function(v) {\r\n      return convertType(v, schema && schema[0])\r\n    });\r\n  } else if (_.isObject(value)) {\r\n    if (value.$ && value.$['xsi:nil'] === 'true') {\r\n      return null;\r\n    } else if (_.isArray(schema)) {\r\n      return [ convertType(value, schema[0]) ];\r\n    } else {\r\n      var o = {};\r\n      for (var key in value) {\r\n        o[key] = convertType(value[key], schema && schema[key]);\r\n      }\r\n      return o;\r\n    }\r\n  } else {\r\n    if (_.isArray(schema)) {\r\n      return [ convertType(value, schema[0]) ];\r\n    } else if (_.isObject(schema)) {\r\n      return {};\r\n    } else {\r\n      switch(schema) {\r\n        case 'string':\r\n          return String(value);\r\n        case 'number':\r\n          return Number(value);\r\n        case 'boolean':\r\n          return value === 'true';\r\n        default:\r\n          return value;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/** @override **/\r\nSOAP.prototype.beforeSend = function(request) {\r\n  request.body = this._createEnvelope(request.message);\r\n};\r\n\r\n/** @override **/\r\nSOAP.prototype.isSessionExpired = function(response) {\r\n  return response.statusCode === 500 &&\r\n    /<faultcode>[a-zA-Z]+:INVALID_SESSION_ID<\\/faultcode>/.test(response.body);\r\n};\r\n\r\n/** @override **/\r\nSOAP.prototype.parseError = function(body) {\r\n  var error = lookupValue(body, [ /:Envelope$/, /:Body$/, /:Fault$/ ]);\r\n  return {\r\n    errorCode: error.faultcode,\r\n    message: error.faultstring\r\n  };\r\n};\r\n\r\n/** @override **/\r\nSOAP.prototype.getResponseBody = function(response) {\r\n  var body = SOAP.super_.prototype.getResponseBody.call(this, response);\r\n  return lookupValue(body, [ /:Envelope$/, /:Body$/, /.+/ ]);\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nfunction lookupValue(obj, propRegExps) {\r\n  var regexp = propRegExps.shift();\r\n  if (!regexp) {\r\n    return obj;\r\n  }\r\n  else {\r\n    for (var prop in obj) {\r\n      if (regexp.test(prop)) {\r\n        return lookupValue(obj[prop], propRegExps);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction toXML(name, value) {\r\n  if (_.isObject(name)) {\r\n    value = name;\r\n    name = null;\r\n  }\r\n  if (_.isArray(value)) {\r\n    return _.map(value, function(v) { return toXML(name, v); }).join('');\r\n  } else {\r\n    var attrs = [];\r\n    var elems = [];\r\n    if (_.isObject(value)) {\r\n      for (var k in value) {\r\n        var v = value[k];\r\n        if (k[0] === '@') {\r\n          k = k.substring(1);\r\n          attrs.push(k + '=\"' + v + '\"');\r\n        } else {\r\n          elems.push(toXML(k, v));\r\n        }\r\n      }\r\n      value = elems.join('');\r\n    } else {\r\n      value = String(value)\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/'/g, '&apos;');\r\n    }\r\n    var startTag = name ? '<' + name + (attrs.length > 0 ? ' ' + attrs.join(' ') : '') + '>' : '';\r\n    var endTag = name ? '</' + name + '>' : '';\r\n    return  startTag + value + endTag;\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nSOAP.prototype._createEnvelope = function(message) {\r\n  var header = {};\r\n  var conn = this._conn;\r\n  if (conn.accessToken) {\r\n    header.SessionHeader = { sessionId: this._conn.accessToken };\r\n  }\r\n  if (conn.callOptions) {\r\n    header.CallOptions = conn.callOptions;\r\n  }\r\n  return [\r\n    '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',\r\n    '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"',\r\n    ' xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"',\r\n    ' xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">',\r\n    '<soapenv:Header xmlns=\"' + this._xmlns + '\">',\r\n    toXML(header),\r\n    '</soapenv:Header>',\r\n    '<soapenv:Body xmlns=\"' + this._xmlns + '\">',\r\n    toXML(message),\r\n    '</soapenv:Body>',\r\n    '</soapenv:Envelope>'\r\n  ].join('');\r\n};\r\n\n},{\"./http-api\":13,\"inherits\":38,\"lodash/core\":42,\"xml2js\":77}],24:[function(require,module,exports){\n/**\r\n * @file Represents Salesforce SObject\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar _      = require('lodash/core'),\r\n    Record = require('./record'),\r\n    Query  = require('./query'),\r\n    Cache  = require('./cache'),\r\n    QuickAction = require('./quick-action');\r\n\r\n/**\r\n * A class for organizing all SObject access\r\n *\r\n * @constructor\r\n */\r\nvar SObject = module.exports = function(conn, type) {\r\n  this._conn = conn;\r\n  this.type = type;\r\n  var cacheOptions = { key: \"describe.\" + this.type };\r\n  this.describe$ = conn.cache.makeCacheable(this.describe, this, cacheOptions);\r\n  this.describe = conn.cache.makeResponseCacheable(this.describe, this, cacheOptions);\r\n\r\n  cacheOptions = { key: \"layouts.\" + this.type };\r\n  this.layouts$ = conn.cache.makeCacheable(this.layouts, this, cacheOptions);\r\n  this.layouts = conn.cache.makeResponseCacheable(this.layouts, this, cacheOptions);\r\n\r\n  cacheOptions = { key: \"compactLayouts.\" + this.type };\r\n  this.compactLayouts$ = conn.cache.makeCacheable(this.compactLayouts, this, cacheOptions);\r\n  this.compactLayouts = conn.cache.makeResponseCacheable(this.compactLayouts, this, cacheOptions);\r\n\r\n  cacheOptions = { key: \"approvalLayouts.\" + this.type };\r\n  this.approvalLayouts$ = conn.cache.makeCacheable(this.approvalLayouts, this, cacheOptions);\r\n  this.approvalLayouts = conn.cache.makeResponseCacheable(this.approvalLayouts, this, cacheOptions);\r\n};\r\n\r\n/**\r\n * Synonym of SObject#create()\r\n *\r\n * @method SObject#insert\r\n * @param {Record|Array.<Record>} records - A record or array of records to create\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Create records\r\n *\r\n * @method SObject#create\r\n * @param {Record|Array.<Record>} records - A record or array of records to create\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nSObject.prototype.insert =\r\nSObject.prototype.create = function(records, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.create(this.type, records, options, callback);\r\n};\r\n\r\n/**\r\n * Retrieve specified records\r\n *\r\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\r\n * @returns {Promise.<Record|Array.<Record>>}\r\n */\r\nSObject.prototype.retrieve = function(ids, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.retrieve(this.type, ids, options, callback);\r\n};\r\n\r\n/**\r\n * Update records\r\n *\r\n * @param {Record|Array.<Record>} records - A record or array of records to update\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nSObject.prototype.update = function(records, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.update(this.type, records, options, callback);\r\n};\r\n\r\n/**\r\n * Upsert records\r\n *\r\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\r\n * @param {String} extIdField - External ID field name\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nSObject.prototype.upsert = function(records, extIdField, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.upsert(this.type, records, extIdField, options, callback);\r\n};\r\n\r\n/**\r\n * Synonym of SObject#destroy()\r\n *\r\n * @method SObject#delete\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Synonym of SObject#destroy()\r\n *\r\n * @method SObject#del\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Delete records\r\n *\r\n * @method SObject#destroy\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nSObject.prototype[\"delete\"] =\r\nSObject.prototype.del =\r\nSObject.prototype.destroy = function(ids, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.destroy(this.type, ids, options, callback);\r\n};\r\n\r\n/**\r\n * Describe SObject metadata\r\n *\r\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\r\n * @returns {Promise.<DescribeSObjectResult>}\r\n */\r\nSObject.prototype.describe = function(callback) {\r\n  return this._conn.describe(this.type, callback);\r\n};\r\n\r\n/**\r\n * Get record representation instance by given id\r\n *\r\n * @param {String} id - A record ID\r\n * @returns {RecordReference}\r\n */\r\nSObject.prototype.record = function(id) {\r\n  return new Record(this._conn, this.type, id);\r\n};\r\n\r\n/**\r\n * Find and fetch records which matches given conditions\r\n *\r\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\r\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\r\n * @param {Object} [options] - Query options.\r\n * @param {Number} [options.limit] - Maximum number of records the query will return.\r\n * @param {Number} [options.offset] - Offset number where begins returning results.\r\n * @param {Number} [options.skip] - Synonym of options.offset.\r\n * @param {Callback.<Array.<Record>>} [callback] - Callback function\r\n * @returns {Query.<Array.<Record>>}\r\n */\r\nSObject.prototype.find = function(conditions, fields, options, callback) {\r\n  if (typeof conditions === 'function') {\r\n    callback = conditions;\r\n    conditions = {};\r\n    fields = null;\r\n    options = null;\r\n  } else if (typeof fields === 'function') {\r\n    callback = fields;\r\n    fields = null;\r\n    options = null;\r\n  } else if (typeof options === 'function') {\r\n    callback = options;\r\n    options = null;\r\n  }\r\n  options = options || {};\r\n  var config = {\r\n    fields: fields,\r\n    includes: options.includes,\r\n    table: this.type,\r\n    conditions: conditions,\r\n    limit: options.limit,\r\n    sort: options.sort,\r\n    offset: options.offset || options.skip\r\n  };\r\n  var query = new Query(this._conn, config, options);\r\n  query.setResponseTarget(Query.ResponseTargets.Records);\r\n  if (callback) { query.run(callback); }\r\n  return query;\r\n};\r\n\r\n/**\r\n * Fetch one record which matches given conditions\r\n *\r\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\r\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\r\n * @param {Object} [options] - Query options.\r\n * @param {Number} [options.limit] - Maximum number of records the query will return.\r\n * @param {Number} [options.offset] - Offset number where begins returning results.\r\n * @param {Number} [options.skip] - Synonym of options.offset.\r\n * @param {Callback.<Record>} [callback] - Callback function\r\n * @returns {Query.<Record>}\r\n */\r\nSObject.prototype.findOne = function(conditions, fields, options, callback) {\r\n  if (typeof conditions === 'function') {\r\n    callback = conditions;\r\n    conditions = {};\r\n    fields = null;\r\n    options = null;\r\n  } else if (typeof fields === 'function') {\r\n    callback = fields;\r\n    fields = null;\r\n    options = null;\r\n  } else if (typeof options === 'function') {\r\n    callback = options;\r\n    options = null;\r\n  }\r\n  options = _.extend(options || {}, { limit: 1 });\r\n  var query = this.find(conditions, fields, options);\r\n  query.setResponseTarget(Query.ResponseTargets.SingleRecord);\r\n  if (callback) { query.run(callback); }\r\n  return query;\r\n};\r\n\r\n/**\r\n * Find and fetch records only by specifying fields to fetch.\r\n *\r\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\r\n * @param {Callback.<Array.<Record>>} [callback] - Callback function\r\n * @returns {Query.<Array.<Record>>}\r\n */\r\nSObject.prototype.select = function(fields, callback) {\r\n  return this.find(null, fields, null, callback);\r\n};\r\n\r\n/**\r\n * Count num of records which matches given conditions\r\n *\r\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\r\n * @param {Callback.<Number>} [callback] - Callback function\r\n * @returns {Query.<Number>}\r\n */\r\nSObject.prototype.count = function(conditions, callback) {\r\n  if (typeof conditions === 'function') {\r\n    callback = conditions;\r\n    conditions = {};\r\n  }\r\n  var query = this.find(conditions, { \"count()\" : true });\r\n  query.setResponseTarget(\"Count\");\r\n  if (callback) { query.run(callback); }\r\n  return query;\r\n};\r\n\r\n\r\n/**\r\n * Call Bulk#load() to execute bulkload, returning batch object\r\n *\r\n * @param {String} operation - Bulk load operation ('insert', 'update', 'upsert', 'delete', or 'hardDelete')\r\n * @param {Object} [options] - Options for bulk loading operation\r\n * @param {String} [options.extIdField] - External ID field name (used when upsert operation).\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulkload. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nSObject.prototype.bulkload = function(operation, options, input, callback) {\r\n  return this._conn.bulk.load(this.type, operation, options, input, callback);\r\n};\r\n\r\n/**\r\n * Synonym of SObject#createBulk()\r\n *\r\n * @method SObject#insertBulk\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\n/**\r\n * Bulkly insert input data using bulk API\r\n *\r\n * @method SObject#createBulk\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nSObject.prototype.insertBulk =\r\nSObject.prototype.createBulk = function(input, callback) {\r\n  return this.bulkload(\"insert\", input, callback);\r\n};\r\n\r\n/**\r\n * Bulkly update records by input data using bulk API\r\n *\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk update Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nSObject.prototype.updateBulk = function(input, callback) {\r\n  return this.bulkload(\"update\", input, callback);\r\n};\r\n\r\n/**\r\n * Bulkly upsert records by input data using bulk API\r\n *\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk upsert. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {String} [options.extIdField] - External ID field name\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nSObject.prototype.upsertBulk = function(input, extIdField, callback) {\r\n  return this.bulkload(\"upsert\", { extIdField: extIdField }, input, callback);\r\n};\r\n\r\n/**\r\n * Synonym of SObject#destroyBulk()\r\n *\r\n * @method SObject#deleteBulk\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\n/**\r\n * Bulkly delete records specified by input data using bulk API\r\n *\r\n * @method SObject#destroyBulk\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nSObject.prototype.deleteBulk =\r\nSObject.prototype.destroyBulk = function(input, callback) {\r\n  return this.bulkload(\"delete\", input, callback);\r\n};\r\n\r\n/**\r\n * Synonym of SObject#destroyHardBulk()\r\n *\r\n * @method SObject#deleteHardBulk\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\n/**\r\n * Bulkly hard delete records specified in input data using bulk API\r\n *\r\n * @method SObject#destroyHardBulk\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nSObject.prototype.deleteHardBulk =\r\nSObject.prototype.destroyHardBulk = function(input, callback) {\r\n  return this.bulkload(\"hardDelete\", input, callback);\r\n};\r\n\r\n/**\r\n * Retrieve recently accessed records\r\n *\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\nSObject.prototype.recent = function (callback) {\r\n  return this._conn.recent(this.type, callback);\r\n};\r\n\r\n/**\r\n * Retrieve the updated records\r\n *\r\n * @param {String|Date} start - start date or string representing the start of the interval\r\n * @param {String|Date} end - start date or string representing the end of the interval, must be > start\r\n * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function\r\n * @returns {Promise.<UpdatedRecordsInfo>}\r\n */\r\nSObject.prototype.updated = function (start, end, callback) {\r\n  return this._conn.updated(this.type, start, end, callback);\r\n};\r\n\r\n/**\r\n * Retrieve the deleted records\r\n *\r\n * @param {String|Date} start - start date or string representing the start of the interval\r\n * @param {String|Date} end - start date or string representing the end of the interval, must be > start\r\n * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function\r\n * @returns {Promise.<DeletedRecordsInfo>}\r\n */\r\nSObject.prototype.deleted = function (start, end, callback) {\r\n  return this._conn.deleted(this.type, start, end, callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} LayoutInfo\r\n * @prop {Array.<Object>} layouts - Array of layouts\r\n * @prop {Array.<Object>} recordTypeMappings - Array of record type mappings\r\n */\r\n/**\r\n * Describe layout information for SObject\r\n *\r\n * @param {String} [layoutName] - Name of named layout. (e.g. UserAlt in User SObject)\r\n * @param {Callback.<LayoutInfo>} [callback] - Callback function\r\n * @returns {Promise.<LayoutInfo>}\r\n */\r\nSObject.prototype.layouts = function(layoutName, callback) {\r\n  if (typeof layoutName === 'function') {\r\n    callback = layoutName;\r\n    layoutName = null;\r\n  }\r\n  var url = \"/sobjects/\" + this.type + \"/describe/\" + (layoutName ? \"namedLayouts/\"+layoutName : \"layouts\");\r\n  return this._conn.request(url, callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} CompactLayoutInfo\r\n * @prop {Array.<Object>} compactLayouts - Array of compact layouts\r\n * @prop {String} defaultCompactLayoutId - ID of default compact layout\r\n * @prop {Array.<Object>} recordTypeCompactLayoutMappings - Array of record type mappings\r\n */\r\n/**\r\n * Describe compact layout information defined for SObject\r\n *\r\n * @param {Callback.<CompactLayoutInfo>} [callback] - Callback function\r\n * @returns {Promise.<CompactLayoutInfo>}\r\n */\r\nSObject.prototype.compactLayouts = function(callback) {\r\n  var url = \"/sobjects/\" + this.type + \"/describe/compactLayouts\";\r\n  return this._conn.request(url, callback);\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} ApprovalLayoutInfo\r\n * @prop {Array.<Object>} approvalLayouts - Array of approval layouts\r\n */\r\n/**\r\n * Describe compact layout information defined for SObject\r\n *\r\n * @param {Callback.<ApprovalLayoutInfo>} [callback] - Callback function\r\n * @returns {Promise.<ApprovalLayoutInfo>}\r\n */\r\nSObject.prototype.approvalLayouts = function(callback) {\r\n  var url = \"/sobjects/\" + this.type + \"/describe/approvalLayouts\";\r\n  return this._conn.request(url, callback);\r\n};\r\n\r\n/**\r\n * Returns the list of list views for the SObject\r\n *\r\n * @param {Callback.<ListViewsInfo>} [callback] - Callback function\r\n * @returns {Promise.<ListViewsInfo>}\r\n */\r\nSObject.prototype.listviews = function(callback) {\r\n  var url = this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews';\r\n  return this._conn.request(url, callback);\r\n};\r\n\r\n/**\r\n * Returns the list view info in specifed view id\r\n *\r\n * @param {String} id - List view ID\r\n * @returns {ListView}\r\n */\r\nSObject.prototype.listview = function(id) {\r\n  return new ListView(this._conn, this.type, id);\r\n};\r\n\r\n/**\r\n * Returns all registered quick actions for the SObject\r\n *\r\n * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\r\n */\r\nSObject.prototype.quickActions = function(callback) {\r\n  return this._conn.request(\"/sobjects/\" + this.type + \"/quickActions\").thenCall(callback);\r\n};\r\n\r\n/**\r\n * Get reference for specified quick aciton in the SObject\r\n *\r\n * @param {String} actionName - Name of the quick action\r\n * @returns {QuickAction}\r\n */\r\nSObject.prototype.quickAction = function(actionName) {\r\n  return new QuickAction(this._conn, \"/sobjects/\" + this.type + \"/quickActions/\" + actionName);\r\n};\r\n\r\n\r\n/**\r\n * A class for organizing list view information\r\n *\r\n * @protected\r\n * @class ListView\r\n * @param {Connection} conn - Connection instance\r\n * @param {SObject} type - SObject type\r\n * @param {String} id - List view ID\r\n */\r\nvar ListView = function(conn, type, id) {\r\n  this._conn = conn;\r\n  this.type = type;\r\n  this.id = id;\r\n};\r\n\r\n/**\r\n * Executes query for the list view and returns the resulting data and presentation information.\r\n *\r\n * @param {Callback.<ListViewResultInfo>} [callback] - Callback function\r\n * @returns {Promise.<ListViewResultInfo>}\r\n */\r\nListView.prototype.results = function(callback) {\r\n  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/results';\r\n  return this._conn.request(url, callback);\r\n};\r\n\r\n\r\n/**\r\n * Returns detailed information about a list view\r\n *\r\n * @param {Object} [options] - Identity call options\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request\r\n * @param {Callback.<ListViewDescribeInfo>} [callback] - Callback function\r\n * @returns {Promise.<ListViewDescribeInfo>}\r\n */\r\nListView.prototype.describe = function(options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/describe';\r\n  return this._conn.request({ method: 'GET', url: url, headers: options.headers }, callback);\r\n};\r\n\r\n/**\r\n * Explain plan for executing list view\r\n *\r\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\r\n * @returns {Promise.<ExplainInfo>}\r\n */\r\nListView.prototype.explain = function(callback) {\r\n  var url = \"/query/?explain=\" + this.id;\r\n  return this._conn.request(url, callback);\r\n};\r\n\n},{\"./cache\":8,\"./query\":18,\"./quick-action\":19,\"./record\":21,\"lodash/core\":42}],25:[function(require,module,exports){\n/**\r\n * @file Create and build SOQL string from configuration\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar _      = require('lodash/core'),\r\n    SfDate = require(\"./date\");\r\n\r\n\r\n/**\r\n * Create SOQL\r\n * @private\r\n */\r\nfunction createSOQL(query) {\r\n  var soql = [\r\n    \"SELECT \",\r\n    createFieldsClause(query.fields, query.includes),\r\n    \" FROM \",\r\n    query.table\r\n  ].join(\"\");\r\n  var cond = createConditionClause(query.conditions);\r\n  if (cond) {\r\n    soql += \" WHERE \" + cond;\r\n  }\r\n  var orderby = createOrderByClause(query.sort);\r\n  if (orderby) {\r\n    soql += \" ORDER BY \" + orderby;\r\n  }\r\n  if (query.limit) {\r\n    soql += \" LIMIT \" + query.limit;\r\n  }\r\n  if (query.offset) {\r\n    soql += \" OFFSET \" + query.offset;\r\n  }\r\n  return soql;\r\n}\r\n\r\n/** @private **/\r\nfunction createFieldsClause(fields, childQueries) {\r\n  childQueries = _.map(_.values(childQueries || {}), function(cquery) {\r\n    return '(' + createSOQL(cquery) + ')';\r\n  });\r\n  return (fields || [ \"Id\" ]).concat(childQueries).join(', ');\r\n}\r\n\r\n/** @private **/\r\nfunction createConditionClause(conditions, operator, depth) {\r\n  if (_.isString(conditions)) {\r\n    return conditions;\r\n  }\r\n  conditions = conditions || [];\r\n  operator = operator || \"AND\";\r\n  depth = depth || 0;\r\n  if (!isArray(conditions)) { // if passed in hash object\r\n    conditions = _.keys(conditions).map(function(key) {\r\n      return {\r\n        key: key,\r\n        value: conditions[key]\r\n      };\r\n    });\r\n  } else {\r\n    conditions = conditions.map(function(cond) {\r\n      var conds = [];\r\n      for (var key in cond) {\r\n        conds.push({\r\n          key: key,\r\n          value: cond[key]\r\n        });\r\n      }\r\n      return conds.length>1 ? conds : conds[0];\r\n    });\r\n  }\r\n  conditions = conditions.map(function(cond) {\r\n    var d = depth+1, op;\r\n    switch (cond.key) {\r\n      case \"$or\" :\r\n      case \"$and\" :\r\n      case \"$not\" :\r\n        if (operator !== \"NOT\" && conditions.length === 1) {\r\n          d = depth; // not change tree depth\r\n        }\r\n        op = cond.key === \"$or\" ? \"OR\" :\r\n             cond.key === \"$and\" ? \"AND\" :\r\n             \"NOT\";\r\n        return createConditionClause(cond.value, op, d);\r\n      default:\r\n        return createFieldExpression(cond.key, cond.value);\r\n    }\r\n  }).filter(function(expr) { return expr; });\r\n\r\n  var paren;\r\n  if (operator === 'NOT') {\r\n    paren = depth > 0;\r\n    return (paren ? \"(\" : \"\") + \"NOT \" + conditions[0] + (paren ? \")\" : \"\");\r\n  } else {\r\n    paren = depth > 0 && conditions.length > 1;\r\n    return (paren ? \"(\" : \"\") + conditions.join(\" \"+operator+\" \") + (paren ? \")\" : \"\");\r\n  }\r\n}\r\n\r\nvar opMap = {\r\n  \"=\"     : \"=\",\r\n  \"$eq\"   : \"=\",\r\n  \"!=\"    : \"!=\",\r\n  \"$ne\"   : \"!=\",\r\n  \">\"     : \">\",\r\n  \"$gt\"   : \">\",\r\n  \"<\"     : \"<\",\r\n  \"$lt\"   : \"<\",\r\n  \">=\"    : \">=\",\r\n  \"$gte\"  : \">=\",\r\n  \"<=\"    : \"<=\",\r\n  \"$lte\"  : \"<=\",\r\n  \"$like\" : \"LIKE\",\r\n  \"$nlike\" : \"NOT LIKE\",\r\n  \"$in\"   : \"IN\",\r\n  \"$nin\"  : \"NOT IN\",\r\n  \"$includes\" : \"INCLUDES\",\r\n  \"$excludes\" : \"EXCLUDES\",\r\n  \"$exists\" : \"EXISTS\"\r\n};\r\n\r\n/** @private **/\r\nfunction createFieldExpression(field, value) {\r\n  var op = \"$eq\";\r\n\r\n  // Assume the `$in` operator if value is an array and none was supplied.\r\n  if (_.isArray(value)) { op = \"$in\"; }\r\n  // Otherwise, if an object was passed then process the supplied ops.\r\n  else if (_.isObject(value)) {\r\n    var _value;\r\n    for (var k in value) {\r\n      if (k[0] === \"$\") {\r\n        op = k;\r\n        value = value[k];\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  var sfop = opMap[op];\r\n  if (!sfop || _.isUndefined(value)) { return null; }\r\n  var valueExpr = createValueExpression(value);\r\n  if (_.isUndefined(valueExpr)) { return null; }\r\n  switch (sfop) {\r\n    case \"NOT LIKE\":\r\n      return \"(\" + [ \"NOT\", field, 'LIKE', valueExpr ].join(\" \") + \")\";\r\n    case \"EXISTS\":\r\n      return [ field, value ? \"!=\" : \"=\", \"null\" ].join(\" \");\r\n    default:\r\n      return [ field, sfop, valueExpr ].join(\" \");\r\n  }\r\n}\r\n\r\n/** @private **/\r\nfunction createValueExpression(value) {\r\n  if (isArray(value)) {\r\n    return value.length > 0 ?\r\n           \"(\" + value.map(createValueExpression).join(\", \") + \")\" :\r\n           undefined;\r\n  }\r\n  if (value instanceof SfDate) {\r\n    return value.toString();\r\n  }\r\n  if (_.isString(value)) {\r\n    return \"'\" + escapeSOQLString(value) + \"'\";\r\n  }\r\n  if (_.isNumber(value)) {\r\n    return (value).toString();\r\n  }\r\n  if (_.isNull(value)) {\r\n    return \"null\";\r\n  }\r\n  return value;\r\n}\r\n\r\n/** @private **/\r\nfunction escapeSOQLString(str) {\r\n  return String(str || '').replace(/'/g, \"\\\\'\");\r\n}\r\n\r\n/** @private **/\r\nfunction isArray(a) {\r\n  return _.isObject(a) && _.isFunction(a.pop);\r\n}\r\n\r\n\r\n/** @private **/\r\nfunction createOrderByClause(sort) {\r\n  sort = sort || [];\r\n  if (_.isString(sort)) {\r\n    if (/,|\\s+(asc|desc)\\s*$/.test(sort)) {\r\n      // must be specified in pure \"order by\" clause. Return raw config.\r\n      return sort;\r\n    }\r\n    // sort order in mongoose-style expression.\r\n    // e.g. \"FieldA -FieldB\" => \"ORDER BY FieldA ASC, FieldB DESC\"\r\n    sort = sort.split(/\\s+/).map(function(field) {\r\n      var dir = \"ASC\"; // ascending\r\n      var flag = field[0];\r\n      if (flag === '-') {\r\n        dir = \"DESC\";\r\n        field = field.substring(1);\r\n      } else if (flag === '+') {\r\n        field = field.substring(1);\r\n      }\r\n      return [ field, dir ];\r\n    });\r\n  } else if (!isArray(sort)) {\r\n    sort = _.keys(sort).map(function(field) {\r\n      var dir = sort[field];\r\n      return [ field, dir ];\r\n    });\r\n  }\r\n  return sort.map(function(s) {\r\n    var field = s[0], dir = s[1];\r\n    switch (String(dir)) {\r\n      case \"DESC\":\r\n      case \"desc\":\r\n      case \"descending\":\r\n      case \"-\":\r\n      case \"-1\":\r\n        dir = \"DESC\";\r\n        break;\r\n      default:\r\n        dir = \"ASC\";\r\n    }\r\n    return field + \" \" + dir;\r\n  }).join(\", \");\r\n}\r\n\r\n\r\nexports.createSOQL = createSOQL;\r\n\n},{\"./date\":12,\"lodash/core\":42}],26:[function(require,module,exports){\n(function (process){\n/*global process, Sfdc */\r\n\r\n'use strict';\r\n\r\nvar inherits = require('inherits'),\r\n    Promise = require('./promise');\r\n\r\n/* */\r\n\r\nvar request = require('request'),\r\n    canvas = require('./browser/canvas'),\r\n    jsonp = require('./browser/jsonp');\r\n\r\n// set options if defaults setting is available in request, which is not available in xhr module.\r\nif (request.defaults) {\r\n  var defaults = {\r\n    followAllRedirects: true\r\n  };\r\n  if (process.env.HTTP_PROXY) {\r\n    defaults.proxy = process.env.HTTP_PROXY;\r\n  }\r\n  if (parseInt(process.env.HTTP_TIMEOUT)) {\r\n    defaults.timeout = parseInt(process.env.HTTP_TIMEOUT);\r\n  }\r\n  request = request.defaults(defaults);\r\n}\r\n\r\nvar baseUrl;\r\nif (typeof window === 'undefined') {\r\n  baseUrl = process.env.LOCATION_BASE_URL || \"\";\r\n} else {\r\n  var apiHost = normalizeApiHost(window.location.host);\r\n  baseUrl = apiHost ? \"https://\" + apiHost : \"\";\r\n}\r\n\r\n/**\r\n * Add stream() method to promise (and following promise chain), to access original request stream.\r\n * @private\r\n */\r\nfunction streamify(promise, factory) {\r\n  var _then = promise.then;\r\n  promise.then = function() {\r\n    factory();\r\n    var newPromise = _then.apply(promise, arguments);\r\n    return streamify(newPromise, factory);\r\n  };\r\n  promise.stream = factory;\r\n  return promise;\r\n}\r\n\r\n/**\r\n * Normarize Salesforce API host name\r\n * @private\r\n */\r\nfunction normalizeApiHost(apiHost) {\r\n  var m = /(\\w+)\\.(visual\\.force|salesforce)\\.com$/.exec(apiHost);\r\n  if (m) {\r\n    apiHost = m[1] + \".salesforce.com\";\r\n  }\r\n  return apiHost;\r\n}\r\n\r\n/**\r\n * Class for HTTP request transport\r\n *\r\n * @class\r\n * @protected\r\n */\r\nvar Transport = module.exports = function() {};\r\n\r\n/**\r\n * Make HTTP request, returns promise instead of stream\r\n *\r\n * @param {Object} params - HTTP request\r\n * @param {Callback.<Object>} [callback] - Calback Function\r\n * @returns {Promise.<Object>}\r\n */\r\nTransport.prototype.httpRequest = function(params, callback) {\r\n  var deferred = Promise.defer();\r\n  var req;\r\n  var httpRequest = this._getHttpRequestModule();\r\n  var createRequest = function() {\r\n    if (!req) {\r\n      req = httpRequest(params, function(err, response) {\r\n        if (err) {\r\n          deferred.reject(err);\r\n        } else {\r\n          deferred.resolve(response);\r\n        }\r\n      });\r\n    }\r\n    return req;\r\n  };\r\n  return streamify(deferred.promise, createRequest).thenCall(callback);\r\n};\r\n\r\n/** @protected **/\r\nTransport.prototype._getHttpRequestModule = function() {\r\n  return request;\r\n};\r\n\r\n\r\n/**\r\n * Class for JSONP request transport\r\n * @class Transport~JsonpTransport\r\n * @protected\r\n * @extends Transport\r\n * @param {String} jsonpParam - Callback parameter name for JSONP invokation.\r\n */\r\nvar JsonpTransport = Transport.JsonpTransport = function(jsonpParam) {\r\n  this._jsonpParam = jsonpParam;\r\n};\r\n\r\ninherits(JsonpTransport, Transport);\r\n\r\n/** @protected **/\r\nJsonpTransport.prototype._getHttpRequestModule = function() {\r\n  return jsonp.createRequest(this._jsonpParam);\r\n};\r\n\r\nJsonpTransport.supported = jsonp.supported;\r\n\r\n\r\n/**\r\n * Class for Sfdc Canvas request transport\r\n * @class Transport~CanvasTransport\r\n * @protected\r\n * @extends Transport\r\n * @param {Object} signedRequest - Parsed signed request object\r\n */\r\nvar CanvasTransport = Transport.CanvasTransport = function(signedRequest) {\r\n  this._signedRequest = signedRequest;\r\n};\r\n\r\ninherits(CanvasTransport, Transport);\r\n\r\n/** @protected **/\r\nCanvasTransport.prototype._getHttpRequestModule = function() {\r\n  return canvas.createRequest(this._signedRequest);\r\n};\r\n\r\nCanvasTransport.supported = canvas.supported;\r\n\r\n\r\n/**\r\n * Class for HTTP request transport using AJAX proxy service\r\n *\r\n * @class Transport~ProxyTransport\r\n * @protected\r\n * @extends Transport\r\n * @param {String} proxyUrl - AJAX Proxy server URL\r\n */\r\nvar ProxyTransport = Transport.ProxyTransport = function(proxyUrl) {\r\n  this._proxyUrl = proxyUrl;\r\n};\r\n\r\ninherits(ProxyTransport, Transport);\r\n\r\n/**\r\n * Make HTTP request via AJAX proxy\r\n *\r\n * @method Transport~ProxyTransport#httpRequest\r\n * @param {Object} params - HTTP request\r\n * @param {Callback.<Object>} [callback] - Calback Function\r\n * @returns {Promise.<Object>}\r\n */\r\nProxyTransport.prototype.httpRequest = function(params, callback) {\r\n  var url = params.url;\r\n  if (url.indexOf(\"/\") === 0) {\r\n    url = baseUrl + url;\r\n  }\r\n  var proxyParams = {\r\n    method: params.method,\r\n    url: this._proxyUrl + '?' + Date.now() + \".\" + (\"\" + Math.random()).substring(2),\r\n    headers: {\r\n      'salesforceproxy-endpoint': url\r\n    }\r\n  };\r\n  if (params.body || params.body === \"\") {\r\n    proxyParams.body = params.body;\r\n  }\r\n  if (params.headers) {\r\n    for (var name in params.headers) {\r\n      proxyParams.headers[name] = params.headers[name];\r\n    }\r\n  }\r\n  return ProxyTransport.super_.prototype.httpRequest.call(this, proxyParams, callback);\r\n};\r\n\r\n\r\n/**\r\n * Class for HTTP request transport using a proxy server\r\n *\r\n * @class Transport~HttpProxyTransport\r\n * @protected\r\n * @extends Transport\r\n * @param {String} httpProxy - URL of the HTTP proxy server\r\n */\r\nvar HttpProxyTransport = Transport.HttpProxyTransport = function(httpProxy) {\r\n  this._httpProxy = httpProxy;\r\n};\r\n\r\ninherits(HttpProxyTransport, Transport);\r\n\r\n/**\r\n * Make HTTP request via proxy server\r\n *\r\n * @method Transport~HttpProxyTransport#httpRequest\r\n * @param {Object} params - HTTP request\r\n * @param {Callback.<Object>} [callback] - Callback Function\r\n * @returns {Promise.<Object>}\r\n */\r\nHttpProxyTransport.prototype.httpRequest = function(params, callback) {\r\n  var url = params.url;\r\n  if (url.indexOf(\"/\") === 0) {\r\n    url = baseUrl + url;\r\n  }\r\n  var proxyParams = {\r\n    method: params.method,\r\n    url: params.url,\r\n    proxy: this._httpProxy,\r\n    headers: {}\r\n  };\r\n  if (params.body || params.body === \"\") {\r\n    proxyParams.body = params.body;\r\n  }\r\n  if (params.headers) {\r\n    for (var name in params.headers) {\r\n      proxyParams.headers[name] = params.headers[name];\r\n    }\r\n  }\r\n  return HttpProxyTransport.super_.prototype.httpRequest.call(this, proxyParams, callback);\r\n};\r\n\n}).call(this,require('_process'))\n\n},{\"./browser/canvas\":4,\"./browser/jsonp\":6,\"./promise\":17,\"_process\":45,\"inherits\":38,\"request\":7}],27:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],28:[function(require,module,exports){\n'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n},{}],29:[function(require,module,exports){\n\n},{}],30:[function(require,module,exports){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  get: function () {\n    if (!(this instanceof Buffer)) {\n      return undefined\n    }\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  get: function () {\n    if (!(this instanceof Buffer)) {\n      return undefined\n    }\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('Invalid typed array length')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value) || (value && isArrayBuffer(value.buffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return fromObject(value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if (ArrayBuffer.isView(obj) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0)\n      }\n      return fromArrayLike(obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data)\n    }\n  }\n\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (ArrayBuffer.isView(buf)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isArrayBuffer(string)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check\n// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166\nfunction isArrayBuffer (obj) {\n  return obj instanceof ArrayBuffer ||\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\n      typeof obj.byteLength === 'number')\n}\n\nfunction numberIsNaN (obj) {\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n},{\"base64-js\":28,\"ieee754\":37}],31:[function(require,module,exports){\n(function (Buffer){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n}).call(this,{\"isBuffer\":require(\"../../is-buffer/index.js\")})\n\n},{\"../../is-buffer/index.js\":39}],32:[function(require,module,exports){\n(function (process,Buffer){\n// Generated by CoffeeScript 1.12.7\nvar Parser, StringDecoder, isObjLiteral, stream, util;\n\nstream = require('stream');\n\nutil = require('util');\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nmodule.exports = function() {\n  var callback, called, chunks, data, err, options, parser;\n  if (arguments.length === 3) {\n    data = arguments[0];\n    options = arguments[1];\n    callback = arguments[2];\n    if (typeof callback !== 'function') {\n      throw Error(\"Invalid callback argument: \" + (JSON.stringify(callback)));\n    }\n    if (!(typeof data === 'string' || Buffer.isBuffer(arguments[0]))) {\n      return callback(Error(\"Invalid data argument: \" + (JSON.stringify(data))));\n    }\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'string' || Buffer.isBuffer(arguments[0])) {\n      data = arguments[0];\n    } else if (isObjLiteral(arguments[0])) {\n      options = arguments[0];\n    } else {\n      err = \"Invalid first argument: \" + (JSON.stringify(arguments[0]));\n    }\n    if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else if (isObjLiteral(arguments[1])) {\n      if (options) {\n        err = 'Invalid arguments: got options twice as first and second arguments';\n      } else {\n        options = arguments[1];\n      }\n    } else {\n      err = \"Invalid first argument: \" + (JSON.stringify(arguments[1]));\n    }\n    if (err) {\n      if (!callback) {\n        throw Error(err);\n      } else {\n        return callback(Error(err));\n      }\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  }\n  if (options == null) {\n    options = {};\n  }\n  parser = new Parser(options);\n  if (data != null) {\n    process.nextTick(function() {\n      parser.write(data);\n      return parser.end();\n    });\n  }\n  if (callback) {\n    called = false;\n    chunks = options.objname ? {} : [];\n    parser.on('readable', function() {\n      var chunk, results;\n      results = [];\n      while (chunk = parser.read()) {\n        if (options.objname) {\n          results.push(chunks[chunk[0]] = chunk[1]);\n        } else {\n          results.push(chunks.push(chunk));\n        }\n      }\n      return results;\n    });\n    parser.on('error', function(err) {\n      called = true;\n      return callback(err);\n    });\n    parser.on('end', function() {\n      if (!called) {\n        return callback(null, chunks);\n      }\n    });\n  }\n  return parser;\n};\n\nParser = function(options) {\n  var base, base1, base10, base11, base12, base13, base14, base15, base16, base2, base3, base4, base5, base6, base7, base8, base9, k, v;\n  if (options == null) {\n    options = {};\n  }\n  this.options = {};\n  for (k in options) {\n    v = options[k];\n    this.options[k] = v;\n  }\n  this.options.objectMode = true;\n  stream.Transform.call(this, this.options);\n  if ((base = this.options).rowDelimiter == null) {\n    base.rowDelimiter = null;\n  }\n  if (typeof this.options.rowDelimiter === 'string') {\n    this.options.rowDelimiter = [this.options.rowDelimiter];\n  }\n  if ((base1 = this.options).delimiter == null) {\n    base1.delimiter = ',';\n  }\n  if (this.options.quote !== void 0 && !this.options.quote) {\n    this.options.quote = '';\n  }\n  if ((base2 = this.options).quote == null) {\n    base2.quote = '\"';\n  }\n  if ((base3 = this.options).escape == null) {\n    base3.escape = '\"';\n  }\n  if ((base4 = this.options).columns == null) {\n    base4.columns = null;\n  }\n  if ((base5 = this.options).comment == null) {\n    base5.comment = '';\n  }\n  if ((base6 = this.options).objname == null) {\n    base6.objname = false;\n  }\n  if ((base7 = this.options).trim == null) {\n    base7.trim = false;\n  }\n  if ((base8 = this.options).ltrim == null) {\n    base8.ltrim = false;\n  }\n  if ((base9 = this.options).rtrim == null) {\n    base9.rtrim = false;\n  }\n  if ((base10 = this.options).auto_parse == null) {\n    base10.auto_parse = false;\n  }\n  if ((base11 = this.options).auto_parse_date == null) {\n    base11.auto_parse_date = false;\n  }\n  if (this.options.auto_parse_date === true) {\n    this.options.auto_parse_date = function(value) {\n      var m;\n      m = Date.parse(value);\n      if (!isNaN(m)) {\n        value = new Date(m);\n      }\n      return value;\n    };\n  }\n  if ((base12 = this.options).relax == null) {\n    base12.relax = false;\n  }\n  if ((base13 = this.options).relax_column_count == null) {\n    base13.relax_column_count = false;\n  }\n  if ((base14 = this.options).skip_empty_lines == null) {\n    base14.skip_empty_lines = false;\n  }\n  if ((base15 = this.options).max_limit_on_data_read == null) {\n    base15.max_limit_on_data_read = 128000;\n  }\n  if ((base16 = this.options).skip_lines_with_empty_values == null) {\n    base16.skip_lines_with_empty_values = false;\n  }\n  this.lines = 0;\n  this.count = 0;\n  this.skipped_line_count = 0;\n  this.empty_line_count = 0;\n  this.is_int = /^(\\-|\\+)?([1-9]+[0-9]*)$/;\n  this.is_float = function(value) {\n    return (value - parseFloat(value) + 1) >= 0;\n  };\n  this._ = {\n    decoder: new StringDecoder(),\n    quoting: false,\n    commenting: false,\n    field: null,\n    nextChar: null,\n    closingQuote: 0,\n    line: [],\n    chunks: [],\n    rawBuf: '',\n    buf: '',\n    rowDelimiterLength: this.options.rowDelimiter ? Math.max.apply(Math, this.options.rowDelimiter.map(function(v) {\n      return v.length;\n    })) : void 0\n  };\n  return this;\n};\n\nutil.inherits(Parser, stream.Transform);\n\nmodule.exports.Parser = Parser;\n\nParser.prototype._transform = function(chunk, encoding, callback) {\n  var err;\n  if (chunk instanceof Buffer) {\n    chunk = this._.decoder.write(chunk);\n  }\n  err = this.__write(chunk, false);\n  if (err) {\n    return this.emit('error', err);\n  }\n  return callback();\n};\n\nParser.prototype._flush = function(callback) {\n  var err;\n  err = this.__write(this._.decoder.end(), true);\n  if (err) {\n    return this.emit('error', err);\n  }\n  if (this._.quoting) {\n    this.emit('error', new Error(\"Quoted field not terminated at line \" + (this.lines + 1)));\n    return;\n  }\n  if (this._.line.length > 0) {\n    err = this.__push(this._.line);\n    if (err) {\n      return callback(err);\n    }\n  }\n  return callback();\n};\n\nParser.prototype.__push = function(line) {\n  var call_column_udf, columns, err, field, i, j, len, lineAsColumns, rawBuf, ref, row;\n  if (this.options.skip_lines_with_empty_values && line.join('').trim() === '') {\n    return;\n  }\n  row = null;\n  if (this.options.columns === true) {\n    this.options.columns = line;\n    rawBuf = '';\n    return;\n  } else if (typeof this.options.columns === 'function') {\n    call_column_udf = function(fn, line) {\n      var columns, err;\n      try {\n        columns = fn.call(null, line);\n        return [null, columns];\n      } catch (error) {\n        err = error;\n        return [err];\n      }\n    };\n    ref = call_column_udf(this.options.columns, line), err = ref[0], columns = ref[1];\n    if (err) {\n      return err;\n    }\n    this.options.columns = columns;\n    rawBuf = '';\n    return;\n  }\n  if (!this._.line_length && line.length > 0) {\n    this._.line_length = this.options.columns ? this.options.columns.length : line.length;\n  }\n  if (line.length === 1 && line[0] === '') {\n    this.empty_line_count++;\n  } else if (line.length !== this._.line_length) {\n    if (this.options.relax_column_count) {\n      this.count++;\n      this.skipped_line_count++;\n    } else if (this.options.columns != null) {\n      return Error(\"Number of columns on line \" + this.lines + \" does not match header\");\n    } else {\n      return Error(\"Number of columns is inconsistent on line \" + this.lines);\n    }\n  } else {\n    this.count++;\n  }\n  if (this.options.columns != null) {\n    lineAsColumns = {};\n    for (i = j = 0, len = line.length; j < len; i = ++j) {\n      field = line[i];\n      if (this.options.columns[i] === false) {\n        continue;\n      }\n      lineAsColumns[this.options.columns[i]] = field;\n    }\n    if (this.options.objname) {\n      row = [lineAsColumns[this.options.objname], lineAsColumns];\n    } else {\n      row = lineAsColumns;\n    }\n  } else {\n    row = line;\n  }\n  if (this.count < this.options.from) {\n    return;\n  }\n  if (this.count > this.options.to) {\n    return;\n  }\n  if (this.options.raw) {\n    this.push({\n      raw: this._.rawBuf,\n      row: row\n    });\n    this._.rawBuf = '';\n  } else {\n    this.push(row);\n  }\n  return null;\n};\n\nParser.prototype.__write = function(chars, end) {\n  var areNextCharsDelimiter, areNextCharsRowDelimiters, auto_parse, char, err, escapeIsQuote, i, isDelimiter, isEscape, isNextCharAComment, isQuote, isRowDelimiter, isRowDelimiterLength, is_float, is_int, l, ltrim, nextCharPos, ref, ref1, ref2, ref3, ref4, ref5, remainingBuffer, rowDelimiter, rtrim, wasCommenting;\n  is_int = (function(_this) {\n    return function(value) {\n      if (typeof _this.is_int === 'function') {\n        return _this.is_int(value);\n      } else {\n        return _this.is_int.test(value);\n      }\n    };\n  })(this);\n  is_float = (function(_this) {\n    return function(value) {\n      if (typeof _this.is_float === 'function') {\n        return _this.is_float(value);\n      } else {\n        return _this.is_float.test(value);\n      }\n    };\n  })(this);\n  auto_parse = (function(_this) {\n    return function(value) {\n      if (!_this.options.auto_parse) {\n        return value;\n      }\n      if (typeof _this.options.auto_parse === 'function') {\n        return _this.options.auto_parse(value);\n      }\n      if (is_int(value)) {\n        value = parseInt(value);\n      } else if (is_float(value)) {\n        value = parseFloat(value);\n      } else if (_this.options.auto_parse_date) {\n        value = _this.options.auto_parse_date(value);\n      }\n      return value;\n    };\n  })(this);\n  ltrim = this.options.trim || this.options.ltrim;\n  rtrim = this.options.trim || this.options.rtrim;\n  chars = this._.buf + chars;\n  l = chars.length;\n  i = 0;\n  if (this.lines === 0 && 0xFEFF === chars.charCodeAt(0)) {\n    i++;\n  }\n  while (i < l) {\n    if (!end) {\n      remainingBuffer = chars.substr(i, l - i);\n      if ((!this.options.rowDelimiter && i + 3 > l) || (!this._.commenting && l - i < this.options.comment.length && this.options.comment.substr(0, l - i) === remainingBuffer) || (this.options.rowDelimiter && l - i < this._.rowDelimiterLength && this.options.rowDelimiter.some(function(rd) {\n        return rd.substr(0, l - i) === remainingBuffer;\n      })) || (this.options.rowDelimiter && this._.quoting && l - i < (this.options.quote.length + this._.rowDelimiterLength) && this.options.rowDelimiter.some((function(_this) {\n        return function(rd) {\n          return (_this.options.quote + rd).substr(0, l - i) === remainingBuffer;\n        };\n      })(this))) || (l - i <= this.options.delimiter.length && this.options.delimiter.substr(0, l - i) === remainingBuffer) || (l - i <= this.options.escape.length && this.options.escape.substr(0, l - i) === remainingBuffer)) {\n        break;\n      }\n    }\n    char = this._.nextChar ? this._.nextChar : chars.charAt(i);\n    this._.nextChar = l > i + 1 ? chars.charAt(i + 1) : '';\n    if (this.options.raw) {\n      this._.rawBuf += char;\n    }\n    if (this.options.rowDelimiter == null) {\n      nextCharPos = i;\n      rowDelimiter = null;\n      if (!this._.quoting && (char === '\\n' || char === '\\r')) {\n        rowDelimiter = char;\n        nextCharPos += 1;\n      } else if (this._.quoting && char === this.options.quote && ((ref = this._.nextChar) === '\\n' || ref === '\\r')) {\n        rowDelimiter = this._.nextChar;\n        nextCharPos += 2;\n        if (this.raw) {\n          rawBuf += this._.nextChar;\n        }\n      }\n      if (rowDelimiter) {\n        if (rowDelimiter === '\\r' && chars.charAt(nextCharPos) === '\\n') {\n          rowDelimiter += '\\n';\n        }\n        this.options.rowDelimiter = [rowDelimiter];\n        this._.rowDelimiterLength = rowDelimiter.length;\n      }\n    }\n    if (!this._.commenting && char === this.options.escape) {\n      escapeIsQuote = this.options.escape === this.options.quote;\n      isEscape = this._.nextChar === this.options.escape;\n      isQuote = this._.nextChar === this.options.quote;\n      if (!(escapeIsQuote && (this._.field == null) && !this._.quoting) && (isEscape || isQuote)) {\n        i++;\n        char = this._.nextChar;\n        this._.nextChar = chars.charAt(i + 1);\n        if (this._.field == null) {\n          this._.field = '';\n        }\n        this._.field += char;\n        if (this.options.raw) {\n          this._.rawBuf += char;\n        }\n        i++;\n        continue;\n      }\n    }\n    if (!this._.commenting && char === this.options.quote) {\n      if (this._.quoting) {\n        areNextCharsRowDelimiters = this.options.rowDelimiter && this.options.rowDelimiter.some(function(rd) {\n          return chars.substr(i + 1, rd.length) === rd;\n        });\n        areNextCharsDelimiter = chars.substr(i + 1, this.options.delimiter.length) === this.options.delimiter;\n        isNextCharAComment = this._.nextChar === this.options.comment;\n        if (this._.nextChar && !areNextCharsRowDelimiters && !areNextCharsDelimiter && !isNextCharAComment) {\n          if (this.options.relax) {\n            this._.quoting = false;\n            if (this._.field) {\n              this._.field = \"\" + this.options.quote + this._.field;\n            }\n          } else {\n            return Error(\"Invalid closing quote at line \" + (this.lines + 1) + \"; found \" + (JSON.stringify(this._.nextChar)) + \" instead of delimiter \" + (JSON.stringify(this.options.delimiter)));\n          }\n        } else {\n          this._.quoting = false;\n          this._.closingQuote = this.options.quote.length;\n          i++;\n          if (end && i === l) {\n            this._.line.push(auto_parse(this._.field || ''));\n            this._.field = null;\n          }\n          continue;\n        }\n      } else if (!this._.field) {\n        this._.quoting = true;\n        i++;\n        continue;\n      } else if ((this._.field != null) && !this.options.relax) {\n        return Error(\"Invalid opening quote at line \" + (this.lines + 1));\n      }\n    }\n    isRowDelimiter = this.options.rowDelimiter && this.options.rowDelimiter.some(function(rd) {\n      return chars.substr(i, rd.length) === rd;\n    });\n    if (isRowDelimiter || (end && i === l - 1)) {\n      this.lines++;\n    }\n    wasCommenting = false;\n    if (!this._.commenting && !this._.quoting && this.options.comment && chars.substr(i, this.options.comment.length) === this.options.comment) {\n      this._.commenting = true;\n    } else if (this._.commenting && isRowDelimiter) {\n      wasCommenting = true;\n      this._.commenting = false;\n    }\n    isDelimiter = chars.substr(i, this.options.delimiter.length) === this.options.delimiter;\n    if (!this._.commenting && !this._.quoting && (isDelimiter || isRowDelimiter)) {\n      if (isRowDelimiter) {\n        isRowDelimiterLength = this.options.rowDelimiter.filter(function(rd) {\n          return chars.substr(i, rd.length) === rd;\n        })[0].length;\n      }\n      if (isRowDelimiter && this._.line.length === 0 && (this._.field == null)) {\n        if (wasCommenting || this.options.skip_empty_lines) {\n          i += isRowDelimiterLength;\n          this._.nextChar = chars.charAt(i);\n          continue;\n        }\n      }\n      if (rtrim) {\n        if (!this._.closingQuote) {\n          this._.field = (ref1 = this._.field) != null ? ref1.trimRight() : void 0;\n        }\n      }\n      this._.line.push(auto_parse(this._.field || ''));\n      this._.closingQuote = 0;\n      this._.field = null;\n      if (isDelimiter) {\n        i += this.options.delimiter.length;\n        this._.nextChar = chars.charAt(i);\n        if (end && !this._.nextChar) {\n          isRowDelimiter = true;\n          this._.line.push('');\n        }\n      }\n      if (isRowDelimiter) {\n        err = this.__push(this._.line);\n        if (err) {\n          return err;\n        }\n        this._.line = [];\n        i += isRowDelimiterLength;\n        this._.nextChar = chars.charAt(i);\n        continue;\n      }\n    } else if (!this._.commenting && !this._.quoting && (char === ' ' || char === '\\t')) {\n      if (this._.field == null) {\n        this._.field = '';\n      }\n      if (!(ltrim && !this._.field)) {\n        this._.field += char;\n      }\n      i++;\n    } else if (!this._.commenting) {\n      if (this._.field == null) {\n        this._.field = '';\n      }\n      this._.field += char;\n      i++;\n    } else {\n      i++;\n    }\n    if (!this._.commenting && ((ref2 = this._.field) != null ? ref2.length : void 0) > this.options.max_limit_on_data_read) {\n      return Error(\"Field exceeds max_limit_on_data_read setting (\" + this.options.max_limit_on_data_read + \") \" + (JSON.stringify(this.options.delimiter)));\n    }\n    if (!this._.commenting && ((ref3 = this._.line) != null ? ref3.length : void 0) > this.options.max_limit_on_data_read) {\n      return Error(\"Row delimiter not found in the file \" + (JSON.stringify(this.options.rowDelimiter)));\n    }\n  }\n  if (end) {\n    if (this._.field != null) {\n      if (rtrim) {\n        if (!this._.closingQuote) {\n          this._.field = (ref4 = this._.field) != null ? ref4.trimRight() : void 0;\n        }\n      }\n      this._.line.push(auto_parse(this._.field || ''));\n      this._.field = null;\n    }\n    if (((ref5 = this._.field) != null ? ref5.length : void 0) > this.options.max_limit_on_data_read) {\n      return Error(\"Delimiter not found in the file \" + (JSON.stringify(this.options.delimiter)));\n    }\n    if (l === 0) {\n      this.lines++;\n    }\n    if (this._.line.length > this.options.max_limit_on_data_read) {\n      return Error(\"Row delimiter not found in the file \" + (JSON.stringify(this.options.rowDelimiter)));\n    }\n  }\n  this._.buf = chars.substr(i);\n  return null;\n};\n\nisObjLiteral = function(_obj) {\n  var _test;\n  _test = _obj;\n  if (typeof _obj !== 'object' || _obj === null || Array.isArray(_obj)) {\n    return false;\n  } else {\n    return (function() {\n      while (!false) {\n        if (Object.getPrototypeOf(_test = Object.getPrototypeOf(_test)) === null) {\n          break;\n        }\n      }\n      return Object.getPrototypeOf(_obj === _test);\n    })();\n  }\n};\n\n}).call(this,require('_process'),require(\"buffer\").Buffer)\n\n},{\"_process\":45,\"buffer\":30,\"stream\":66,\"string_decoder\":67,\"util\":71}],33:[function(require,module,exports){\n(function (Buffer){\n// Generated by CoffeeScript 1.12.7\nvar StringDecoder, parse;\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nparse = require('./index');\n\nmodule.exports = function(data, options) {\n  var decoder, err, parser, records;\n  if (options == null) {\n    options = {};\n  }\n  records = options.objname ? {} : [];\n  if (data instanceof Buffer) {\n    decoder = new StringDecoder();\n    data = decoder.write(data);\n  }\n  parser = new parse.Parser(options);\n  parser.push = function(record) {\n    if (options.objname) {\n      return records[record[0]] = record[1];\n    } else {\n      return records.push(record);\n    }\n  };\n  err = parser.__write(data, false);\n  if (err) {\n    throw err;\n  }\n  if (data instanceof Buffer) {\n    err = parser.__write(data.end(), true);\n    if (err) {\n      throw err;\n    }\n  }\n  parser._flush((function() {}));\n  return records;\n};\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./index\":32,\"buffer\":30,\"string_decoder\":67}],34:[function(require,module,exports){\n(function (process){\n// Generated by CoffeeScript 1.12.7\nvar Stringifier, get, stream, util;\n\nstream = require('stream');\n\nutil = require('util');\n\nget = require('lodash.get');\n\nmodule.exports = function() {\n  var callback, chunks, data, options, stringifier;\n  if (arguments.length === 3) {\n    data = arguments[0];\n    options = arguments[1];\n    callback = arguments[2];\n  } else if (arguments.length === 2) {\n    if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n    if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else {\n      options = arguments[1];\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n    } else if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  }\n  if (options == null) {\n    options = {};\n  }\n  stringifier = new Stringifier(options);\n  if (data) {\n    process.nextTick(function() {\n      var d, j, len;\n      for (j = 0, len = data.length; j < len; j++) {\n        d = data[j];\n        stringifier.write(d);\n      }\n      return stringifier.end();\n    });\n  }\n  if (callback) {\n    chunks = [];\n    stringifier.on('readable', function() {\n      var chunk, results;\n      results = [];\n      while (chunk = stringifier.read()) {\n        results.push(chunks.push(chunk));\n      }\n      return results;\n    });\n    stringifier.on('error', function(err) {\n      return callback(err);\n    });\n    stringifier.on('end', function() {\n      return callback(null, chunks.join(''));\n    });\n  }\n  return stringifier;\n};\n\nStringifier = function(opts) {\n  var base, base1, base10, base11, base12, base13, base2, base3, base4, base5, base6, base7, base8, base9, k, options, v;\n  if (opts == null) {\n    opts = {};\n  }\n  options = {};\n  for (k in opts) {\n    v = opts[k];\n    options[k] = v;\n  }\n  stream.Transform.call(this, options);\n  this.options = options;\n  if ((base = this.options).delimiter == null) {\n    base.delimiter = ',';\n  }\n  if ((base1 = this.options).quote == null) {\n    base1.quote = '\"';\n  }\n  if ((base2 = this.options).quoted == null) {\n    base2.quoted = false;\n  }\n  if ((base3 = this.options).quotedEmpty == null) {\n    base3.quotedEmpty = void 0;\n  }\n  if ((base4 = this.options).quotedString == null) {\n    base4.quotedString = false;\n  }\n  if ((base5 = this.options).eof == null) {\n    base5.eof = true;\n  }\n  if ((base6 = this.options).escape == null) {\n    base6.escape = '\"';\n  }\n  if ((base7 = this.options).columns == null) {\n    base7.columns = null;\n  }\n  if ((base8 = this.options).header == null) {\n    base8.header = false;\n  }\n  if ((base9 = this.options).formatters == null) {\n    base9.formatters = {};\n  }\n  if ((base10 = this.options.formatters).date == null) {\n    base10.date = function(value) {\n      return '' + value.getTime();\n    };\n  }\n  if ((base11 = this.options.formatters).bool == null) {\n    base11.bool = function(value) {\n      if (value) {\n        return '1';\n      } else {\n        return '';\n      }\n    };\n  }\n  if ((base12 = this.options.formatters).object == null) {\n    base12.object = function(value) {\n      return JSON.stringify(value);\n    };\n  }\n  if ((base13 = this.options).rowDelimiter == null) {\n    base13.rowDelimiter = '\\n';\n  }\n  if (this.countWriten == null) {\n    this.countWriten = 0;\n  }\n  switch (this.options.rowDelimiter) {\n    case 'auto':\n      this.options.rowDelimiter = null;\n      break;\n    case 'unix':\n      this.options.rowDelimiter = \"\\n\";\n      break;\n    case 'mac':\n      this.options.rowDelimiter = \"\\r\";\n      break;\n    case 'windows':\n      this.options.rowDelimiter = \"\\r\\n\";\n      break;\n    case 'unicode':\n      this.options.rowDelimiter = \"\\u2028\";\n  }\n  return this;\n};\n\nutil.inherits(Stringifier, stream.Transform);\n\nmodule.exports.Stringifier = Stringifier;\n\nStringifier.prototype.headers = function() {\n  var k, label, labels;\n  if (!this.options.header) {\n    return;\n  }\n  if (!this.options.columns) {\n    return;\n  }\n  labels = this.options.columns;\n  if (typeof labels === 'object') {\n    labels = (function() {\n      var results;\n      results = [];\n      for (k in labels) {\n        label = labels[k];\n        results.push(label);\n      }\n      return results;\n    })();\n  }\n  if (this.options.eof) {\n    labels = this.stringify(labels) + this.options.rowDelimiter;\n  } else {\n    labels = this.stringify(labels);\n  }\n  return stream.Transform.prototype.write.call(this, labels);\n};\n\nStringifier.prototype.end = function(chunk, encoding, callback) {\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  return stream.Transform.prototype.end.apply(this, arguments);\n};\n\nStringifier.prototype.write = function(chunk, encoding, callback) {\n  var base, e, preserve;\n  if (chunk == null) {\n    return;\n  }\n  preserve = typeof chunk !== 'object';\n  if (!preserve) {\n    if (this.countWriten === 0 && !Array.isArray(chunk)) {\n      if ((base = this.options).columns == null) {\n        base.columns = Object.keys(chunk);\n      }\n    }\n    try {\n      this.emit('record', chunk, this.countWriten);\n    } catch (error) {\n      e = error;\n      return this.emit('error', e);\n    }\n    if (this.options.eof) {\n      chunk = this.stringify(chunk) + this.options.rowDelimiter;\n    } else {\n      chunk = this.stringify(chunk);\n      if (this.options.header || this.countWriten) {\n        chunk = this.options.rowDelimiter + chunk;\n      }\n    }\n  }\n  if (typeof chunk === 'number') {\n    chunk = \"\" + chunk;\n  }\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  if (!preserve) {\n    this.countWriten++;\n  }\n  return stream.Transform.prototype.write.call(this, chunk, encoding, callback);\n};\n\nStringifier.prototype._transform = function(chunk, encoding, callback) {\n  this.push(chunk);\n  return callback();\n};\n\nStringifier.prototype.stringify = function(line) {\n  var _line, column, columns, containsEscape, containsLinebreak, containsQuote, containsdelimiter, delimiter, escape, field, i, j, l, newLine, quote, ref, ref1, regexp, shouldQuote, value;\n  if (typeof line !== 'object') {\n    return line;\n  }\n  columns = this.options.columns;\n  if (typeof columns === 'object' && columns !== null && !Array.isArray(columns)) {\n    columns = Object.keys(columns);\n  }\n  delimiter = this.options.delimiter;\n  quote = this.options.quote;\n  escape = this.options.escape;\n  if (!Array.isArray(line)) {\n    _line = [];\n    if (columns) {\n      for (i = j = 0, ref = columns.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        column = columns[i];\n        value = get(line, column);\n        _line[i] = (typeof value === 'undefined' || value === null) ? '' : value;\n      }\n    } else {\n      for (column in line) {\n        _line.push(line[column]);\n      }\n    }\n    line = _line;\n    _line = null;\n  } else if (columns) {\n    line.splice(columns.length);\n  }\n  if (Array.isArray(line)) {\n    newLine = '';\n    for (i = l = 0, ref1 = line.length; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {\n      field = line[i];\n      if (typeof field === 'string') {\n\n      } else if (typeof field === 'number') {\n        field = '' + field;\n      } else if (typeof field === 'boolean') {\n        field = this.options.formatters.bool(field);\n      } else if (field instanceof Date) {\n        field = this.options.formatters.date(field);\n      } else if (typeof field === 'object' && field !== null) {\n        field = this.options.formatters.object(field);\n      }\n      if (field) {\n        containsdelimiter = field.indexOf(delimiter) >= 0;\n        containsQuote = field.indexOf(quote) >= 0;\n        containsEscape = field.indexOf(escape) >= 0 && (escape !== quote);\n        containsLinebreak = field.indexOf('\\r') >= 0 || field.indexOf('\\n') >= 0;\n        shouldQuote = containsQuote || containsdelimiter || containsLinebreak || this.options.quoted || (this.options.quotedString && typeof line[i] === 'string');\n        if (shouldQuote && containsEscape) {\n          regexp = escape === '\\\\' ? new RegExp(escape + escape, 'g') : new RegExp(escape, 'g');\n          field = field.replace(regexp, escape + escape);\n        }\n        if (containsQuote) {\n          regexp = new RegExp(quote, 'g');\n          field = field.replace(regexp, escape + quote);\n        }\n        if (shouldQuote) {\n          field = quote + field + quote;\n        }\n        newLine += field;\n      } else if (this.options.quotedEmpty || ((this.options.quotedEmpty == null) && line[i] === '' && this.options.quotedString)) {\n        newLine += quote + quote;\n      }\n      if (i !== line.length - 1) {\n        newLine += delimiter;\n      }\n    }\n    line = newLine;\n  }\n  return line;\n};\n\n}).call(this,require('_process'))\n\n},{\"_process\":45,\"lodash.get\":41,\"stream\":66,\"util\":71}],35:[function(require,module,exports){\n(function (Buffer){\n// Generated by CoffeeScript 1.12.7\nvar StringDecoder, stringify;\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nstringify = require('./index');\n\nmodule.exports = function(records, options) {\n  var data, decoder, i, len, record, stringifier;\n  if (options == null) {\n    options = {};\n  }\n  data = [];\n  if (records instanceof Buffer) {\n    decoder = new StringDecoder();\n    records = decoder.write(records);\n  }\n  stringifier = new stringify.Stringifier(options);\n  stringifier.push = function(record) {\n    if (record) {\n      return data.push(record.toString());\n    }\n  };\n  for (i = 0, len = records.length; i < len; i++) {\n    record = records[i];\n    stringifier.write(record);\n  }\n  stringifier.end();\n  return data.join('');\n};\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./index\":34,\"buffer\":30,\"string_decoder\":67}],36:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill\nvar objectKeys = Object.keys || objectKeysPolyfill\nvar bind = Function.prototype.bind || functionBindPolyfill\n\nfunction EventEmitter() {\n  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n    this._events = objectCreate(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nvar hasDefineProperty;\ntry {\n  var o = {};\n  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n  hasDefineProperty = o.x === 0;\n} catch (err) { hasDefineProperty = false }\nif (hasDefineProperty) {\n  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n    enumerable: true,\n    get: function() {\n      return defaultMaxListeners;\n    },\n    set: function(arg) {\n      // check whether the input is a positive number (whose value is zero or\n      // greater and not a NaN).\n      if (typeof arg !== 'number' || arg < 0 || arg !== arg)\n        throw new TypeError('\"defaultMaxListeners\" must be a positive number');\n      defaultMaxListeners = arg;\n    }\n  });\n} else {\n  EventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    if (arguments.length > 1)\n      er = arguments[1];\n    if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Unhandled \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n      // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n      // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = objectCreate(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n          listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n          prepend ? [listener, existing] : [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n            existing.length + ' \"' + String(type) + '\" listeners ' +\n            'added. Use emitter.setMaxListeners() to ' +\n            'increase limit.');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        if (typeof console === 'object' && console.warn) {\n          console.warn('%s: %s', w.name, w.message);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    switch (arguments.length) {\n      case 0:\n        return this.listener.call(this.target);\n      case 1:\n        return this.listener.call(this.target, arguments[0]);\n      case 2:\n        return this.listener.call(this.target, arguments[0], arguments[1]);\n      case 3:\n        return this.listener.call(this.target, arguments[0], arguments[1],\n            arguments[2]);\n      default:\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i)\n          args[i] = arguments[i];\n        this.listener.apply(this.target, args);\n    }\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = bind.call(onceWrapper, state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = objectCreate(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else\n          spliceOne(list, position);\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = objectCreate(null);\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = objectCreate(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = objectKeys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = objectCreate(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (!events)\n    return [];\n\n  var evlistener = events[type];\n  if (!evlistener)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n  var F = function() {};\n  F.prototype = proto;\n  return new F;\n}\nfunction objectKeysPolyfill(obj) {\n  var keys = [];\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {\n    keys.push(k);\n  }\n  return k;\n}\nfunction functionBindPolyfill(context) {\n  var fn = this;\n  return function () {\n    return fn.apply(context, arguments);\n  };\n}\n\n},{}],37:[function(require,module,exports){\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],38:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}],39:[function(require,module,exports){\n/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n},{}],40:[function(require,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n},{}],41:[function(require,module,exports){\n(function (global){\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],42:[function(require,module,exports){\n(function (global){\n/**\n * @license\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash core -o ./dist/lodash.core.js`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.10';\n\n  /** Error message constants. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_PARTIAL_FLAG = 32;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      stringTag = '[object String]';\n\n  /** Used to match HTML entities and HTML characters. */\n  var reUnescapedHtml = /[&<>\"']/g,\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    array.push.apply(array, values);\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return baseMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /** Used for built-in method references. */\n  var arrayProto = Array.prototype,\n      objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to generate unique IDs. */\n  var idCounter = 0;\n\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n  var nativeObjectToString = objectProto.toString;\n\n  /** Used to restore the original `_` reference in `_.noConflict`. */\n  var oldDash = root._;\n\n  /** Built-in value references. */\n  var objectCreate = Object.create,\n      propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeIsFinite = root.isFinite,\n      nativeKeys = overArg(Object.keys, Object),\n      nativeMax = Math.max;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps `value` to enable implicit method\n   * chain sequences. Methods that operate on and return arrays, collections,\n   * and functions can be chained together. Methods that retrieve a single value\n   * or may return a primitive value will automatically end the chain sequence\n   * and return the unwrapped value. Otherwise, the value must be unwrapped\n   * with `_#value`.\n   *\n   * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n   * enabled using `_.chain`.\n   *\n   * The execution of chained methods is lazy, that is, it's deferred until\n   * `_#value` is implicitly or explicitly called.\n   *\n   * Lazy evaluation allows several methods to support shortcut fusion.\n   * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n   * the creation of intermediate arrays and can greatly reduce the number of\n   * iteratee executions. Sections of a chain sequence qualify for shortcut\n   * fusion if the section is applied to an array and iteratees accept only\n   * one argument. The heuristic for whether a section qualifies for shortcut\n   * fusion is subject to change.\n   *\n   * Chaining is supported in custom builds as long as the `_#value` method is\n   * directly or indirectly included in the build.\n   *\n   * In addition to lodash methods, wrappers have `Array` and `String` methods.\n   *\n   * The wrapper `Array` methods are:\n   * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n   *\n   * The wrapper `String` methods are:\n   * `replace` and `split`\n   *\n   * The wrapper methods that support shortcut fusion are:\n   * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n   * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n   * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n   *\n   * The chainable wrapper methods are:\n   * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n   * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n   * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n   * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n   * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n   * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n   * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n   * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n   * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n   * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n   * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n   * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n   * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n   * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n   * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n   * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n   * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n   * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n   * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n   * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n   * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n   * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n   * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n   * `zipObject`, `zipObjectDeep`, and `zipWith`\n   *\n   * The wrapper methods that are **not** chainable by default are:\n   * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n   * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n   * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n   * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n   * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n   * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n   * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n   * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n   * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n   * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n   * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n   * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n   * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n   * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n   * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n   * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n   * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n   * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n   * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n   * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n   * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n   * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n   * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n   * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n   * `upperFirst`, `value`, and `words`\n   *\n   * @name _\n   * @constructor\n   * @category Seq\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // Returns an unwrapped value.\n   * wrapped.reduce(_.add);\n   * // => 6\n   *\n   * // Returns a wrapped value.\n   * var squares = wrapped.map(square);\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash(value) {\n    return value instanceof LodashWrapper\n      ? value\n      : new LodashWrapper(value);\n  }\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} proto The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  var baseCreate = (function() {\n    function object() {}\n    return function(proto) {\n      if (!isObject(proto)) {\n        return {};\n      }\n      if (objectCreate) {\n        return objectCreate(proto);\n      }\n      object.prototype = proto;\n      var result = new object;\n      object.prototype = undefined;\n      return result;\n    };\n  }());\n\n  /**\n   * The base constructor for creating `lodash` wrapper objects.\n   *\n   * @private\n   * @param {*} value The value to wrap.\n   * @param {boolean} [chainAll] Enable explicit method chain sequences.\n   */\n  function LodashWrapper(value, chainAll) {\n    this.__wrapped__ = value;\n    this.__actions__ = [];\n    this.__chain__ = !!chainAll;\n  }\n\n  LodashWrapper.prototype = baseCreate(lodash.prototype);\n  LodashWrapper.prototype.constructor = LodashWrapper;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns `value` to `key` of `object` if the existing value is not equivalent\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function assignValue(object, key, value) {\n    var objValue = object[key];\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n        (value === undefined && !(key in object))) {\n      baseAssignValue(object, key, value);\n    }\n  }\n\n  /**\n   * The base implementation of `assignValue` and `assignMergeValue` without\n   * value checks.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function baseAssignValue(object, key, value) {\n    object[key] = value;\n  }\n\n  /**\n   * The base implementation of `_.delay` and `_.defer` which accepts `args`\n   * to provide to `func`.\n   *\n   * @private\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {Array} args The arguments to provide to `func`.\n   * @returns {number|Object} Returns the timer id or timeout object.\n   */\n  function baseDelay(func, wait, args) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\n  }\n\n  /**\n   * The base implementation of `_.forEach` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   */\n  var baseEach = createBaseEach(baseForOwn);\n\n  /**\n   * The base implementation of `_.every` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`\n   */\n  function baseEvery(collection, predicate) {\n    var result = true;\n    baseEach(collection, function(value, index, collection) {\n      result = !!predicate(value, index, collection);\n      return result;\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of methods like `_.max` and `_.min` which accepts a\n   * `comparator` to determine the extremum value.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The iteratee invoked per iteration.\n   * @param {Function} comparator The comparator used to compare values.\n   * @returns {*} Returns the extremum value.\n   */\n  function baseExtremum(array, iteratee, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index],\n          current = iteratee(value);\n\n      if (current != null && (computed === undefined\n            ? (current === current && !false)\n            : comparator(current, computed)\n          )) {\n        var computed = current,\n            result = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.filter` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function baseFilter(collection, predicate) {\n    var result = [];\n    baseEach(collection, function(value, index, collection) {\n      if (predicate(value, index, collection)) {\n        result.push(value);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.flatten` with support for restricting flattening.\n   *\n   * @private\n   * @param {Array} array The array to flatten.\n   * @param {number} depth The maximum recursion depth.\n   * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n   * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n   * @param {Array} [result=[]] The initial result value.\n   * @returns {Array} Returns the new flattened array.\n   */\n  function baseFlatten(array, depth, predicate, isStrict, result) {\n    var index = -1,\n        length = array.length;\n\n    predicate || (predicate = isFlattenable);\n    result || (result = []);\n\n    while (++index < length) {\n      var value = array[index];\n      if (depth > 0 && predicate(value)) {\n        if (depth > 1) {\n          // Recursively flatten arrays (susceptible to call stack limits).\n          baseFlatten(value, depth - 1, predicate, isStrict, result);\n        } else {\n          arrayPush(result, value);\n        }\n      } else if (!isStrict) {\n        result[result.length] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `baseForOwn` which iterates over `object`\n   * properties returned by `keysFunc` and invokes `iteratee` for each property.\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {Function} keysFunc The function to get the keys of `object`.\n   * @returns {Object} Returns `object`.\n   */\n  var baseFor = createBaseFor();\n\n  /**\n   * The base implementation of `_.forOwn` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Object} Returns `object`.\n   */\n  function baseForOwn(object, iteratee) {\n    return object && baseFor(object, iteratee, keys);\n  }\n\n  /**\n   * The base implementation of `_.functions` which creates an array of\n   * `object` function property names filtered from `props`.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @param {Array} props The property names to filter.\n   * @returns {Array} Returns the function names.\n   */\n  function baseFunctions(object, props) {\n    return baseFilter(props, function(key) {\n      return isFunction(object[key]);\n    });\n  }\n\n  /**\n   * The base implementation of `getTag` without fallbacks for buggy environments.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the `toStringTag`.\n   */\n  function baseGetTag(value) {\n    return objectToString(value);\n  }\n\n  /**\n   * The base implementation of `_.gt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is greater than `other`,\n   *  else `false`.\n   */\n  function baseGt(value, other) {\n    return value > other;\n  }\n\n  /**\n   * The base implementation of `_.isArguments`.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   */\n  var baseIsArguments = noop;\n\n  /**\n   * The base implementation of `_.isDate` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   */\n  function baseIsDate(value) {\n    return isObjectLike(value) && baseGetTag(value) == dateTag;\n  }\n\n  /**\n   * The base implementation of `_.isEqual` which supports partial comparisons\n   * and tracks traversed objects.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @param {boolean} bitmask The bitmask flags.\n   *  1 - Unordered comparison\n   *  2 - Partial comparison\n   * @param {Function} [customizer] The function to customize comparisons.\n   * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   */\n  function baseIsEqual(value, other, bitmask, customizer, stack) {\n    if (value === other) {\n      return true;\n    }\n    if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n      return value !== value && other !== other;\n    }\n    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n  }\n\n  /**\n   * A specialized version of `baseIsEqual` for arrays and objects which performs\n   * deep comparisons and tracks traversed objects enabling objects with circular\n   * references to be compared.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n    var objIsArr = isArray(object),\n        othIsArr = isArray(other),\n        objTag = objIsArr ? arrayTag : baseGetTag(object),\n        othTag = othIsArr ? arrayTag : baseGetTag(other);\n\n    objTag = objTag == argsTag ? objectTag : objTag;\n    othTag = othTag == argsTag ? objectTag : othTag;\n\n    var objIsObj = objTag == objectTag,\n        othIsObj = othTag == objectTag,\n        isSameTag = objTag == othTag;\n\n    stack || (stack = []);\n    var objStack = find(stack, function(entry) {\n      return entry[0] == object;\n    });\n    var othStack = find(stack, function(entry) {\n      return entry[0] == other;\n    });\n    if (objStack && othStack) {\n      return objStack[1] == other;\n    }\n    stack.push([object, other]);\n    stack.push([other, object]);\n    if (isSameTag && !objIsObj) {\n      var result = (objIsArr)\n        ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n        : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      stack.pop();\n      return result;\n    }\n    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n      if (objIsWrapped || othIsWrapped) {\n        var objUnwrapped = objIsWrapped ? object.value() : object,\n            othUnwrapped = othIsWrapped ? other.value() : other;\n\n        var result = equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        stack.pop();\n        return result;\n      }\n    }\n    if (!isSameTag) {\n      return false;\n    }\n    var result = equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    stack.pop();\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.isRegExp` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   */\n  function baseIsRegExp(value) {\n    return isObjectLike(value) && baseGetTag(value) == regexpTag;\n  }\n\n  /**\n   * The base implementation of `_.iteratee`.\n   *\n   * @private\n   * @param {*} [value=_.identity] The value to convert to an iteratee.\n   * @returns {Function} Returns the iteratee.\n   */\n  function baseIteratee(func) {\n    if (typeof func == 'function') {\n      return func;\n    }\n    if (func == null) {\n      return identity;\n    }\n    return (typeof func == 'object' ? baseMatches : baseProperty)(func);\n  }\n\n  /**\n   * The base implementation of `_.lt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is less than `other`,\n   *  else `false`.\n   */\n  function baseLt(value, other) {\n    return value < other;\n  }\n\n  /**\n   * The base implementation of `_.map` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function baseMap(collection, iteratee) {\n    var index = -1,\n        result = isArrayLike(collection) ? Array(collection.length) : [];\n\n    baseEach(collection, function(value, key, collection) {\n      result[++index] = iteratee(value, key, collection);\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.matches` which doesn't clone `source`.\n   *\n   * @private\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   */\n  function baseMatches(source) {\n    var props = nativeKeys(source);\n    return function(object) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length];\n        if (!(key in object &&\n              baseIsEqual(source[key], object[key], COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG)\n            )) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  /**\n   * The base implementation of `_.pick` without support for individual\n   * property identifiers.\n   *\n   * @private\n   * @param {Object} object The source object.\n   * @param {string[]} paths The property paths to pick.\n   * @returns {Object} Returns the new object.\n   */\n  function basePick(object, props) {\n    object = Object(object);\n    return reduce(props, function(result, key) {\n      if (key in object) {\n        result[key] = object[key];\n      }\n      return result;\n    }, {});\n  }\n\n  /**\n   * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @returns {Function} Returns the new function.\n   */\n  function baseRest(func, start) {\n    return setToString(overRest(func, start, identity), func + '');\n  }\n\n  /**\n   * The base implementation of `_.slice` without an iteratee call guard.\n   *\n   * @private\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function baseSlice(array, start, end) {\n    var index = -1,\n        length = array.length;\n\n    if (start < 0) {\n      start = -start > length ? 0 : (length + start);\n    }\n    end = end > length ? length : end;\n    if (end < 0) {\n      end += length;\n    }\n    length = start > end ? 0 : ((end - start) >>> 0);\n    start >>>= 0;\n\n    var result = Array(length);\n    while (++index < length) {\n      result[index] = array[index + start];\n    }\n    return result;\n  }\n\n  /**\n   * Copies the values of `source` to `array`.\n   *\n   * @private\n   * @param {Array} source The array to copy values from.\n   * @param {Array} [array=[]] The array to copy values to.\n   * @returns {Array} Returns `array`.\n   */\n  function copyArray(source) {\n    return baseSlice(source, 0, source.length);\n  }\n\n  /**\n   * The base implementation of `_.some` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function baseSome(collection, predicate) {\n    var result;\n\n    baseEach(collection, function(value, index, collection) {\n      result = predicate(value, index, collection);\n      return !result;\n    });\n    return !!result;\n  }\n\n  /**\n   * The base implementation of `wrapperValue` which returns the result of\n   * performing a sequence of actions on the unwrapped `value`, where each\n   * successive action is supplied the return value of the previous.\n   *\n   * @private\n   * @param {*} value The unwrapped value.\n   * @param {Array} actions Actions to perform to resolve the unwrapped value.\n   * @returns {*} Returns the resolved value.\n   */\n  function baseWrapperValue(value, actions) {\n    var result = value;\n    return reduce(actions, function(result, action) {\n      return action.func.apply(action.thisArg, arrayPush([result], action.args));\n    }, result);\n  }\n\n  /**\n   * Compares values to sort them in ascending order.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function compareAscending(value, other) {\n    if (value !== other) {\n      var valIsDefined = value !== undefined,\n          valIsNull = value === null,\n          valIsReflexive = value === value,\n          valIsSymbol = false;\n\n      var othIsDefined = other !== undefined,\n          othIsNull = other === null,\n          othIsReflexive = other === other,\n          othIsSymbol = false;\n\n      if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n          (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n          (valIsNull && othIsDefined && othIsReflexive) ||\n          (!valIsDefined && othIsReflexive) ||\n          !valIsReflexive) {\n        return 1;\n      }\n      if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n          (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n          (othIsNull && valIsDefined && valIsReflexive) ||\n          (!othIsDefined && valIsReflexive) ||\n          !othIsReflexive) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Copies properties of `source` to `object`.\n   *\n   * @private\n   * @param {Object} source The object to copy properties from.\n   * @param {Array} props The property identifiers to copy.\n   * @param {Object} [object={}] The object to copy properties to.\n   * @param {Function} [customizer] The function to customize copied values.\n   * @returns {Object} Returns `object`.\n   */\n  function copyObject(source, props, object, customizer) {\n    var isNew = !object;\n    object || (object = {});\n\n    var index = -1,\n        length = props.length;\n\n    while (++index < length) {\n      var key = props[index];\n\n      var newValue = customizer\n        ? customizer(object[key], source[key], key, object, source)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = source[key];\n      }\n      if (isNew) {\n        baseAssignValue(object, key, newValue);\n      } else {\n        assignValue(object, key, newValue);\n      }\n    }\n    return object;\n  }\n\n  /**\n   * Creates a function like `_.assign`.\n   *\n   * @private\n   * @param {Function} assigner The function to assign values.\n   * @returns {Function} Returns the new assigner function.\n   */\n  function createAssigner(assigner) {\n    return baseRest(function(object, sources) {\n      var index = -1,\n          length = sources.length,\n          customizer = length > 1 ? sources[length - 1] : undefined;\n\n      customizer = (assigner.length > 3 && typeof customizer == 'function')\n        ? (length--, customizer)\n        : undefined;\n\n      object = Object(object);\n      while (++index < length) {\n        var source = sources[index];\n        if (source) {\n          assigner(object, source, index, customizer);\n        }\n      }\n      return object;\n    });\n  }\n\n  /**\n   * Creates a `baseEach` or `baseEachRight` function.\n   *\n   * @private\n   * @param {Function} eachFunc The function to iterate over a collection.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseEach(eachFunc, fromRight) {\n    return function(collection, iteratee) {\n      if (collection == null) {\n        return collection;\n      }\n      if (!isArrayLike(collection)) {\n        return eachFunc(collection, iteratee);\n      }\n      var length = collection.length,\n          index = fromRight ? length : -1,\n          iterable = Object(collection);\n\n      while ((fromRight ? index-- : ++index < length)) {\n        if (iteratee(iterable[index], index, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    };\n  }\n\n  /**\n   * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n   *\n   * @private\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseFor(fromRight) {\n    return function(object, iteratee, keysFunc) {\n      var index = -1,\n          iterable = Object(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (length--) {\n        var key = props[fromRight ? length : ++index];\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n      return object;\n    };\n  }\n\n  /**\n   * Creates a function that produces an instance of `Ctor` regardless of\n   * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n   *\n   * @private\n   * @param {Function} Ctor The constructor to wrap.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createCtor(Ctor) {\n    return function() {\n      // Use a `switch` statement to work with class constructors. See\n      // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n      // for more details.\n      var args = arguments;\n      var thisBinding = baseCreate(Ctor.prototype),\n          result = Ctor.apply(thisBinding, args);\n\n      // Mimic the constructor's `return` behavior.\n      // See https://es5.github.io/#x13.2.2 for more details.\n      return isObject(result) ? result : thisBinding;\n    };\n  }\n\n  /**\n   * Creates a `_.find` or `_.findLast` function.\n   *\n   * @private\n   * @param {Function} findIndexFunc The function to find the collection index.\n   * @returns {Function} Returns the new find function.\n   */\n  function createFind(findIndexFunc) {\n    return function(collection, predicate, fromIndex) {\n      var iterable = Object(collection);\n      if (!isArrayLike(collection)) {\n        var iteratee = baseIteratee(predicate, 3);\n        collection = keys(collection);\n        predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n      }\n      var index = findIndexFunc(collection, predicate, fromIndex);\n      return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke it with the `this` binding\n   * of `thisArg` and `partials` prepended to the arguments it receives.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} partials The arguments to prepend to those provided to\n   *  the new function.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createPartial(func, bitmask, thisArg, partials) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    var isBind = bitmask & WRAP_BIND_FLAG,\n        Ctor = createCtor(func);\n\n    function wrapper() {\n      var argsIndex = -1,\n          argsLength = arguments.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          args = Array(leftLength + argsLength),\n          fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n      while (++leftIndex < leftLength) {\n        args[leftIndex] = partials[leftIndex];\n      }\n      while (argsLength--) {\n        args[leftIndex++] = arguments[++argsIndex];\n      }\n      return fn.apply(isBind ? thisArg : this, args);\n    }\n    return wrapper;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for arrays with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Array} array The array to compare.\n   * @param {Array} other The other array to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `array` and `other` objects.\n   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n   */\n  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n        arrLength = array.length,\n        othLength = other.length;\n\n    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n      return false;\n    }\n    var index = -1,\n        result = true,\n        seen = (bitmask & COMPARE_UNORDERED_FLAG) ? [] : undefined;\n\n    // Ignore non-index properties.\n    while (++index < arrLength) {\n      var arrValue = array[index],\n          othValue = other[index];\n\n      var compared;\n      if (compared !== undefined) {\n        if (compared) {\n          continue;\n        }\n        result = false;\n        break;\n      }\n      // Recursively compare arrays (susceptible to call stack limits).\n      if (seen) {\n        if (!baseSome(other, function(othValue, othIndex) {\n              if (!indexOf(seen, othIndex) &&\n                  (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                return seen.push(othIndex);\n              }\n            })) {\n          result = false;\n          break;\n        }\n      } else if (!(\n            arrValue === othValue ||\n              equalFunc(arrValue, othValue, bitmask, customizer, stack)\n          )) {\n        result = false;\n        break;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for comparing objects of\n   * the same `toStringTag`.\n   *\n   * **Note:** This function only supports comparing values with tags of\n   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {string} tag The `toStringTag` of the objects to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n    switch (tag) {\n\n      case boolTag:\n      case dateTag:\n      case numberTag:\n        // Coerce booleans to `1` or `0` and dates to milliseconds.\n        // Invalid dates are coerced to `NaN`.\n        return eq(+object, +other);\n\n      case errorTag:\n        return object.name == other.name && object.message == other.message;\n\n      case regexpTag:\n      case stringTag:\n        // Coerce regexes to strings and treat strings, primitives and objects,\n        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n        // for more details.\n        return object == (other + '');\n\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for objects with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n        objProps = keys(object),\n        objLength = objProps.length,\n        othProps = keys(other),\n        othLength = othProps.length;\n\n    if (objLength != othLength && !isPartial) {\n      return false;\n    }\n    var index = objLength;\n    while (index--) {\n      var key = objProps[index];\n      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n        return false;\n      }\n    }\n    var result = true;\n\n    var skipCtor = isPartial;\n    while (++index < objLength) {\n      key = objProps[index];\n      var objValue = object[key],\n          othValue = other[key];\n\n      var compared;\n      // Recursively compare objects (susceptible to call stack limits).\n      if (!(compared === undefined\n            ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n            : compared\n          )) {\n        result = false;\n        break;\n      }\n      skipCtor || (skipCtor = key == 'constructor');\n    }\n    if (result && !skipCtor) {\n      var objCtor = object.constructor,\n          othCtor = other.constructor;\n\n      // Non `Object` object instances with different constructors are not equal.\n      if (objCtor != othCtor &&\n          ('constructor' in object && 'constructor' in other) &&\n          !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n            typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n        result = false;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseRest` which flattens the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @returns {Function} Returns the new function.\n   */\n  function flatRest(func) {\n    return setToString(overRest(func, undefined, flatten), func + '');\n  }\n\n  /**\n   * Checks if `value` is a flattenable `arguments` object or array.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n   */\n  function isFlattenable(value) {\n    return isArray(value) || isArguments(value);\n  }\n\n  /**\n   * Checks if `value` is a valid array-like index.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n   */\n  function isIndex(value, length) {\n    var type = typeof value;\n    length = length == null ? MAX_SAFE_INTEGER : length;\n\n    return !!length &&\n      (type == 'number' ||\n        (type != 'symbol' && reIsUint.test(value))) &&\n          (value > -1 && value % 1 == 0 && value < length);\n  }\n\n  /**\n   * Checks if the given arguments are from an iteratee call.\n   *\n   * @private\n   * @param {*} value The potential iteratee value argument.\n   * @param {*} index The potential iteratee index or key argument.\n   * @param {*} object The potential iteratee object argument.\n   * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n   *  else `false`.\n   */\n  function isIterateeCall(value, index, object) {\n    if (!isObject(object)) {\n      return false;\n    }\n    var type = typeof index;\n    if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)\n        ) {\n      return eq(object[index], value);\n    }\n    return false;\n  }\n\n  /**\n   * This function is like\n   * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * except that it includes inherited enumerable properties.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n  function nativeKeysIn(object) {\n    var result = [];\n    if (object != null) {\n      for (var key in Object(object)) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `value` to a string using `Object.prototype.toString`.\n   *\n   * @private\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   */\n  function objectToString(value) {\n    return nativeObjectToString.call(value);\n  }\n\n  /**\n   * A specialized version of `baseRest` which transforms the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @param {Function} transform The rest array transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overRest(func, start, transform) {\n    start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n    return function() {\n      var args = arguments,\n          index = -1,\n          length = nativeMax(args.length - start, 0),\n          array = Array(length);\n\n      while (++index < length) {\n        array[index] = args[start + index];\n      }\n      index = -1;\n      var otherArgs = Array(start + 1);\n      while (++index < start) {\n        otherArgs[index] = args[index];\n      }\n      otherArgs[start] = transform(array);\n      return func.apply(this, otherArgs);\n    };\n  }\n\n  /**\n   * Sets the `toString` method of `func` to return `string`.\n   *\n   * @private\n   * @param {Function} func The function to modify.\n   * @param {Function} string The `toString` result.\n   * @returns {Function} Returns `func`.\n   */\n  var setToString = identity;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values removed. The values `false`, `null`,\n   * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns the new array of filtered values.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    return baseFilter(array, Boolean);\n  }\n\n  /**\n   * Creates a new array concatenating `array` with any additional arrays\n   * and/or values.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Array\n   * @param {Array} array The array to concatenate.\n   * @param {...*} [values] The values to concatenate.\n   * @returns {Array} Returns the new concatenated array.\n   * @example\n   *\n   * var array = [1];\n   * var other = _.concat(array, 2, [3], [[4]]);\n   *\n   * console.log(other);\n   * // => [1, 2, 3, [4]]\n   *\n   * console.log(array);\n   * // => [1]\n   */\n  function concat() {\n    var length = arguments.length;\n    if (!length) {\n      return [];\n    }\n    var args = Array(length - 1),\n        array = arguments[0],\n        index = length;\n\n    while (index--) {\n      args[index - 1] = arguments[index];\n    }\n    return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n  }\n\n  /**\n   * This method is like `_.find` except that it returns the index of the first\n   * element `predicate` returns truthy for instead of the element itself.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the found element, else `-1`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'active': false },\n   *   { 'user': 'fred',    'active': false },\n   *   { 'user': 'pebbles', 'active': true }\n   * ];\n   *\n   * _.findIndex(users, function(o) { return o.user == 'barney'; });\n   * // => 0\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.findIndex(users, { 'user': 'fred', 'active': false });\n   * // => 1\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.findIndex(users, ['active', false]);\n   * // => 0\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.findIndex(users, 'active');\n   * // => 2\n   */\n  function findIndex(array, predicate, fromIndex) {\n    var length = array == null ? 0 : array.length;\n    if (!length) {\n      return -1;\n    }\n    var index = fromIndex == null ? 0 : toInteger(fromIndex);\n    if (index < 0) {\n      index = nativeMax(length + index, 0);\n    }\n    return baseFindIndex(array, baseIteratee(predicate, 3), index);\n  }\n\n  /**\n   * Flattens `array` a single level deep.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, [3, [4]], 5]\n   */\n  function flatten(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? baseFlatten(array, 1) : [];\n  }\n\n  /**\n   * Recursively flattens `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flattenDeep([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, 3, 4, 5]\n   */\n  function flattenDeep(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? baseFlatten(array, INFINITY) : [];\n  }\n\n  /**\n   * Gets the first element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias first\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the first element of `array`.\n   * @example\n   *\n   * _.head([1, 2, 3]);\n   * // => 1\n   *\n   * _.head([]);\n   * // => undefined\n   */\n  function head(array) {\n    return (array && array.length) ? array[0] : undefined;\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `value` is found in `array`\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons. If `fromIndex` is negative, it's used as the\n   * offset from the end of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 1, 2], 2);\n   * // => 1\n   *\n   * // Search from the `fromIndex`.\n   * _.indexOf([1, 2, 1, 2], 2, 2);\n   * // => 3\n   */\n  function indexOf(array, value, fromIndex) {\n    var length = array == null ? 0 : array.length;\n    if (typeof fromIndex == 'number') {\n      fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n    } else {\n      fromIndex = 0;\n    }\n    var index = (fromIndex || 0) - 1,\n        isReflexive = value === value;\n\n    while (++index < length) {\n      var other = array[index];\n      if ((isReflexive ? other === value : other !== other)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Gets the last element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the last element of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   */\n  function last(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? array[length - 1] : undefined;\n  }\n\n  /**\n   * Creates a slice of `array` from `start` up to, but not including, `end`.\n   *\n   * **Note:** This method is used instead of\n   * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n   * returned.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function slice(array, start, end) {\n    var length = array == null ? 0 : array.length;\n    start = start == null ? 0 : +start;\n    end = end === undefined ? length : +end;\n    return length ? baseSlice(array, start, end) : [];\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n   * chain sequences enabled. The result of such sequences must be unwrapped\n   * with `_#value`.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.3.0\n   * @category Seq\n   * @param {*} value The value to wrap.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36 },\n   *   { 'user': 'fred',    'age': 40 },\n   *   { 'user': 'pebbles', 'age': 1 }\n   * ];\n   *\n   * var youngest = _\n   *   .chain(users)\n   *   .sortBy('age')\n   *   .map(function(o) {\n   *     return o.user + ' is ' + o.age;\n   *   })\n   *   .head()\n   *   .value();\n   * // => 'pebbles is 1'\n   */\n  function chain(value) {\n    var result = lodash(value);\n    result.__chain__ = true;\n    return result;\n  }\n\n  /**\n   * This method invokes `interceptor` and returns `value`. The interceptor\n   * is invoked with one argument; (value). The purpose of this method is to\n   * \"tap into\" a method chain sequence in order to modify intermediate results.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * _([1, 2, 3])\n   *  .tap(function(array) {\n   *    // Mutate input array.\n   *    array.pop();\n   *  })\n   *  .reverse()\n   *  .value();\n   * // => [2, 1]\n   */\n  function tap(value, interceptor) {\n    interceptor(value);\n    return value;\n  }\n\n  /**\n   * This method is like `_.tap` except that it returns the result of `interceptor`.\n   * The purpose of this method is to \"pass thru\" values replacing intermediate\n   * results in a method chain sequence.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns the result of `interceptor`.\n   * @example\n   *\n   * _('  abc  ')\n   *  .chain()\n   *  .trim()\n   *  .thru(function(value) {\n   *    return [value];\n   *  })\n   *  .value();\n   * // => ['abc']\n   */\n  function thru(value, interceptor) {\n    return interceptor(value);\n  }\n\n  /**\n   * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n   *\n   * @name chain\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 }\n   * ];\n   *\n   * // A sequence without explicit chaining.\n   * _(users).head();\n   * // => { 'user': 'barney', 'age': 36 }\n   *\n   * // A sequence with explicit chaining.\n   * _(users)\n   *   .chain()\n   *   .head()\n   *   .pick('user')\n   *   .value();\n   * // => { 'user': 'barney' }\n   */\n  function wrapperChain() {\n    return chain(this);\n  }\n\n  /**\n   * Executes the chain sequence to resolve the unwrapped value.\n   *\n   * @name value\n   * @memberOf _\n   * @since 0.1.0\n   * @alias toJSON, valueOf\n   * @category Seq\n   * @returns {*} Returns the resolved unwrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).value();\n   * // => [1, 2, 3]\n   */\n  function wrapperValue() {\n    return baseWrapperValue(this.__wrapped__, this.__actions__);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `predicate` returns truthy for **all** elements of `collection`.\n   * Iteration is stopped once `predicate` returns falsey. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * **Note:** This method returns `true` for\n   * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n   * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n   * elements of empty collections.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.every([true, 1, null, 'yes'], Boolean);\n   * // => false\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': false },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.every(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.every(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.every(users, 'active');\n   * // => false\n   */\n  function every(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseEvery(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning an array of all elements\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * **Note:** Unlike `_.remove`, this method returns a new array.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   * @see _.reject\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * _.filter(users, function(o) { return !o.active; });\n   * // => objects for ['fred']\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, { 'age': 36, 'active': true });\n   * // => objects for ['barney']\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, ['active', false]);\n   * // => objects for ['fred']\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.filter(users, 'active');\n   * // => objects for ['barney']\n   */\n  function filter(collection, predicate) {\n    return baseFilter(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning the first element\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {*} Returns the matched element, else `undefined`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36, 'active': true },\n   *   { 'user': 'fred',    'age': 40, 'active': false },\n   *   { 'user': 'pebbles', 'age': 1,  'active': true }\n   * ];\n   *\n   * _.find(users, function(o) { return o.age < 40; });\n   * // => object for 'barney'\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.find(users, { 'age': 1, 'active': true });\n   * // => object for 'pebbles'\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.find(users, ['active', false]);\n   * // => object for 'fred'\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.find(users, 'active');\n   * // => object for 'barney'\n   */\n  var find = createFind(findIndex);\n\n  /**\n   * Iterates over elements of `collection` and invokes `iteratee` for each element.\n   * The iteratee is invoked with three arguments: (value, index|key, collection).\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n   * property are iterated like arrays. To avoid this behavior use `_.forIn`\n   * or `_.forOwn` for object iteration.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias each\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   * @see _.forEachRight\n   * @example\n   *\n   * _.forEach([1, 2], function(value) {\n   *   console.log(value);\n   * });\n   * // => Logs `1` then `2`.\n   *\n   * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n   */\n  function forEach(collection, iteratee) {\n    return baseEach(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Creates an array of values by running each element in `collection` thru\n   * `iteratee`. The iteratee is invoked with three arguments:\n   * (value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n   *\n   * The guarded methods are:\n   * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n   * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n   * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n   * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * _.map([4, 8], square);\n   * // => [16, 64]\n   *\n   * _.map({ 'a': 4, 'b': 8 }, square);\n   * // => [16, 64] (iteration order is not guaranteed)\n   *\n   * var users = [\n   *   { 'user': 'barney' },\n   *   { 'user': 'fred' }\n   * ];\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, 'user');\n   * // => ['barney', 'fred']\n   */\n  function map(collection, iteratee) {\n    return baseMap(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Reduces `collection` to a value which is the accumulated result of running\n   * each element in `collection` thru `iteratee`, where each successive\n   * invocation is supplied the return value of the previous. If `accumulator`\n   * is not given, the first element of `collection` is used as the initial\n   * value. The iteratee is invoked with four arguments:\n   * (accumulator, value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.reduce`, `_.reduceRight`, and `_.transform`.\n   *\n   * The guarded methods are:\n   * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n   * and `sortBy`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @returns {*} Returns the accumulated value.\n   * @see _.reduceRight\n   * @example\n   *\n   * _.reduce([1, 2], function(sum, n) {\n   *   return sum + n;\n   * }, 0);\n   * // => 3\n   *\n   * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n   *   (result[value] || (result[value] = [])).push(key);\n   *   return result;\n   * }, {});\n   * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n   */\n  function reduce(collection, iteratee, accumulator) {\n    return baseReduce(collection, baseIteratee(iteratee), accumulator, arguments.length < 3, baseEach);\n  }\n\n  /**\n   * Gets the size of `collection` by returning its length for array-like\n   * values or the number of own enumerable string keyed properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object|string} collection The collection to inspect.\n   * @returns {number} Returns the collection size.\n   * @example\n   *\n   * _.size([1, 2, 3]);\n   * // => 3\n   *\n   * _.size({ 'a': 1, 'b': 2 });\n   * // => 2\n   *\n   * _.size('pebbles');\n   * // => 7\n   */\n  function size(collection) {\n    if (collection == null) {\n      return 0;\n    }\n    collection = isArrayLike(collection) ? collection : nativeKeys(collection);\n    return collection.length;\n  }\n\n  /**\n   * Checks if `predicate` returns truthy for **any** element of `collection`.\n   * Iteration is stopped once `predicate` returns truthy. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.some([null, 0, 'yes', false], Boolean);\n   * // => true\n   *\n   * var users = [\n   *   { 'user': 'barney', 'active': true },\n   *   { 'user': 'fred',   'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.some(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.some(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.some(users, 'active');\n   * // => true\n   */\n  function some(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseSome(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Creates an array of elements, sorted in ascending order by the results of\n   * running each element in a collection thru each iteratee. This method\n   * performs a stable sort, that is, it preserves the original sort order of\n   * equal elements. The iteratees are invoked with one argument: (value).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {...(Function|Function[])} [iteratees=[_.identity]]\n   *  The iteratees to sort by.\n   * @returns {Array} Returns the new sorted array.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'fred',   'age': 48 },\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 },\n   *   { 'user': 'barney', 'age': 34 }\n   * ];\n   *\n   * _.sortBy(users, [function(o) { return o.user; }]);\n   * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n   *\n   * _.sortBy(users, ['user', 'age']);\n   * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n   */\n  function sortBy(collection, iteratee) {\n    var index = 0;\n    iteratee = baseIteratee(iteratee);\n\n    return baseMap(baseMap(collection, function(value, key, collection) {\n      return { 'value': value, 'index': index++, 'criteria': iteratee(value, key, collection) };\n    }).sort(function(object, other) {\n      return compareAscending(object.criteria, other.criteria) || (object.index - other.index);\n    }), baseProperty('value'));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that invokes `func`, with the `this` binding and arguments\n   * of the created function, while it's called less than `n` times. Subsequent\n   * calls to the created function return the result of the last `func` invocation.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {number} n The number of calls at which `func` is no longer invoked.\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * jQuery(element).on('click', _.before(5, addContactToList));\n   * // => Allows adding up to 4 contacts to the list.\n   */\n  function before(n, func) {\n    var result;\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    n = toInteger(n);\n    return function() {\n      if (--n > 0) {\n        result = func.apply(this, arguments);\n      }\n      if (n <= 1) {\n        func = undefined;\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that invokes `func` with the `this` binding of `thisArg`\n   * and `partials` prepended to the arguments it receives.\n   *\n   * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n   * may be used as a placeholder for partially applied arguments.\n   *\n   * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n   * property of bound functions.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to bind.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {...*} [partials] The arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * function greet(greeting, punctuation) {\n   *   return greeting + ' ' + this.user + punctuation;\n   * }\n   *\n   * var object = { 'user': 'fred' };\n   *\n   * var bound = _.bind(greet, object, 'hi');\n   * bound('!');\n   * // => 'hi fred!'\n   *\n   * // Bound with placeholders.\n   * var bound = _.bind(greet, object, _, '!');\n   * bound('hi');\n   * // => 'hi fred!'\n   */\n  var bind = baseRest(function(func, thisArg, partials) {\n    return createPartial(func, WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG, thisArg, partials);\n  });\n\n  /**\n   * Defers invoking the `func` until the current call stack has cleared. Any\n   * additional arguments are provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to defer.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.defer(function(text) {\n   *   console.log(text);\n   * }, 'deferred');\n   * // => Logs 'deferred' after one millisecond.\n   */\n  var defer = baseRest(function(func, args) {\n    return baseDelay(func, 1, args);\n  });\n\n  /**\n   * Invokes `func` after `wait` milliseconds. Any additional arguments are\n   * provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.delay(function(text) {\n   *   console.log(text);\n   * }, 1000, 'later');\n   * // => Logs 'later' after one second.\n   */\n  var delay = baseRest(function(func, wait, args) {\n    return baseDelay(func, toNumber(wait) || 0, args);\n  });\n\n  /**\n   * Creates a function that negates the result of the predicate `func`. The\n   * `func` predicate is invoked with the `this` binding and arguments of the\n   * created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {Function} predicate The predicate to negate.\n   * @returns {Function} Returns the new negated function.\n   * @example\n   *\n   * function isEven(n) {\n   *   return n % 2 == 0;\n   * }\n   *\n   * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n   * // => [1, 3, 5]\n   */\n  function negate(predicate) {\n    if (typeof predicate != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return function() {\n      var args = arguments;\n      return !predicate.apply(this, args);\n    };\n  }\n\n  /**\n   * Creates a function that is restricted to invoking `func` once. Repeat calls\n   * to the function return the value of the first invocation. The `func` is\n   * invoked with the `this` binding and arguments of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var initialize = _.once(createApplication);\n   * initialize();\n   * initialize();\n   * // => `createApplication` is invoked once\n   */\n  function once(func) {\n    return before(2, func);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a shallow clone of `value`.\n   *\n   * **Note:** This method is loosely based on the\n   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n   * and supports cloning arrays, array buffers, booleans, date objects, maps,\n   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n   * arrays. The own enumerable properties of `arguments` objects are cloned\n   * as plain objects. An empty object is returned for uncloneable values such\n   * as error objects, functions, DOM nodes, and WeakMaps.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to clone.\n   * @returns {*} Returns the cloned value.\n   * @see _.cloneDeep\n   * @example\n   *\n   * var objects = [{ 'a': 1 }, { 'b': 2 }];\n   *\n   * var shallow = _.clone(objects);\n   * console.log(shallow[0] === objects[0]);\n   * // => true\n   */\n  function clone(value) {\n    if (!isObject(value)) {\n      return value;\n    }\n    return isArray(value) ? copyArray(value) : copyObject(value, nativeKeys(value));\n  }\n\n  /**\n   * Performs a\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * comparison between two values to determine if they are equivalent.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.eq(object, object);\n   * // => true\n   *\n   * _.eq(object, other);\n   * // => false\n   *\n   * _.eq('a', 'a');\n   * // => true\n   *\n   * _.eq('a', Object('a'));\n   * // => false\n   *\n   * _.eq(NaN, NaN);\n   * // => true\n   */\n  function eq(value, other) {\n    return value === other || (value !== value && other !== other);\n  }\n\n  /**\n   * Checks if `value` is likely an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   *  else `false`.\n   * @example\n   *\n   * _.isArguments(function() { return arguments; }());\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n      !propertyIsEnumerable.call(value, 'callee');\n  };\n\n  /**\n   * Checks if `value` is classified as an `Array` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n   * @example\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   *\n   * _.isArray(document.body.children);\n   * // => false\n   *\n   * _.isArray('abc');\n   * // => false\n   *\n   * _.isArray(_.noop);\n   * // => false\n   */\n  var isArray = Array.isArray;\n\n  /**\n   * Checks if `value` is array-like. A value is considered array-like if it's\n   * not a function and has a `value.length` that's an integer greater than or\n   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n   * @example\n   *\n   * _.isArrayLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLike(document.body.children);\n   * // => true\n   *\n   * _.isArrayLike('abc');\n   * // => true\n   *\n   * _.isArrayLike(_.noop);\n   * // => false\n   */\n  function isArrayLike(value) {\n    return value != null && isLength(value.length) && !isFunction(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a boolean primitive or object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n   * @example\n   *\n   * _.isBoolean(false);\n   * // => true\n   *\n   * _.isBoolean(null);\n   * // => false\n   */\n  function isBoolean(value) {\n    return value === true || value === false ||\n      (isObjectLike(value) && baseGetTag(value) == boolTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Date` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   * @example\n   *\n   * _.isDate(new Date);\n   * // => true\n   *\n   * _.isDate('Mon April 23 2012');\n   * // => false\n   */\n  var isDate = baseIsDate;\n\n  /**\n   * Checks if `value` is an empty object, collection, map, or set.\n   *\n   * Objects are considered empty if they have no own enumerable string keyed\n   * properties.\n   *\n   * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n   * jQuery-like collections are considered empty if they have a `length` of `0`.\n   * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty(null);\n   * // => true\n   *\n   * _.isEmpty(true);\n   * // => true\n   *\n   * _.isEmpty(1);\n   * // => true\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({ 'a': 1 });\n   * // => false\n   */\n  function isEmpty(value) {\n    if (isArrayLike(value) &&\n        (isArray(value) || isString(value) ||\n          isFunction(value.splice) || isArguments(value))) {\n      return !value.length;\n    }\n    return !nativeKeys(value).length;\n  }\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent.\n   *\n   * **Note:** This method supports comparing arrays, array buffers, booleans,\n   * date objects, error objects, maps, numbers, `Object` objects, regexes,\n   * sets, strings, symbols, and typed arrays. `Object` objects are compared\n   * by their own, not inherited, enumerable properties. Functions and DOM\n   * nodes are compared by strict equality, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.isEqual(object, other);\n   * // => true\n   *\n   * object === other;\n   * // => false\n   */\n  function isEqual(value, other) {\n    return baseIsEqual(value, other);\n  }\n\n  /**\n   * Checks if `value` is a finite primitive number.\n   *\n   * **Note:** This method is based on\n   * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n   * @example\n   *\n   * _.isFinite(3);\n   * // => true\n   *\n   * _.isFinite(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isFinite(Infinity);\n   * // => false\n   *\n   * _.isFinite('3');\n   * // => false\n   */\n  function isFinite(value) {\n    return typeof value == 'number' && nativeIsFinite(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Function` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   *\n   * _.isFunction(/abc/);\n   * // => false\n   */\n  function isFunction(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 9 which returns 'object' for typed arrays and other constructors.\n    var tag = baseGetTag(value);\n    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n  }\n\n  /**\n   * Checks if `value` is a valid array-like length.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n   * @example\n   *\n   * _.isLength(3);\n   * // => true\n   *\n   * _.isLength(Number.MIN_VALUE);\n   * // => false\n   *\n   * _.isLength(Infinity);\n   * // => false\n   *\n   * _.isLength('3');\n   * // => false\n   */\n  function isLength(value) {\n    return typeof value == 'number' &&\n      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n  }\n\n  /**\n   * Checks if `value` is the\n   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(_.noop);\n   * // => true\n   *\n   * _.isObject(null);\n   * // => false\n   */\n  function isObject(value) {\n    var type = typeof value;\n    return value != null && (type == 'object' || type == 'function');\n  }\n\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n  function isObjectLike(value) {\n    return value != null && typeof value == 'object';\n  }\n\n  /**\n   * Checks if `value` is `NaN`.\n   *\n   * **Note:** This method is based on\n   * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n   * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n   * `undefined` and other non-number values.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   * @example\n   *\n   * _.isNaN(NaN);\n   * // => true\n   *\n   * _.isNaN(new Number(NaN));\n   * // => true\n   *\n   * isNaN(undefined);\n   * // => true\n   *\n   * _.isNaN(undefined);\n   * // => false\n   */\n  function isNaN(value) {\n    // An `NaN` primitive is the only value that is not equal to itself.\n    // Perform the `toStringTag` check first to avoid errors with some\n    // ActiveX objects in IE.\n    return isNumber(value) && value != +value;\n  }\n\n  /**\n   * Checks if `value` is `null`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n   * @example\n   *\n   * _.isNull(null);\n   * // => true\n   *\n   * _.isNull(void 0);\n   * // => false\n   */\n  function isNull(value) {\n    return value === null;\n  }\n\n  /**\n   * Checks if `value` is classified as a `Number` primitive or object.\n   *\n   * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n   * classified as numbers, use the `_.isFinite` method.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n   * @example\n   *\n   * _.isNumber(3);\n   * // => true\n   *\n   * _.isNumber(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isNumber(Infinity);\n   * // => true\n   *\n   * _.isNumber('3');\n   * // => false\n   */\n  function isNumber(value) {\n    return typeof value == 'number' ||\n      (isObjectLike(value) && baseGetTag(value) == numberTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `RegExp` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   * @example\n   *\n   * _.isRegExp(/abc/);\n   * // => true\n   *\n   * _.isRegExp('/abc/');\n   * // => false\n   */\n  var isRegExp = baseIsRegExp;\n\n  /**\n   * Checks if `value` is classified as a `String` primitive or object.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('abc');\n   * // => true\n   *\n   * _.isString(1);\n   * // => false\n   */\n  function isString(value) {\n    return typeof value == 'string' ||\n      (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n  }\n\n  /**\n   * Checks if `value` is `undefined`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n   * @example\n   *\n   * _.isUndefined(void 0);\n   * // => true\n   *\n   * _.isUndefined(null);\n   * // => false\n   */\n  function isUndefined(value) {\n    return value === undefined;\n  }\n\n  /**\n   * Converts `value` to an array.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {Array} Returns the converted array.\n   * @example\n   *\n   * _.toArray({ 'a': 1, 'b': 2 });\n   * // => [1, 2]\n   *\n   * _.toArray('abc');\n   * // => ['a', 'b', 'c']\n   *\n   * _.toArray(1);\n   * // => []\n   *\n   * _.toArray(null);\n   * // => []\n   */\n  function toArray(value) {\n    if (!isArrayLike(value)) {\n      return values(value);\n    }\n    return value.length ? copyArray(value) : [];\n  }\n\n  /**\n   * Converts `value` to an integer.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {number} Returns the converted integer.\n   * @example\n   *\n   * _.toInteger(3.2);\n   * // => 3\n   *\n   * _.toInteger(Number.MIN_VALUE);\n   * // => 0\n   *\n   * _.toInteger(Infinity);\n   * // => 1.7976931348623157e+308\n   *\n   * _.toInteger('3.2');\n   * // => 3\n   */\n  var toInteger = Number;\n\n  /**\n   * Converts `value` to a number.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to process.\n   * @returns {number} Returns the number.\n   * @example\n   *\n   * _.toNumber(3.2);\n   * // => 3.2\n   *\n   * _.toNumber(Number.MIN_VALUE);\n   * // => 5e-324\n   *\n   * _.toNumber(Infinity);\n   * // => Infinity\n   *\n   * _.toNumber('3.2');\n   * // => 3.2\n   */\n  var toNumber = Number;\n\n  /**\n   * Converts `value` to a string. An empty string is returned for `null`\n   * and `undefined` values. The sign of `-0` is preserved.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   * @example\n   *\n   * _.toString(null);\n   * // => ''\n   *\n   * _.toString(-0);\n   * // => '-0'\n   *\n   * _.toString([1, 2, 3]);\n   * // => '1,2,3'\n   */\n  function toString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable string keyed properties of source objects to the\n   * destination object. Source objects are applied from left to right.\n   * Subsequent sources overwrite property assignments of previous sources.\n   *\n   * **Note:** This method mutates `object` and is loosely based on\n   * [`Object.assign`](https://mdn.io/Object/assign).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.10.0\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assignIn\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assign({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var assign = createAssigner(function(object, source) {\n    copyObject(source, nativeKeys(source), object);\n  });\n\n  /**\n   * This method is like `_.assign` except that it iterates over own and\n   * inherited source properties.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @alias extend\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assign\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n   */\n  var assignIn = createAssigner(function(object, source) {\n    copyObject(source, nativeKeysIn(source), object);\n  });\n\n  /**\n   * Creates an object that inherits from the `prototype` object. If a\n   * `properties` object is given, its own enumerable string keyed properties\n   * are assigned to the created object.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Object\n   * @param {Object} prototype The object to inherit from.\n   * @param {Object} [properties] The properties to assign to the object.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * function Circle() {\n   *   Shape.call(this);\n   * }\n   *\n   * Circle.prototype = _.create(Shape.prototype, {\n   *   'constructor': Circle\n   * });\n   *\n   * var circle = new Circle;\n   * circle instanceof Circle;\n   * // => true\n   *\n   * circle instanceof Shape;\n   * // => true\n   */\n  function create(prototype, properties) {\n    var result = baseCreate(prototype);\n    return properties == null ? result : assign(result, properties);\n  }\n\n  /**\n   * Assigns own and inherited enumerable string keyed properties of source\n   * objects to the destination object for all destination properties that\n   * resolve to `undefined`. Source objects are applied from left to right.\n   * Once a property is set, additional values of the same property are ignored.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.defaultsDeep\n   * @example\n   *\n   * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n   * // => { 'a': 1, 'b': 2 }\n   */\n  var defaults = baseRest(function(object, sources) {\n    object = Object(object);\n\n    var index = -1;\n    var length = sources.length;\n    var guard = length > 2 ? sources[2] : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      length = 1;\n    }\n\n    while (++index < length) {\n      var source = sources[index];\n      var props = keysIn(source);\n      var propsIndex = -1;\n      var propsLength = props.length;\n\n      while (++propsIndex < propsLength) {\n        var key = props[propsIndex];\n        var value = object[key];\n\n        if (value === undefined ||\n            (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n          object[key] = source[key];\n        }\n      }\n    }\n\n    return object;\n  });\n\n  /**\n   * Checks if `path` is a direct property of `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path to check.\n   * @returns {boolean} Returns `true` if `path` exists, else `false`.\n   * @example\n   *\n   * var object = { 'a': { 'b': 2 } };\n   * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n   *\n   * _.has(object, 'a');\n   * // => true\n   *\n   * _.has(object, 'a.b');\n   * // => true\n   *\n   * _.has(object, ['a', 'b']);\n   * // => true\n   *\n   * _.has(other, 'a');\n   * // => false\n   */\n  function has(object, path) {\n    return object != null && hasOwnProperty.call(object, path);\n  }\n\n  /**\n   * Creates an array of the own enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects. See the\n   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * for more details.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keys(new Foo);\n   * // => ['a', 'b'] (iteration order is not guaranteed)\n   *\n   * _.keys('hi');\n   * // => ['0', '1']\n   */\n  var keys = nativeKeys;\n\n  /**\n   * Creates an array of the own and inherited enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keysIn(new Foo);\n   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n   */\n  var keysIn = nativeKeysIn;\n\n  /**\n   * Creates an object composed of the picked `object` properties.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The source object.\n   * @param {...(string|string[])} [paths] The property paths to pick.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * var object = { 'a': 1, 'b': '2', 'c': 3 };\n   *\n   * _.pick(object, ['a', 'c']);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var pick = flatRest(function(object, paths) {\n    return object == null ? {} : basePick(object, paths);\n  });\n\n  /**\n   * This method is like `_.get` except that if the resolved value is a\n   * function it's invoked with the `this` binding of its parent object and\n   * its result is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path of the property to resolve.\n   * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n   * @returns {*} Returns the resolved value.\n   * @example\n   *\n   * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n   *\n   * _.result(object, 'a[0].b.c1');\n   * // => 3\n   *\n   * _.result(object, 'a[0].b.c2');\n   * // => 4\n   *\n   * _.result(object, 'a[0].b.c3', 'default');\n   * // => 'default'\n   *\n   * _.result(object, 'a[0].b.c3', _.constant('default'));\n   * // => 'default'\n   */\n  function result(object, path, defaultValue) {\n    var value = object == null ? undefined : object[path];\n    if (value === undefined) {\n      value = defaultValue;\n    }\n    return isFunction(value) ? value.call(object) : value;\n  }\n\n  /**\n   * Creates an array of the own enumerable string keyed property values of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property values.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.values(new Foo);\n   * // => [1, 2] (iteration order is not guaranteed)\n   *\n   * _.values('hi');\n   * // => ['h', 'i']\n   */\n  function values(object) {\n    return object == null ? [] : baseValues(object, keys(object));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n   * corresponding HTML entities.\n   *\n   * **Note:** No other characters are escaped. To escape additional\n   * characters use a third-party library like [_he_](https://mths.be/he).\n   *\n   * Though the \">\" character is escaped for symmetry, characters like\n   * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n   * unless they're part of a tag or unquoted attribute value. See\n   * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n   * (under \"semi-related fun fact\") for more details.\n   *\n   * When working with HTML you should always\n   * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n   * XSS vectors.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category String\n   * @param {string} [string=''] The string to escape.\n   * @returns {string} Returns the escaped string.\n   * @example\n   *\n   * _.escape('fred, barney, & pebbles');\n   * // => 'fred, barney, &amp; pebbles'\n   */\n  function escape(string) {\n    string = toString(string);\n    return (string && reHasUnescapedHtml.test(string))\n      ? string.replace(reUnescapedHtml, escapeHtmlChar)\n      : string;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * This method returns the first argument it receives.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   *\n   * console.log(_.identity(object) === object);\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Creates a function that invokes `func` with the arguments of the created\n   * function. If `func` is a property name, the created function returns the\n   * property value for a given element. If `func` is an array or object, the\n   * created function returns `true` for elements that contain the equivalent\n   * source properties, otherwise it returns `false`.\n   *\n   * @static\n   * @since 4.0.0\n   * @memberOf _\n   * @category Util\n   * @param {*} [func=_.identity] The value to convert to a callback.\n   * @returns {Function} Returns the callback.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n   * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, _.iteratee(['user', 'fred']));\n   * // => [{ 'user': 'fred', 'age': 40 }]\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, _.iteratee('user'));\n   * // => ['barney', 'fred']\n   *\n   * // Create custom iteratee shorthands.\n   * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n   *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n   *     return func.test(string);\n   *   };\n   * });\n   *\n   * _.filter(['abc', 'def'], /ef/);\n   * // => ['def']\n   */\n  var iteratee = baseIteratee;\n\n  /**\n   * Creates a function that performs a partial deep comparison between a given\n   * object and `source`, returning `true` if the given object has equivalent\n   * property values, else `false`.\n   *\n   * **Note:** The created function is equivalent to `_.isMatch` with `source`\n   * partially applied.\n   *\n   * Partial comparisons will match empty array and empty object `source`\n   * values against any array or object value, respectively. See `_.isEqual`\n   * for a list of supported value comparisons.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Util\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   * @example\n   *\n   * var objects = [\n   *   { 'a': 1, 'b': 2, 'c': 3 },\n   *   { 'a': 4, 'b': 5, 'c': 6 }\n   * ];\n   *\n   * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n   * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n   */\n  function matches(source) {\n    return baseMatches(assign({}, source));\n  }\n\n  /**\n   * Adds all own enumerable string keyed function properties of a source\n   * object to the destination object. If `object` is a function, then methods\n   * are added to its prototype as well.\n   *\n   * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n   * avoid conflicts caused by modifying the original.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {Function|Object} [object=lodash] The destination object.\n   * @param {Object} source The object of functions to add.\n   * @param {Object} [options={}] The options object.\n   * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n   * @returns {Function|Object} Returns `object`.\n   * @example\n   *\n   * function vowels(string) {\n   *   return _.filter(string, function(v) {\n   *     return /[aeiou]/i.test(v);\n   *   });\n   * }\n   *\n   * _.mixin({ 'vowels': vowels });\n   * _.vowels('fred');\n   * // => ['e']\n   *\n   * _('fred').vowels().value();\n   * // => ['e']\n   *\n   * _.mixin({ 'vowels': vowels }, { 'chain': false });\n   * _('fred').vowels();\n   * // => ['e']\n   */\n  function mixin(object, source, options) {\n    var props = keys(source),\n        methodNames = baseFunctions(source, props);\n\n    if (options == null &&\n        !(isObject(source) && (methodNames.length || !props.length))) {\n      options = source;\n      source = object;\n      object = this;\n      methodNames = baseFunctions(source, keys(source));\n    }\n    var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n        isFunc = isFunction(object);\n\n    baseEach(methodNames, function(methodName) {\n      var func = source[methodName];\n      object[methodName] = func;\n      if (isFunc) {\n        object.prototype[methodName] = function() {\n          var chainAll = this.__chain__;\n          if (chain || chainAll) {\n            var result = object(this.__wrapped__),\n                actions = result.__actions__ = copyArray(this.__actions__);\n\n            actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n            result.__chain__ = chainAll;\n            return result;\n          }\n          return func.apply(object, arrayPush([this.value()], arguments));\n        };\n      }\n    });\n\n    return object;\n  }\n\n  /**\n   * Reverts the `_` variable to its previous value and returns a reference to\n   * the `lodash` function.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @returns {Function} Returns the `lodash` function.\n   * @example\n   *\n   * var lodash = _.noConflict();\n   */\n  function noConflict() {\n    if (root._ === this) {\n      root._ = oldDash;\n    }\n    return this;\n  }\n\n  /**\n   * This method returns `undefined`.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Util\n   * @example\n   *\n   * _.times(2, _.noop);\n   * // => [undefined, undefined]\n   */\n  function noop() {\n    // No operation performed.\n  }\n\n  /**\n   * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {string} [prefix=''] The value to prefix the ID with.\n   * @returns {string} Returns the unique ID.\n   * @example\n   *\n   * _.uniqueId('contact_');\n   * // => 'contact_104'\n   *\n   * _.uniqueId();\n   * // => '105'\n   */\n  function uniqueId(prefix) {\n    var id = ++idCounter;\n    return toString(prefix) + id;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Computes the maximum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the maximum value.\n   * @example\n   *\n   * _.max([4, 2, 8, 6]);\n   * // => 8\n   *\n   * _.max([]);\n   * // => undefined\n   */\n  function max(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseGt)\n      : undefined;\n  }\n\n  /**\n   * Computes the minimum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the minimum value.\n   * @example\n   *\n   * _.min([4, 2, 8, 6]);\n   * // => 2\n   *\n   * _.min([]);\n   * // => undefined\n   */\n  function min(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseLt)\n      : undefined;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return wrapped values in chain sequences.\n  lodash.assignIn = assignIn;\n  lodash.before = before;\n  lodash.bind = bind;\n  lodash.chain = chain;\n  lodash.compact = compact;\n  lodash.concat = concat;\n  lodash.create = create;\n  lodash.defaults = defaults;\n  lodash.defer = defer;\n  lodash.delay = delay;\n  lodash.filter = filter;\n  lodash.flatten = flatten;\n  lodash.flattenDeep = flattenDeep;\n  lodash.iteratee = iteratee;\n  lodash.keys = keys;\n  lodash.map = map;\n  lodash.matches = matches;\n  lodash.mixin = mixin;\n  lodash.negate = negate;\n  lodash.once = once;\n  lodash.pick = pick;\n  lodash.slice = slice;\n  lodash.sortBy = sortBy;\n  lodash.tap = tap;\n  lodash.thru = thru;\n  lodash.toArray = toArray;\n  lodash.values = values;\n\n  // Add aliases.\n  lodash.extend = assignIn;\n\n  // Add methods to `lodash.prototype`.\n  mixin(lodash, lodash);\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return unwrapped values in chain sequences.\n  lodash.clone = clone;\n  lodash.escape = escape;\n  lodash.every = every;\n  lodash.find = find;\n  lodash.forEach = forEach;\n  lodash.has = has;\n  lodash.head = head;\n  lodash.identity = identity;\n  lodash.indexOf = indexOf;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isBoolean = isBoolean;\n  lodash.isDate = isDate;\n  lodash.isEmpty = isEmpty;\n  lodash.isEqual = isEqual;\n  lodash.isFinite = isFinite;\n  lodash.isFunction = isFunction;\n  lodash.isNaN = isNaN;\n  lodash.isNull = isNull;\n  lodash.isNumber = isNumber;\n  lodash.isObject = isObject;\n  lodash.isRegExp = isRegExp;\n  lodash.isString = isString;\n  lodash.isUndefined = isUndefined;\n  lodash.last = last;\n  lodash.max = max;\n  lodash.min = min;\n  lodash.noConflict = noConflict;\n  lodash.noop = noop;\n  lodash.reduce = reduce;\n  lodash.result = result;\n  lodash.size = size;\n  lodash.some = some;\n  lodash.uniqueId = uniqueId;\n\n  // Add aliases.\n  lodash.each = forEach;\n  lodash.first = head;\n\n  mixin(lodash, (function() {\n    var source = {};\n    baseForOwn(lodash, function(func, methodName) {\n      if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n        source[methodName] = func;\n      }\n    });\n    return source;\n  }()), { 'chain': false });\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type {string}\n   */\n  lodash.VERSION = VERSION;\n\n  // Add `Array` methods to `lodash.prototype`.\n  baseEach(['pop', 'join', 'replace', 'reverse', 'split', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n    var func = (/^(?:replace|split)$/.test(methodName) ? String.prototype : arrayProto)[methodName],\n        chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n        retUnwrapped = /^(?:pop|join|replace|shift)$/.test(methodName);\n\n    lodash.prototype[methodName] = function() {\n      var args = arguments;\n      if (retUnwrapped && !this.__chain__) {\n        var value = this.value();\n        return func.apply(isArray(value) ? value : [], args);\n      }\n      return this[chainName](function(value) {\n        return func.apply(isArray(value) ? value : [], args);\n      });\n    };\n  });\n\n  // Add chain sequence methods to the `lodash` wrapper.\n  lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n  /*--------------------------------------------------------------------------*/\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = lodash;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return lodash;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = lodash)._ = lodash;\n    // Export for CommonJS support.\n    freeExports._ = lodash;\n  }\n  else {\n    // Export to the global object.\n    root._ = lodash;\n  }\n}.call(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],43:[function(require,module,exports){\nmodule.exports = MultiStream\n\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\ninherits(MultiStream, stream.Readable)\n\nfunction MultiStream (streams, opts) {\n  var self = this\n  if (!(self instanceof MultiStream)) return new MultiStream(streams, opts)\n  stream.Readable.call(self, opts)\n\n  self.destroyed = false\n\n  self._drained = false\n  self._forwarding = false\n  self._current = null\n  self._toStreams2 = (opts && opts.objectMode) ? toStreams2Obj : toStreams2Buf\n\n  if (typeof streams === 'function') {\n    self._queue = streams\n  } else {\n    self._queue = streams.map(self._toStreams2)\n    self._queue.forEach(function (stream) {\n      if (typeof stream !== 'function') self._attachErrorListener(stream)\n    })\n  }\n\n  self._next()\n}\n\nMultiStream.obj = function (streams) {\n  return new MultiStream(streams, { objectMode: true, highWaterMark: 16 })\n}\n\nMultiStream.prototype._read = function () {\n  this._drained = true\n  this._forward()\n}\n\nMultiStream.prototype._forward = function () {\n  if (this._forwarding || !this._drained || !this._current) return\n  this._forwarding = true\n\n  var chunk\n  while ((chunk = this._current.read()) !== null) {\n    this._drained = this.push(chunk)\n  }\n\n  this._forwarding = false\n}\n\nMultiStream.prototype.destroy = function (err) {\n  if (this.destroyed) return\n  this.destroyed = true\n\n  if (this._current && this._current.destroy) this._current.destroy()\n  if (typeof this._queue !== 'function') {\n    this._queue.forEach(function (stream) {\n      if (stream.destroy) stream.destroy()\n    })\n  }\n\n  if (err) this.emit('error', err)\n  this.emit('close')\n}\n\nMultiStream.prototype._next = function () {\n  var self = this\n  self._current = null\n\n  if (typeof self._queue === 'function') {\n    self._queue(function (err, stream) {\n      if (err) return self.destroy(err)\n      stream = self._toStreams2(stream)\n      self._attachErrorListener(stream)\n      self._gotNextStream(stream)\n    })\n  } else {\n    var stream = self._queue.shift()\n    if (typeof stream === 'function') {\n      stream = self._toStreams2(stream())\n      self._attachErrorListener(stream)\n    }\n    self._gotNextStream(stream)\n  }\n}\n\nMultiStream.prototype._gotNextStream = function (stream) {\n  var self = this\n\n  if (!stream) {\n    self.push(null)\n    self.destroy()\n    return\n  }\n\n  self._current = stream\n  self._forward()\n\n  stream.on('readable', onReadable)\n  stream.once('end', onEnd)\n  stream.once('close', onClose)\n\n  function onReadable () {\n    self._forward()\n  }\n\n  function onClose () {\n    if (!stream._readableState.ended) {\n      self.destroy()\n    }\n  }\n\n  function onEnd () {\n    self._current = null\n    stream.removeListener('readable', onReadable)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('close', onClose)\n    self._next()\n  }\n}\n\nMultiStream.prototype._attachErrorListener = function (stream) {\n  var self = this\n  if (!stream) return\n\n  stream.once('error', onError)\n\n  function onError (err) {\n    stream.removeListener('error', onError)\n    self.destroy(err)\n  }\n}\n\nfunction toStreams2Obj (s) {\n  return toStreams2(s, {objectMode: true, highWaterMark: 16})\n}\n\nfunction toStreams2Buf (s) {\n  return toStreams2(s)\n}\n\nfunction toStreams2 (s, opts) {\n  if (!s || typeof s === 'function' || s._readableState) return s\n\n  var wrap = new stream.Readable(opts).wrap(s)\n  if (s.destroy) {\n    wrap.destroy = s.destroy.bind(s)\n  }\n  return wrap\n}\n\n},{\"inherits\":38,\"readable-stream\":61}],44:[function(require,module,exports){\n(function (process){\n'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n}).call(this,require('_process'))\n\n},{\"_process\":45}],45:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],46:[function(require,module,exports){\n'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._40 = 0;\n  this._65 = 0;\n  this._55 = null;\n  this._72 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._37 = null;\nPromise._87 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._65 === 3) {\n    self = self._55;\n  }\n  if (Promise._37) {\n    Promise._37(self);\n  }\n  if (self._65 === 0) {\n    if (self._40 === 0) {\n      self._40 = 1;\n      self._72 = deferred;\n      return;\n    }\n    if (self._40 === 1) {\n      self._40 = 2;\n      self._72 = [self._72, deferred];\n      return;\n    }\n    self._72.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._65 === 1) {\n        resolve(deferred.promise, self._55);\n      } else {\n        reject(deferred.promise, self._55);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._55);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._65 = 3;\n      self._55 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._65 = 1;\n  self._55 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._65 = 2;\n  self._55 = newValue;\n  if (Promise._87) {\n    Promise._87(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._40 === 1) {\n    handle(self, self._72);\n    self._72 = null;\n  }\n  if (self._40 === 2) {\n    for (var i = 0; i < self._72.length; i++) {\n      handle(self, self._72[i]);\n    }\n    self._72 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n},{\"asap/raw\":27}],47:[function(require,module,exports){\n'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._65 = 1;\n  p._55 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._65 === 3) {\n            val = val._55;\n          }\n          if (val._65 === 1) return res(i, val._55);\n          if (val._65 === 2) reject(val._55);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n},{\"./core.js\":46}],48:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],49:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],50:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":48,\"./encode\":49}],51:[function(require,module,exports){\nmodule.exports = require('./lib/_stream_duplex.js');\n\n},{\"./lib/_stream_duplex.js\":52}],52:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};\n},{\"./_stream_readable\":54,\"./_stream_writable\":56,\"core-util-is\":31,\"inherits\":38,\"process-nextick-args\":44}],53:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n},{\"./_stream_transform\":55,\"core-util-is\":31,\"inherits\":38}],54:[function(require,module,exports){\n(function (process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./_stream_duplex\":52,\"./internal/streams/BufferList\":57,\"./internal/streams/destroy\":58,\"./internal/streams/stream\":59,\"_process\":45,\"core-util-is\":31,\"events\":36,\"inherits\":38,\"isarray\":40,\"process-nextick-args\":44,\"safe-buffer\":64,\"string_decoder/\":67,\"util\":29}],55:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n},{\"./_stream_duplex\":52,\"core-util-is\":31,\"inherits\":38}],56:[function(require,module,exports){\n(function (process,global,setImmediate){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"timers\").setImmediate)\n\n},{\"./_stream_duplex\":52,\"./internal/streams/destroy\":58,\"./internal/streams/stream\":59,\"_process\":45,\"core-util-is\":31,\"inherits\":38,\"process-nextick-args\":44,\"safe-buffer\":64,\"timers\":68,\"util-deprecate\":69}],57:[function(require,module,exports){\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}\n},{\"safe-buffer\":64,\"util\":29}],58:[function(require,module,exports){\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};\n},{\"process-nextick-args\":44}],59:[function(require,module,exports){\nmodule.exports = require('events').EventEmitter;\n\n},{\"events\":36}],60:[function(require,module,exports){\nmodule.exports = require('./readable').PassThrough\n\n},{\"./readable\":61}],61:[function(require,module,exports){\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n\n},{\"./lib/_stream_duplex.js\":52,\"./lib/_stream_passthrough.js\":53,\"./lib/_stream_readable.js\":54,\"./lib/_stream_transform.js\":55,\"./lib/_stream_writable.js\":56}],62:[function(require,module,exports){\nmodule.exports = require('./readable').Transform\n\n},{\"./readable\":61}],63:[function(require,module,exports){\nmodule.exports = require('./lib/_stream_writable.js');\n\n},{\"./lib/_stream_writable.js\":56}],64:[function(require,module,exports){\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n},{\"buffer\":30}],65:[function(require,module,exports){\n(function (Buffer){\n;(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":30,\"stream\":66,\"string_decoder\":67}],66:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n},{\"events\":36,\"inherits\":38,\"readable-stream/duplex.js\":51,\"readable-stream/passthrough.js\":60,\"readable-stream/readable.js\":61,\"readable-stream/transform.js\":62,\"readable-stream/writable.js\":63}],67:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n},{\"safe-buffer\":64}],68:[function(require,module,exports){\n(function (setImmediate,clearImmediate){\nvar nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n}).call(this,require(\"timers\").setImmediate,require(\"timers\").clearImmediate)\n\n},{\"process/browser.js\":45,\"timers\":68}],69:[function(require,module,exports){\n(function (global){\n\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],70:[function(require,module,exports){\nmodule.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n},{}],71:[function(require,module,exports){\n(function (process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./support/isBuffer\":70,\"_process\":45,\"inherits\":38}],72:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  exports.stripBOM = function(str) {\n    if (str[0] === '\\uFEFF') {\n      return str.substring(1);\n    } else {\n      return str;\n    }\n  };\n\n}).call(this);\n\n},{}],73:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, escapeCDATA, requiresCDATA, wrapCDATA,\n    hasProp = {}.hasOwnProperty;\n\n  builder = require('xmlbuilder');\n\n  defaults = require('./defaults').defaults;\n\n  requiresCDATA = function(entry) {\n    return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\n  };\n\n  wrapCDATA = function(entry) {\n    return \"<![CDATA[\" + (escapeCDATA(entry)) + \"]]>\";\n  };\n\n  escapeCDATA = function(entry) {\n    return entry.replace(']]>', ']]]]><![CDATA[>');\n  };\n\n  exports.Builder = (function() {\n    function Builder(opts) {\n      var key, ref, value;\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n    }\n\n    Builder.prototype.buildObject = function(rootObj) {\n      var attrkey, charkey, render, rootElement, rootName;\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      if ((Object.keys(rootObj).length === 1) && (this.options.rootName === defaults['0.2'].rootName)) {\n        rootName = Object.keys(rootObj)[0];\n        rootObj = rootObj[rootName];\n      } else {\n        rootName = this.options.rootName;\n      }\n      render = (function(_this) {\n        return function(element, obj) {\n          var attr, child, entry, index, key, value;\n          if (typeof obj !== 'object') {\n            if (_this.options.cdata && requiresCDATA(obj)) {\n              element.raw(wrapCDATA(obj));\n            } else {\n              element.txt(obj);\n            }\n          } else if (Array.isArray(obj)) {\n            for (index in obj) {\n              if (!hasProp.call(obj, index)) continue;\n              child = obj[index];\n              for (key in child) {\n                entry = child[key];\n                element = render(element.ele(key), entry).up();\n              }\n            }\n          } else {\n            for (key in obj) {\n              if (!hasProp.call(obj, key)) continue;\n              child = obj[key];\n              if (key === attrkey) {\n                if (typeof child === \"object\") {\n                  for (attr in child) {\n                    value = child[attr];\n                    element = element.att(attr, value);\n                  }\n                }\n              } else if (key === charkey) {\n                if (_this.options.cdata && requiresCDATA(child)) {\n                  element = element.raw(wrapCDATA(child));\n                } else {\n                  element = element.txt(child);\n                }\n              } else if (Array.isArray(child)) {\n                for (index in child) {\n                  if (!hasProp.call(child, index)) continue;\n                  entry = child[index];\n                  if (typeof entry === 'string') {\n                    if (_this.options.cdata && requiresCDATA(entry)) {\n                      element = element.ele(key).raw(wrapCDATA(entry)).up();\n                    } else {\n                      element = element.ele(key, entry).up();\n                    }\n                  } else {\n                    element = render(element.ele(key), entry).up();\n                  }\n                }\n              } else if (typeof child === \"object\") {\n                element = render(element.ele(key), child).up();\n              } else {\n                if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\n                  element = element.ele(key).raw(wrapCDATA(child)).up();\n                } else {\n                  if (child == null) {\n                    child = '';\n                  }\n                  element = element.ele(key, child.toString()).up();\n                }\n              }\n            }\n          }\n          return element;\n        };\n      })(this);\n      rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\n        headless: this.options.headless,\n        allowSurrogateChars: this.options.allowSurrogateChars\n      });\n      return render(rootElement, rootObj).end(this.options.renderOpts);\n    };\n\n    return Builder;\n\n  })();\n\n}).call(this);\n\n},{\"./defaults\":74,\"xmlbuilder\":99}],74:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  exports.defaults = {\n    \"0.1\": {\n      explicitCharkey: false,\n      trim: true,\n      normalize: true,\n      normalizeTags: false,\n      attrkey: \"@\",\n      charkey: \"#\",\n      explicitArray: false,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: false,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '@@',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      emptyTag: ''\n    },\n    \"0.2\": {\n      explicitCharkey: false,\n      trim: false,\n      normalize: false,\n      normalizeTags: false,\n      attrkey: \"$\",\n      charkey: \"_\",\n      explicitArray: true,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: true,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      preserveChildrenOrder: false,\n      childkey: '$$',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      rootName: 'root',\n      xmldec: {\n        'version': '1.0',\n        'encoding': 'UTF-8',\n        'standalone': true\n      },\n      doctype: null,\n      renderOpts: {\n        'pretty': true,\n        'indent': '  ',\n        'newline': '\\n'\n      },\n      headless: false,\n      chunkSize: 10000,\n      emptyTag: '',\n      cdata: false\n    }\n  };\n\n}).call(this);\n\n},{}],75:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var bom, defaults, events, isEmpty, processItem, processors, sax, setImmediate,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  sax = require('sax');\n\n  events = require('events');\n\n  bom = require('./bom');\n\n  processors = require('./processors');\n\n  setImmediate = require('timers').setImmediate;\n\n  defaults = require('./defaults').defaults;\n\n  isEmpty = function(thing) {\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\n  };\n\n  processItem = function(processors, item, key) {\n    var i, len, process;\n    for (i = 0, len = processors.length; i < len; i++) {\n      process = processors[i];\n      item = process(item, key);\n    }\n    return item;\n  };\n\n  exports.Parser = (function(superClass) {\n    extend(Parser, superClass);\n\n    function Parser(opts) {\n      this.parseString = bind(this.parseString, this);\n      this.reset = bind(this.reset, this);\n      this.assignOrPush = bind(this.assignOrPush, this);\n      this.processAsync = bind(this.processAsync, this);\n      var key, ref, value;\n      if (!(this instanceof exports.Parser)) {\n        return new exports.Parser(opts);\n      }\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n      if (this.options.normalizeTags) {\n        if (!this.options.tagNameProcessors) {\n          this.options.tagNameProcessors = [];\n        }\n        this.options.tagNameProcessors.unshift(processors.normalize);\n      }\n      this.reset();\n    }\n\n    Parser.prototype.processAsync = function() {\n      var chunk, err;\n      try {\n        if (this.remaining.length <= this.options.chunkSize) {\n          chunk = this.remaining;\n          this.remaining = '';\n          this.saxParser = this.saxParser.write(chunk);\n          return this.saxParser.close();\n        } else {\n          chunk = this.remaining.substr(0, this.options.chunkSize);\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n          this.saxParser = this.saxParser.write(chunk);\n          return setImmediate(this.processAsync);\n        }\n      } catch (error1) {\n        err = error1;\n        if (!this.saxParser.errThrown) {\n          this.saxParser.errThrown = true;\n          return this.emit(err);\n        }\n      }\n    };\n\n    Parser.prototype.assignOrPush = function(obj, key, newValue) {\n      if (!(key in obj)) {\n        if (!this.options.explicitArray) {\n          return obj[key] = newValue;\n        } else {\n          return obj[key] = [newValue];\n        }\n      } else {\n        if (!(obj[key] instanceof Array)) {\n          obj[key] = [obj[key]];\n        }\n        return obj[key].push(newValue);\n      }\n    };\n\n    Parser.prototype.reset = function() {\n      var attrkey, charkey, ontext, stack;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(this.options.strict, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      this.saxParser.errThrown = false;\n      this.saxParser.onerror = (function(_this) {\n        return function(error) {\n          _this.saxParser.resume();\n          if (!_this.saxParser.errThrown) {\n            _this.saxParser.errThrown = true;\n            return _this.emit(\"error\", error);\n          }\n        };\n      })(this);\n      this.saxParser.onend = (function(_this) {\n        return function() {\n          if (!_this.saxParser.ended) {\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      this.saxParser.ended = false;\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      this.saxParser.onopentag = (function(_this) {\n        return function(node) {\n          var key, newValue, obj, processedKey, ref;\n          obj = {};\n          obj[charkey] = \"\";\n          if (!_this.options.ignoreAttrs) {\n            ref = node.attributes;\n            for (key in ref) {\n              if (!hasProp.call(ref, key)) continue;\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                obj[attrkey] = {};\n              }\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n              if (_this.options.mergeAttrs) {\n                _this.assignOrPush(obj, processedKey, newValue);\n              } else {\n                obj[attrkey][processedKey] = newValue;\n              }\n            }\n          }\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n          if (_this.options.xmlns) {\n            obj[_this.options.xmlnskey] = {\n              uri: node.uri,\n              local: node.local\n            };\n          }\n          return stack.push(obj);\n        };\n      })(this);\n      this.saxParser.onclosetag = (function(_this) {\n        return function() {\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n          obj = stack.pop();\n          nodeName = obj[\"#name\"];\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n            delete obj[\"#name\"];\n          }\n          if (obj.cdata === true) {\n            cdata = obj.cdata;\n            delete obj.cdata;\n          }\n          s = stack[stack.length - 1];\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\n            emptyStr = obj[charkey];\n            delete obj[charkey];\n          } else {\n            if (_this.options.trim) {\n              obj[charkey] = obj[charkey].trim();\n            }\n            if (_this.options.normalize) {\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n            }\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n              obj = obj[charkey];\n            }\n          }\n          if (isEmpty(obj)) {\n            obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n          }\n          if (_this.options.validator != null) {\n            xpath = \"/\" + ((function() {\n              var i, len, results;\n              results = [];\n              for (i = 0, len = stack.length; i < len; i++) {\n                node = stack[i];\n                results.push(node[\"#name\"]);\n              }\n              return results;\n            })()).concat(nodeName).join(\"/\");\n            (function() {\n              var err;\n              try {\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n              } catch (error1) {\n                err = error1;\n                return _this.emit(\"error\", err);\n              }\n            })();\n          }\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n            if (!_this.options.preserveChildrenOrder) {\n              node = {};\n              if (_this.options.attrkey in obj) {\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\n                delete obj[_this.options.attrkey];\n              }\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                node[_this.options.charkey] = obj[_this.options.charkey];\n                delete obj[_this.options.charkey];\n              }\n              if (Object.getOwnPropertyNames(obj).length > 0) {\n                node[_this.options.childkey] = obj;\n              }\n              obj = node;\n            } else if (s) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              objClone = {};\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                objClone[key] = obj[key];\n              }\n              s[_this.options.childkey].push(objClone);\n              delete obj[\"#name\"];\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n          }\n          if (stack.length > 0) {\n            return _this.assignOrPush(s, nodeName, obj);\n          } else {\n            if (_this.options.explicitRoot) {\n              old = obj;\n              obj = {};\n              obj[nodeName] = old;\n            }\n            _this.resultObject = obj;\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      ontext = (function(_this) {\n        return function(text) {\n          var charChild, s;\n          s = stack[stack.length - 1];\n          if (s) {\n            s[charkey] += text;\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              charChild = {\n                '#name': '__text__'\n              };\n              charChild[charkey] = text;\n              if (_this.options.normalize) {\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n              s[_this.options.childkey].push(charChild);\n            }\n            return s;\n          }\n        };\n      })(this);\n      this.saxParser.ontext = ontext;\n      return this.saxParser.oncdata = (function(_this) {\n        return function(text) {\n          var s;\n          s = ontext(text);\n          if (s) {\n            return s.cdata = true;\n          }\n        };\n      })(this);\n    };\n\n    Parser.prototype.parseString = function(str, cb) {\n      var err;\n      if ((cb != null) && typeof cb === \"function\") {\n        this.on(\"end\", function(result) {\n          this.reset();\n          return cb(null, result);\n        });\n        this.on(\"error\", function(err) {\n          this.reset();\n          return cb(err);\n        });\n      }\n      try {\n        str = str.toString();\n        if (str.trim() === '') {\n          this.emit(\"end\", null);\n          return true;\n        }\n        str = bom.stripBOM(str);\n        if (this.options.async) {\n          this.remaining = str;\n          setImmediate(this.processAsync);\n          return this.saxParser;\n        }\n        return this.saxParser.write(str).close();\n      } catch (error1) {\n        err = error1;\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n          this.emit('error', err);\n          return this.saxParser.errThrown = true;\n        } else if (this.saxParser.ended) {\n          throw err;\n        }\n      }\n    };\n\n    return Parser;\n\n  })(events.EventEmitter);\n\n  exports.parseString = function(str, a, b) {\n    var cb, options, parser;\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n      options = {};\n    }\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n\n}).call(this);\n\n},{\"./bom\":72,\"./defaults\":74,\"./processors\":76,\"events\":36,\"sax\":65,\"timers\":68}],76:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var prefixMatch;\n\n  prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n  exports.normalize = function(str) {\n    return str.toLowerCase();\n  };\n\n  exports.firstCharLowerCase = function(str) {\n    return str.charAt(0).toLowerCase() + str.slice(1);\n  };\n\n  exports.stripPrefix = function(str) {\n    return str.replace(prefixMatch, '');\n  };\n\n  exports.parseNumbers = function(str) {\n    if (!isNaN(str)) {\n      str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\n    }\n    return str;\n  };\n\n  exports.parseBooleans = function(str) {\n    if (/^(?:true|false)$/i.test(str)) {\n      str = str.toLowerCase() === 'true';\n    }\n    return str;\n  };\n\n}).call(this);\n\n},{}],77:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, parser, processors,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  defaults = require('./defaults');\n\n  builder = require('./builder');\n\n  parser = require('./parser');\n\n  processors = require('./processors');\n\n  exports.defaults = defaults.defaults;\n\n  exports.processors = processors;\n\n  exports.ValidationError = (function(superClass) {\n    extend(ValidationError, superClass);\n\n    function ValidationError(message) {\n      this.message = message;\n    }\n\n    return ValidationError;\n\n  })(Error);\n\n  exports.Builder = builder.Builder;\n\n  exports.Parser = parser.Parser;\n\n  exports.parseString = parser.parseString;\n\n}).call(this);\n\n},{\"./builder\":73,\"./defaults\":74,\"./parser\":75,\"./processors\":76}],78:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var assign, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    slice = [].slice,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function() {\n    var i, key, len, source, sources, target;\n    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n}).call(this);\n\n},{}],79:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute;\n\n  module.exports = XMLAttribute = (function() {\n    function XMLAttribute(parent, name, value) {\n      this.options = parent.options;\n      this.stringify = parent.stringify;\n      if (name == null) {\n        throw new Error(\"Missing attribute name of element \" + parent.name);\n      }\n      if (value == null) {\n        throw new Error(\"Missing attribute value for attribute \" + name + \" of element \" + parent.name);\n      }\n      this.name = this.stringify.attName(name);\n      this.value = this.stringify.attValue(value);\n    }\n\n    XMLAttribute.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLAttribute.prototype.toString = function(options) {\n      return this.options.writer.set(options).attribute(this);\n    };\n\n    return XMLAttribute;\n\n  })();\n\n}).call(this);\n\n},{}],80:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLCData = (function(superClass) {\n    extend(XMLCData, superClass);\n\n    function XMLCData(parent, text) {\n      XMLCData.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text\");\n      }\n      this.text = this.stringify.cdata(text);\n    }\n\n    XMLCData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCData.prototype.toString = function(options) {\n      return this.options.writer.set(options).cdata(this);\n    };\n\n    return XMLCData;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":91}],81:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLComment, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLComment = (function(superClass) {\n    extend(XMLComment, superClass);\n\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text\");\n      }\n      this.text = this.stringify.comment(text);\n    }\n\n    XMLComment.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLComment.prototype.toString = function(options) {\n      return this.options.writer.set(options).comment(this);\n    };\n\n    return XMLComment;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":91}],82:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDAttList, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDAttList = (function(superClass) {\n    extend(XMLDTDAttList, superClass);\n\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name\");\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type\");\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default\");\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT\");\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT\");\n      }\n      this.elementName = this.stringify.eleName(elementName);\n      this.attributeName = this.stringify.attName(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdAttList(this);\n    };\n\n    return XMLDTDAttList;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":91}],83:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDElement, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDElement = (function(superClass) {\n    extend(XMLDTDElement, superClass);\n\n    function XMLDTDElement(parent, name, value) {\n      XMLDTDElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.eleName(name);\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    XMLDTDElement.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdElement(this);\n    };\n\n    return XMLDTDElement;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":91}],84:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDEntity, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDEntity = (function(superClass) {\n    extend(XMLDTDEntity, superClass);\n\n    function XMLDTDEntity(parent, pe, name, value) {\n      XMLDTDEntity.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing entity name\");\n      }\n      if (value == null) {\n        throw new Error(\"Missing entity value\");\n      }\n      this.pe = !!pe;\n      this.name = this.stringify.eleName(name);\n      if (!isObject(value)) {\n        this.value = this.stringify.dtdEntityValue(value);\n      } else {\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public and/or system identifiers are required for an external entity\");\n        }\n        if (value.pubID && !value.sysID) {\n          throw new Error(\"System identifier is required for a public external entity\");\n        }\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n        if (value.nData != null) {\n          this.nData = this.stringify.dtdNData(value.nData);\n        }\n        if (this.pe && this.nData) {\n          throw new Error(\"Notation declaration is not allowed in a parameter entity\");\n        }\n      }\n    }\n\n    XMLDTDEntity.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdEntity(this);\n    };\n\n    return XMLDTDEntity;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./Utility\":78,\"./XMLNode\":91}],85:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDNotation, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDNotation = (function(superClass) {\n    extend(XMLDTDNotation, superClass);\n\n    function XMLDTDNotation(parent, name, value) {\n      XMLDTDNotation.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing notation name\");\n      }\n      if (!value.pubID && !value.sysID) {\n        throw new Error(\"Public or system identifiers are required for an external entity\");\n      }\n      this.name = this.stringify.eleName(name);\n      if (value.pubID != null) {\n        this.pubID = this.stringify.dtdPubID(value.pubID);\n      }\n      if (value.sysID != null) {\n        this.sysID = this.stringify.dtdSysID(value.sysID);\n      }\n    }\n\n    XMLDTDNotation.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdNotation(this);\n    };\n\n    return XMLDTDNotation;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":91}],86:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDeclaration, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDeclaration = (function(superClass) {\n    extend(XMLDeclaration, superClass);\n\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var ref;\n      XMLDeclaration.__super__.constructor.call(this, parent);\n      if (isObject(version)) {\n        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    XMLDeclaration.prototype.toString = function(options) {\n      return this.options.writer.set(options).declaration(this);\n    };\n\n    return XMLDeclaration;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./Utility\":78,\"./XMLNode\":91}],87:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  module.exports = XMLDocType = (function(superClass) {\n    extend(XMLDocType, superClass);\n\n    function XMLDocType(parent, pubID, sysID) {\n      var ref, ref1;\n      XMLDocType.__super__.constructor.call(this, parent);\n      this.documentObject = parent;\n      if (isObject(pubID)) {\n        ref = pubID, pubID = ref.pubID, sysID = ref.sysID;\n      }\n      if (sysID == null) {\n        ref1 = [pubID, sysID], sysID = ref1[0], pubID = ref1[1];\n      }\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n\n    XMLDocType.prototype.element = function(name, value) {\n      var child;\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var child;\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.entity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.pEntity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.notation = function(name, value) {\n      var child;\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.toString = function(options) {\n      return this.options.writer.set(options).docType(this);\n    };\n\n    XMLDocType.prototype.ele = function(name, value) {\n      return this.element(name, value);\n    };\n\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n\n    XMLDocType.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocType.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocType.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    XMLDocType.prototype.up = function() {\n      return this.root() || this.documentObject;\n    };\n\n    return XMLDocType;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./Utility\":78,\"./XMLDTDAttList\":82,\"./XMLDTDElement\":83,\"./XMLDTDEntity\":84,\"./XMLDTDNotation\":85,\"./XMLNode\":91}],88:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isPlainObject = require('./Utility').isPlainObject;\n\n  XMLNode = require('./XMLNode');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocument = (function(superClass) {\n    extend(XMLDocument, superClass);\n\n    function XMLDocument(options) {\n      XMLDocument.__super__.constructor.call(this, null);\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.stringify = new XMLStringifier(options);\n      this.isDocument = true;\n    }\n\n    XMLDocument.prototype.end = function(writer) {\n      var writerOptions;\n      if (!writer) {\n        writer = this.options.writer;\n      } else if (isPlainObject(writer)) {\n        writerOptions = writer;\n        writer = this.options.writer.set(writerOptions);\n      }\n      return writer.document(this);\n    };\n\n    XMLDocument.prototype.toString = function(options) {\n      return this.options.writer.set(options).document(this);\n    };\n\n    return XMLDocument;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./Utility\":78,\"./XMLNode\":91,\"./XMLStringWriter\":95,\"./XMLStringifier\":96}],89:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, isFunction, isObject, isPlainObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject;\n\n  XMLElement = require('./XMLElement');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocumentCB = (function() {\n    function XMLDocumentCB(options, onData, onEnd) {\n      var writerOptions;\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter(options);\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter(writerOptions);\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function() {};\n      this.onEndCallback = onEnd || function() {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    XMLDocumentCB.prototype.node = function(name, attributes, text) {\n      var ref1;\n      if (name == null) {\n        throw new Error(\"Missing node name\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node\");\n      }\n      this.openCurrent();\n      name = name.valueOf();\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.element = function(name, attributes, text) {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.dtdElement.apply(this, arguments);\n      } else {\n        return this.node(name, attributes, text);\n      }\n    };\n\n    XMLDocumentCB.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode\");\n      }\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.currentNode.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.text = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.cdata = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.comment = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.raw = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.instruction = function(target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = target.valueOf();\n      }\n      if (value != null) {\n        value = value.valueOf();\n      }\n      if (Array.isArray(target)) {\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.currentLevel + 1));\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dtdElement = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.entity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.pEntity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.notation = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.up = function() {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.end = function() {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    };\n\n    XMLDocumentCB.prototype.openCurrent = function() {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    };\n\n    XMLDocumentCB.prototype.openNode = function(node) {\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node instanceof XMLElement) {\n          this.root = node;\n        }\n        this.onData(this.writer.openNode(node, this.currentLevel));\n        return node.isOpen = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.closeNode = function(node) {\n      if (!node.isClosed) {\n        this.onData(this.writer.closeNode(node, this.currentLevel));\n        return node.isClosed = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.onData = function(chunk) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk);\n    };\n\n    XMLDocumentCB.prototype.onEnd = function() {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    };\n\n    XMLDocumentCB.prototype.ele = function() {\n      return this.element.apply(this, arguments);\n    };\n\n    XMLDocumentCB.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    };\n\n    XMLDocumentCB.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLDocumentCB.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.att = function() {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.a = function() {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocumentCB.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocumentCB.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    return XMLDocumentCB;\n\n  })();\n\n}).call(this);\n\n},{\"./Utility\":78,\"./XMLAttribute\":79,\"./XMLCData\":80,\"./XMLComment\":81,\"./XMLDTDAttList\":82,\"./XMLDTDElement\":83,\"./XMLDTDEntity\":84,\"./XMLDTDNotation\":85,\"./XMLDeclaration\":86,\"./XMLDocType\":87,\"./XMLElement\":90,\"./XMLProcessingInstruction\":92,\"./XMLRaw\":93,\"./XMLStringWriter\":95,\"./XMLStringifier\":96,\"./XMLText\":97}],90:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute, XMLElement, XMLNode, isFunction, isObject, ref,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction;\n\n  XMLNode = require('./XMLNode');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  module.exports = XMLElement = (function(superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name\");\n      }\n      this.name = this.stringify.eleName(name);\n      this.attributes = {};\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n      if (parent.isDocument) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n      }\n    }\n\n    XMLElement.prototype.clone = function() {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n      clonedSelf.attributes = {};\n      ref1 = this.attributes;\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attributes[attName] = att.clone();\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function(child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function(name) {\n      var attName, i, len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name\");\n      }\n      name = name.valueOf();\n      if (Array.isArray(name)) {\n        for (i = 0, len = name.length; i < len; i++) {\n          attName = name[i];\n          delete this.attributes[attName];\n        }\n      } else {\n        delete this.attributes[name];\n      }\n      return this;\n    };\n\n    XMLElement.prototype.toString = function(options) {\n      return this.options.writer.set(options).element(this);\n    };\n\n    XMLElement.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    return XMLElement;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./Utility\":78,\"./XMLAttribute\":79,\"./XMLNode\":91}],91:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLElement, XMLNode, XMLProcessingInstruction, XMLRaw, XMLText, isEmpty, isFunction, isObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isEmpty = ref.isEmpty;\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  module.exports = XMLNode = (function() {\n    function XMLNode(parent) {\n      this.parent = parent;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.children = [];\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n      }\n    }\n\n    XMLNode.prototype.element = function(name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref1, val;\n      lastChild = null;\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if ((isObject(val)) && (isEmpty(val))) {\n            val = null;\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            lastChild = this.element(key);\n            lastChild.element(val);\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name);\n      }\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function() {\n      var i, ref1;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element\");\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref1 = [])), ref1;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function(name, attributes, text) {\n      var child, ref1;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      attributes || (attributes = {});\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function(value) {\n      var child;\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function(value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function(value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.commentBefore = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.commentAfter = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function(value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.instruction = function(target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = target.valueOf();\n      }\n      if (value != null) {\n        value = value.valueOf();\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n\n    XMLNode.prototype.instructionBefore = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.instructionAfter = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children[0] instanceof XMLDeclaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n\n    XMLNode.prototype.doctype = function(pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref1, ref2;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref1 = doc.children;\n      for (i = j = 0, len = ref1.length; j < len; i = ++j) {\n        child = ref1[i];\n        if (child instanceof XMLDocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref2 = doc.children;\n      for (i = k = 0, len1 = ref2.length; k < len1; i = ++k) {\n        child = ref2[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.document = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.end = function(options) {\n      return this.document().end(options);\n    };\n\n    XMLNode.prototype.prev = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node\");\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node\");\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importDocument = function(doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.dtd = function(pubID, sysID) {\n      return this.doctype(pubID, sysID);\n    };\n\n    XMLNode.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.u = function() {\n      return this.up();\n    };\n\n    XMLNode.prototype.importXMLBuilder = function(doc) {\n      return this.importDocument(doc);\n    };\n\n    return XMLNode;\n\n  })();\n\n}).call(this);\n\n},{\"./Utility\":78,\"./XMLCData\":80,\"./XMLComment\":81,\"./XMLDeclaration\":86,\"./XMLDocType\":87,\"./XMLElement\":90,\"./XMLProcessingInstruction\":92,\"./XMLRaw\":93,\"./XMLText\":97}],92:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLProcessingInstruction,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLProcessingInstruction = (function(superClass) {\n    extend(XMLProcessingInstruction, superClass);\n\n    function XMLProcessingInstruction(parent, target, value) {\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target\");\n      }\n      this.target = this.stringify.insTarget(target);\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function(options) {\n      return this.options.writer.set(options).processingInstruction(this);\n    };\n\n    return XMLProcessingInstruction;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":91}],93:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLRaw,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLRaw = (function(superClass) {\n    extend(XMLRaw, superClass);\n\n    function XMLRaw(parent, text) {\n      XMLRaw.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing raw text\");\n      }\n      this.value = this.stringify.raw(text);\n    }\n\n    XMLRaw.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLRaw.prototype.toString = function(options) {\n      return this.options.writer.set(options).raw(this);\n    };\n\n    return XMLRaw;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":91}],94:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStreamWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStreamWriter = (function(superClass) {\n    extend(XMLStreamWriter, superClass);\n\n    function XMLStreamWriter(stream, options) {\n      XMLStreamWriter.__super__.constructor.call(this, options);\n      this.stream = stream;\n    }\n\n    XMLStreamWriter.prototype.document = function(doc) {\n      var child, i, j, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        child.isLastRootNode = false;\n      }\n      doc.children[doc.children.length - 1].isLastRootNode = true;\n      ref1 = doc.children;\n      results = [];\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\n        child = ref1[j];\n        switch (false) {\n          case !(child instanceof XMLDeclaration):\n            results.push(this.declaration(child));\n            break;\n          case !(child instanceof XMLDocType):\n            results.push(this.docType(child));\n            break;\n          case !(child instanceof XMLComment):\n            results.push(this.comment(child));\n            break;\n          case !(child instanceof XMLProcessingInstruction):\n            results.push(this.processingInstruction(child));\n            break;\n          default:\n            results.push(this.element(child));\n        }\n      }\n      return results;\n    };\n\n    XMLStreamWriter.prototype.attribute = function(att) {\n      return this.stream.write(' ' + att.name + '=\"' + att.value + '\"');\n    };\n\n    XMLStreamWriter.prototype.cdata = function(node, level) {\n      return this.stream.write(this.space(level) + '<![CDATA[' + node.text + ']]>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.comment = function(node, level) {\n      return this.stream.write(this.space(level) + '<!-- ' + node.text + ' -->' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.declaration = function(node, level) {\n      this.stream.write(this.space(level));\n      this.stream.write('<?xml version=\"' + node.version + '\"');\n      if (node.encoding != null) {\n        this.stream.write(' encoding=\"' + node.encoding + '\"');\n      }\n      if (node.standalone != null) {\n        this.stream.write(' standalone=\"' + node.standalone + '\"');\n      }\n      this.stream.write(this.spacebeforeslash + '?>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.docType = function(node, level) {\n      var child, i, len, ref;\n      level || (level = 0);\n      this.stream.write(this.space(level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node));\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          switch (false) {\n            case !(child instanceof XMLDTDAttList):\n              this.dtdAttList(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDElement):\n              this.dtdElement(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDEntity):\n              this.dtdEntity(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDNotation):\n              this.dtdNotation(child, level + 1);\n              break;\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(']');\n      }\n      this.stream.write(this.spacebeforeslash + '>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.element = function(node, level) {\n      var att, child, i, len, name, ref, ref1, space;\n      level || (level = 0);\n      space = this.space(level);\n      this.stream.write(space + '<' + node.name);\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          this.stream.write('></' + node.name + '>');\n        } else {\n          this.stream.write(this.spacebeforeslash + '/>');\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        this.stream.write('>');\n        this.stream.write(node.children[0].value);\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.newline);\n        ref1 = node.children;\n        for (i = 0, len = ref1.length; i < len; i++) {\n          child = ref1[i];\n          switch (false) {\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLElement):\n              this.element(child, level + 1);\n              break;\n            case !(child instanceof XMLRaw):\n              this.raw(child, level + 1);\n              break;\n            case !(child instanceof XMLText):\n              this.text(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(space + '</' + node.name + '>');\n      }\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.processingInstruction = function(node, level) {\n      this.stream.write(this.space(level) + '<?' + node.target);\n      if (node.value) {\n        this.stream.write(' ' + node.value);\n      }\n      return this.stream.write(this.spacebeforeslash + '?>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.raw = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.text = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdAttList = function(node, level) {\n      this.stream.write(this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType);\n      if (node.defaultValueType !== '#DEFAULT') {\n        this.stream.write(' ' + node.defaultValueType);\n      }\n      if (node.defaultValue) {\n        this.stream.write(' \"' + node.defaultValue + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdElement = function(node, level) {\n      this.stream.write(this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value);\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdEntity = function(node, level) {\n      this.stream.write(this.space(level) + '<!ENTITY');\n      if (node.pe) {\n        this.stream.write(' %');\n      }\n      this.stream.write(' ' + node.name);\n      if (node.value) {\n        this.stream.write(' \"' + node.value + '\"');\n      } else {\n        if (node.pubID && node.sysID) {\n          this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n        } else if (node.sysID) {\n          this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n        }\n        if (node.nData) {\n          this.stream.write(' NDATA ' + node.nData);\n        }\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdNotation = function(node, level) {\n      this.stream.write(this.space(level) + '<!NOTATION ' + node.name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.pubID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.endline = function(node) {\n      if (!node.isLastRootNode) {\n        return this.newline;\n      } else {\n        return '';\n      }\n    };\n\n    return XMLStreamWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n\n},{\"./XMLCData\":80,\"./XMLComment\":81,\"./XMLDTDAttList\":82,\"./XMLDTDElement\":83,\"./XMLDTDEntity\":84,\"./XMLDTDNotation\":85,\"./XMLDeclaration\":86,\"./XMLDocType\":87,\"./XMLElement\":90,\"./XMLProcessingInstruction\":92,\"./XMLRaw\":93,\"./XMLText\":97,\"./XMLWriterBase\":98}],95:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = (function(superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function(doc) {\n      var child, i, len, r, ref;\n      this.textispresent = false;\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += (function() {\n          switch (false) {\n            case !(child instanceof XMLDeclaration):\n              return this.declaration(child);\n            case !(child instanceof XMLDocType):\n              return this.docType(child);\n            case !(child instanceof XMLComment):\n              return this.comment(child);\n            case !(child instanceof XMLProcessingInstruction):\n              return this.processingInstruction(child);\n            default:\n              return this.element(child, 0);\n          }\n        }).call(this);\n      }\n      if (this.pretty && r.slice(-this.newline.length) === this.newline) {\n        r = r.slice(0, -this.newline.length);\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.attribute = function(att) {\n      return ' ' + att.name + '=\"' + att.value + '\"';\n    };\n\n    XMLStringWriter.prototype.cdata = function(node, level) {\n      return this.space(level) + '<![CDATA[' + node.text + ']]>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.comment = function(node, level) {\n      return this.space(level) + '<!-- ' + node.text + ' -->' + this.newline;\n    };\n\n    XMLStringWriter.prototype.declaration = function(node, level) {\n      var r;\n      r = this.space(level);\n      r += '<?xml version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      r += this.spacebeforeslash + '?>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.docType = function(node, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      r = this.space(level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.newline;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLDTDAttList):\n                return this.dtdAttList(child, level + 1);\n              case !(child instanceof XMLDTDElement):\n                return this.dtdElement(child, level + 1);\n              case !(child instanceof XMLDTDEntity):\n                return this.dtdEntity(child, level + 1);\n              case !(child instanceof XMLDTDNotation):\n                return this.dtdNotation(child, level + 1);\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        r += ']';\n      }\n      r += this.spacebeforeslash + '>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.element = function(node, level) {\n      var att, child, i, j, len, len1, name, r, ref, ref1, ref2, space, textispresentwasset;\n      level || (level = 0);\n      textispresentwasset = false;\n      if (this.textispresent) {\n        this.newline = '';\n        this.pretty = false;\n      } else {\n        this.newline = this.newlinedefault;\n        this.pretty = this.prettydefault;\n      }\n      space = this.space(level);\n      r = '';\n      r += space + '<' + node.name;\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          r += '></' + node.name + '>' + this.newline;\n        } else {\n          r += this.spacebeforeslash + '/>' + this.newline;\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        r += '>';\n        r += node.children[0].value;\n        r += '</' + node.name + '>' + this.newline;\n      } else {\n        if (this.dontprettytextnodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if (child.value != null) {\n              this.textispresent++;\n              textispresentwasset = true;\n              break;\n            }\n          }\n        }\n        if (this.textispresent) {\n          this.newline = '';\n          this.pretty = false;\n          space = this.space(level);\n        }\n        r += '>' + this.newline;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLElement):\n                return this.element(child, level + 1);\n              case !(child instanceof XMLRaw):\n                return this.raw(child, level + 1);\n              case !(child instanceof XMLText):\n                return this.text(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        if (textispresentwasset) {\n          this.textispresent--;\n        }\n        if (!this.textispresent) {\n          this.newline = this.newlinedefault;\n          this.pretty = this.prettydefault;\n        }\n        r += space + '</' + node.name + '>' + this.newline;\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.processingInstruction = function(node, level) {\n      var r;\n      r = this.space(level) + '<?' + node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      r += this.spacebeforeslash + '?>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.raw = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.text = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdAttList = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdElement = function(node, level) {\n      return this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value + this.spacebeforeslash + '>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdEntity = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ENTITY';\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdNotation = function(node, level) {\n      var r;\n      r = this.space(level) + '<!NOTATION ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.openNode = function(node, level) {\n      var att, name, r, ref;\n      level || (level = 0);\n      if (node instanceof XMLElement) {\n        r = this.space(level) + '<' + node.name;\n        ref = node.attributes;\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          r += this.attribute(att);\n        }\n        r += (node.children ? '>' : '/>') + this.newline;\n        return r;\n      } else {\n        r = this.space(level) + '<!DOCTYPE ' + node.rootNodeName;\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        r += (node.children ? ' [' : '>') + this.newline;\n        return r;\n      }\n    };\n\n    XMLStringWriter.prototype.closeNode = function(node, level) {\n      level || (level = 0);\n      switch (false) {\n        case !(node instanceof XMLElement):\n          return this.space(level) + '</' + node.name + '>' + this.newline;\n        case !(node instanceof XMLDocType):\n          return this.space(level) + ']>' + this.newline;\n      }\n    };\n\n    return XMLStringWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n\n},{\"./XMLCData\":80,\"./XMLComment\":81,\"./XMLDTDAttList\":82,\"./XMLDTDElement\":83,\"./XMLDTDEntity\":84,\"./XMLDTDNotation\":85,\"./XMLDeclaration\":86,\"./XMLDocType\":87,\"./XMLElement\":90,\"./XMLProcessingInstruction\":92,\"./XMLRaw\":93,\"./XMLText\":97,\"./XMLWriterBase\":98}],96:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringifier,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.noDoubleEncoding = options.noDoubleEncoding;\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.eleName = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.eleText = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(this.elEscape(val));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attName = function(val) {\n      return val = '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      val = '' + val || '';\n      return this.attEscape(val);\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (val != null) {\n        return '' + val || '';\n      } else {\n        return val;\n      }\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var res;\n      res = str.match(/[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/);\n      if (res) {\n        throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.elEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n\n},{}],97:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLText,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLText = (function(superClass) {\n    extend(XMLText, superClass);\n\n    function XMLText(parent, text) {\n      XMLText.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing element text\");\n      }\n      this.value = this.stringify.eleText(text);\n    }\n\n    XMLText.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLText.prototype.toString = function(options) {\n      return this.options.writer.set(options).text(this);\n    };\n\n    return XMLText;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":91}],98:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLWriterBase,\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLWriterBase = (function() {\n    function XMLWriterBase(options) {\n      var key, ref, ref1, ref2, ref3, ref4, ref5, ref6, value;\n      options || (options = {});\n      this.pretty = options.pretty || false;\n      this.allowEmpty = (ref = options.allowEmpty) != null ? ref : false;\n      if (this.pretty) {\n        this.indent = (ref1 = options.indent) != null ? ref1 : '  ';\n        this.newline = (ref2 = options.newline) != null ? ref2 : '\\n';\n        this.offset = (ref3 = options.offset) != null ? ref3 : 0;\n        this.dontprettytextnodes = (ref4 = options.dontprettytextnodes) != null ? ref4 : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n      this.spacebeforeslash = (ref5 = options.spacebeforeslash) != null ? ref5 : '';\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref6 = options.writer || {};\n      for (key in ref6) {\n        if (!hasProp.call(ref6, key)) continue;\n        value = ref6[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.set = function(options) {\n      var key, ref, value;\n      options || (options = {});\n      if (\"pretty\" in options) {\n        this.pretty = options.pretty;\n      }\n      if (\"allowEmpty\" in options) {\n        this.allowEmpty = options.allowEmpty;\n      }\n      if (this.pretty) {\n        this.indent = \"indent\" in options ? options.indent : '  ';\n        this.newline = \"newline\" in options ? options.newline : '\\n';\n        this.offset = \"offset\" in options ? options.offset : 0;\n        this.dontprettytextnodes = \"dontprettytextnodes\" in options ? options.dontprettytextnodes : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n      this.spacebeforeslash = \"spacebeforeslash\" in options ? options.spacebeforeslash : '';\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n      return this;\n    };\n\n    XMLWriterBase.prototype.space = function(level) {\n      var indent;\n      if (this.pretty) {\n        indent = (level || 0) + this.offset + 1;\n        if (indent > 0) {\n          return new Array(indent).join(this.indent);\n        } else {\n          return '';\n        }\n      } else {\n        return '';\n      }\n    };\n\n    return XMLWriterBase;\n\n  })();\n\n}).call(this);\n\n},{}],99:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\n\n  ref = require('./Utility'), assign = ref.assign, isFunction = ref.isFunction;\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLDocumentCB = require('./XMLDocumentCB');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  XMLStreamWriter = require('./XMLStreamWriter');\n\n  module.exports.create = function(name, xmldec, doctype, options) {\n    var doc, root;\n    if (name == null) {\n      throw new Error(\"Root element needs a name\");\n    }\n    options = assign({}, xmldec, doctype, options);\n    doc = new XMLDocument(options);\n    root = doc.element(name);\n    if (!options.headless) {\n      doc.declaration(options);\n      if ((options.pubID != null) || (options.sysID != null)) {\n        doc.doctype(options);\n      }\n    }\n    return root;\n  };\n\n  module.exports.begin = function(options, onData, onEnd) {\n    var ref1;\n    if (isFunction(options)) {\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\n      options = {};\n    }\n    if (onData) {\n      return new XMLDocumentCB(options, onData, onEnd);\n    } else {\n      return new XMLDocument(options);\n    }\n  };\n\n  module.exports.stringWriter = function(options) {\n    return new XMLStringWriter(options);\n  };\n\n  module.exports.streamWriter = function(stream, options) {\n    return new XMLStreamWriter(stream, options);\n  };\n\n}).call(this);\n\n},{\"./Utility\":78,\"./XMLDocument\":88,\"./XMLDocumentCB\":89,\"./XMLStreamWriter\":94,\"./XMLStringWriter\":95}]},{},[1])(1)\n});\n\n","'use strict';\r\nmodule.exports = '1.9.1';\r\n","// This file content is dynamically created in build script\n\"use strict\";\nmodule.exports = {\n  'inherits': require('inherits'),\n  'util': require('util'),\n  'events': require('events'),\n  'lodash/core': require('lodash/core'),\n  'readable-stream': require('readable-stream'),\n  'multistream': require('multistream'),\n  './cache': require('./cache'),\n  './connection': require('./connection'),\n  './core': require('./core'),\n  './csv': require('./csv'),\n  './date': require('./date'),\n  './http-api': require('./http-api'),\n  './logger': require('./logger'),\n  './oauth2': require('./oauth2'),\n  './process': require('./process'),\n  './promise': require('./promise'),\n  './query': require('./query'),\n  './quick-action': require('./quick-action'),\n  './record-stream': require('./record-stream'),\n  './record': require('./record'),\n  './soap': require('./soap'),\n  './sobject': require('./sobject'),\n  './soql-builder': require('./soql-builder'),\n  './transport': require('./transport'),\n  './VERSION': require('./VERSION')\n};","/*global Sfdc */\r\n'use strict';\r\n\r\nvar Duplex = require('readable-stream').Duplex,\r\n    _ = require('lodash/core');\r\n\r\nfunction parseHeaders(hs) {\r\n  var headers = {};\r\n  hs.split(/\\n/).forEach(function(line) {\r\n    var pair = line.split(/\\s*:\\s*/);\r\n    var name = pair[0].toLowerCase();\r\n    var value = pair[1];\r\n    headers[name] = value;\r\n  });\r\n  return headers;\r\n}\r\n\r\nmodule.exports = {\r\n\r\n  supported: typeof Sfdc === 'object' && typeof Sfdc.canvas !== 'undefined',\r\n\r\n  createRequest: function(signedRequest) {\r\n    return function(params, callback) {\r\n      var response;\r\n      var str = new Duplex();\r\n      str._read = function(size) {\r\n        if (response) {\r\n          str.push(response.body);\r\n        }\r\n      };\r\n      var bufs = [];\r\n      var sent = false;\r\n      str._write = function(chunk, encoding, callback) {\r\n        bufs.push(chunk.toString(encoding));\r\n        callback();\r\n      };\r\n      str.on('finish', function() {\r\n        if (!sent) {\r\n          send(bufs.join(''));\r\n          sent = true;\r\n        }\r\n      });\r\n      if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {\r\n        send(params.body);\r\n        sent = true;\r\n      }\r\n\r\n      function send(body) {\r\n        var settings = {\r\n          client: signedRequest.client,\r\n          method: params.method,\r\n          data: body\r\n        };\r\n        if (params.headers) {\r\n          settings.headers = {};\r\n          for (var name in params.headers) {\r\n            if (name.toLowerCase() === 'content-type') {\r\n              settings.contentType = params.headers[name];\r\n            } else {\r\n              settings.headers[name] = params.headers[name];\r\n            }\r\n          }\r\n        }\r\n        settings.success = function(data) {\r\n          var headers = parseHeaders(data.responseHeaders);\r\n          var body = data.payload;\r\n          if (!_.isString(body)) {\r\n            body = JSON.stringify(body);\r\n          }\r\n          response = {\r\n            statusCode : data.status,\r\n            headers: headers,\r\n            body: body\r\n          };\r\n          if (callback) {\r\n            callback(null, response, response.body);\r\n          }\r\n          str.end();\r\n        };\r\n        settings.failure = function(err) {\r\n          if (callback) {\r\n            callback(err);\r\n          }\r\n        };\r\n        Sfdc.canvas.client.ajax(params.url, settings);\r\n      }\r\n      return str;\r\n    };\r\n  }\r\n};\r\n","/**\r\n * @file Browser client connection management class\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar events = require('events'),\r\n    inherits = require('inherits'),\r\n    qs = require('querystring'),\r\n    _ = require('lodash/core'),\r\n    Connection = require('../connection'),\r\n    OAuth2 = require('../oauth2');\r\n\r\n/**\r\n * @private\r\n */\r\nfunction popupWin(url, w, h) {\r\n  var left = (screen.width/2)-(w/2);\r\n  var top = (screen.height/2)-(h/2);\r\n  return window.open(url, null, 'location=yes,toolbar=no,status=no,menubar=no,width='+w+',height='+h+',top='+top+',left='+left);\r\n}\r\n\r\nfunction handleCallbackResponse() {\r\n  var res = checkCallbackResponse();\r\n  var state = localStorage.getItem('jsforce_state');\r\n  if (res && state && res.body.state === state) {\r\n    localStorage.removeItem('jsforce_state');\r\n    var states = state.split('.');\r\n    var prefix = states[0], promptType = states[1];\r\n    var cli = new Client(prefix);\r\n    if (res.success) {\r\n      cli._storeTokens(res.body);\r\n      location.hash = '';\r\n    } else {\r\n      cli._storeError(res.body);\r\n    }\r\n    if (promptType === 'popup') { window.close(); }\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction checkCallbackResponse() {\r\n  var params;\r\n  if (window.location.hash) {\r\n    params = qs.parse(window.location.hash.substring(1));\r\n    if (params.access_token) {\r\n      return { success: true, body: params };\r\n    }\r\n  } else if (window.location.search) {\r\n    params = qs.parse(window.location.search.substring(1));\r\n    if (params.error) {\r\n      return { success: false, body: params };\r\n    }\r\n  }\r\n}\r\n\r\n/** @private **/\r\nvar clientIdx = 0;\r\n\r\n\r\n/**\r\n * @class\r\n * @todo add document\r\n */\r\nvar Client = function(prefix) {\r\n  this._prefix = prefix || 'jsforce' + clientIdx++;\r\n  this.connection = null;\r\n};\r\n\r\ninherits(Client, events.EventEmitter);\r\n\r\n/**\r\n *\r\n */\r\nClient.prototype.init = function(config) {\r\n  if (handleCallbackResponse()) { return; }\r\n  this.config = config;\r\n  this.connection = new Connection(config);\r\n  var tokens = this._getTokens();\r\n  if (tokens) {\r\n    this.connection.initialize(tokens);\r\n    var self = this;\r\n    setTimeout(function() {\r\n      self.emit('connect', self.connection);\r\n    }, 10);\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n */\r\nClient.prototype.login = function(options, callback) {\r\n  if (_.isFunction(options)) {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  callback = callback || function(){ };\r\n  _.extend(options, this.config);\r\n  var self = this;\r\n  this._prompt(options, callback);\r\n};\r\n\r\n\r\nClient.prototype._prompt = function(options, callback) {\r\n  var self = this;\r\n  var oauth2 = new OAuth2(options);\r\n  var rand = Math.random().toString(36).substring(2);\r\n  var state = [ this._prefix, \"popup\", rand ].join('.');\r\n  localStorage.setItem(\"jsforce_state\", state);\r\n  var authzUrl = oauth2.getAuthorizationUrl({\r\n    response_type: 'token',\r\n    scope : options.scope,\r\n    state: state\r\n  });\r\n  var size = options.size || {};\r\n  var pw = popupWin(authzUrl, size.width || 912, size.height || 513);\r\n  if (!pw) {\r\n    state = [ this._prefix, \"redirect\", rand ].join('.');\r\n    localStorage.setItem(\"jsforce_state\", state);\r\n    authzUrl = oauth2.getAuthorizationUrl({\r\n      response_type: 'token',\r\n      scope : options.scope,\r\n      state: state\r\n    });\r\n    location.href = authzUrl;\r\n    return;\r\n  }\r\n  self._removeTokens();\r\n  var pid = setInterval(function() {\r\n    try {\r\n      if (!pw || pw.closed) {\r\n        clearInterval(pid);\r\n        var tokens = self._getTokens();\r\n        if (tokens) {\r\n          self.connection.initialize(tokens);\r\n          self.emit('connect', self.connection);\r\n          callback(null, { status: 'connect' });\r\n        } else {\r\n          var err = self._getError();\r\n          if (err) {\r\n            callback(new Error(err.error + \": \" + err.error_description));\r\n          } else {\r\n            callback(null, { status: 'cancel' });\r\n          }\r\n        }\r\n      }\r\n    } catch(e) {}\r\n  }, 1000);\r\n};\r\n\r\n/**\r\n *\r\n */\r\nClient.prototype.isLoggedIn = function() {\r\n  return !!(this.connection && this.connection.accessToken);\r\n};\r\n\r\n/**\r\n *\r\n */\r\nClient.prototype.logout = function() {\r\n  this.connection.logout();\r\n  this._removeTokens();\r\n  this.emit('disconnect');\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nClient.prototype._getTokens = function() {\r\n  var loggedIn = JSON.stringify(localStorage.getItem(this._prefix + '_loggedin'));\r\n  var regexp = new RegExp(\"(^|;\\\\s*)\"+this._prefix+\"_loggedin=true(;|$)\");\r\n  if (document.cookie.match(regexp) || loggedIn) {\r\n    var issuedAt = Number(localStorage.getItem(this._prefix+'_issued_at'));\r\n    if (Date.now() < issuedAt + 2 * 60 * 60 * 1000) { // 2 hours\r\n      var userInfo;\r\n      var idUrl = localStorage.getItem(this._prefix + '_id');\r\n      if (idUrl) {\r\n        var ids = idUrl.split('/');\r\n        userInfo = { id: ids.pop(), organizationId: ids.pop(), url: idUrl };\r\n      }\r\n      return {\r\n        accessToken: localStorage.getItem(this._prefix + '_access_token'),\r\n        instanceUrl: localStorage.getItem(this._prefix + '_instance_url'),\r\n        userInfo: userInfo\r\n      };\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nClient.prototype._storeTokens = function(params) {\r\n  localStorage.setItem(this._prefix + '_access_token', params.access_token);\r\n  localStorage.setItem(this._prefix + '_instance_url', params.instance_url);\r\n  localStorage.setItem(this._prefix + '_issued_at', params.issued_at);\r\n  localStorage.setItem(this._prefix + '_id', params.id);\r\n  localStorage.setItem(this._prefix + '_loggedin', 'true');\r\n  document.cookie = this._prefix + '_loggedin=true;';\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nClient.prototype._removeTokens = function() {\r\n  localStorage.removeItem(this._prefix + '_access_token');\r\n  localStorage.removeItem(this._prefix + '_instance_url');\r\n  localStorage.removeItem(this._prefix + '_issued_at');\r\n  localStorage.removeItem(this._prefix + '_id');\r\n  localStorage.removeItem(this._prefix + '_loggedin');\r\n  document.cookie = this._prefix + '_loggedin=';\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nClient.prototype._getError = function() {\r\n  try {\r\n    var err = JSON.parse(localStorage.getItem(this._prefix + '_error'));\r\n    localStorage.removeItem(this._prefix + '_error');\r\n    return err;\r\n  } catch(e) {}\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nClient.prototype._storeError = function(err) {\r\n  localStorage.setItem(this._prefix + '_error', JSON.stringify(err));\r\n};\r\n\r\n/**\r\n *\r\n */\r\nmodule.exports = new Client();\r\n\r\nmodule.exports.Client = Client;\r\n","/*global window, document */\r\n'use strict';\r\n\r\nvar _index = 0;\r\n\r\nmodule.exports = {\r\n\r\n  supported: typeof window !== 'undefined' && typeof document !== 'undefined',\r\n\r\n  createRequest: function(jsonpParam, timeout) {\r\n    jsonpParam = jsonpParam || 'callback';\r\n    timeout = timeout || 10000;\r\n\r\n    return function(params, callback) {\r\n      if (params.method.toUpperCase() !== 'GET') {\r\n        return callback(new Error('JSONP only supports GET request.'));\r\n      }\r\n      var cbFuncName = '_jsforce_jsonpCallback_' + (++_index);\r\n      var callbacks = window;\r\n      var url = params.url;\r\n      url += url.indexOf('?')>0 ? '&' : '?';\r\n      url += jsonpParam + '=' + cbFuncName;\r\n\r\n      var script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = url;\r\n      document.documentElement.appendChild(script);\r\n\r\n      var pid = setTimeout(function() {\r\n        cleanup();\r\n        callback(new Error(\"JSONP call time out.\"));\r\n      }, timeout);\r\n\r\n      callbacks[cbFuncName] = function(res) {\r\n        cleanup();\r\n        callback(null, {\r\n          statusCode: 200,\r\n          headers: { \"content-type\": \"application/json\" },\r\n          body: JSON.stringify(res)\r\n        });\r\n      };\r\n\r\n      var cleanup = function() {\r\n        clearTimeout(pid);\r\n        document.documentElement.removeChild(script);\r\n        delete callbacks[cbFuncName];\r\n      };\r\n    };\r\n\r\n  }\r\n\r\n};","'use strict';\r\n\r\nvar Duplex = require('readable-stream').Duplex;\r\nvar _ = require('lodash/core');\r\n\r\nmodule.exports = function(params, callback) {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open(params.method, params.url);\r\n  if (params.headers) {\r\n    for (var header in params.headers) {\r\n      xhr.setRequestHeader(header, params.headers[header]);\r\n    }\r\n  }\r\n  xhr.setRequestHeader(\"Accept\", \"*/*\");\r\n  var response;\r\n  var str = new Duplex();\r\n  str._read = function(size) {\r\n    if (response) {\r\n      str.push(response.body);\r\n    }\r\n  };\r\n  var bufs = [];\r\n  var sent = false;\r\n  str._write = function(chunk, encoding, callback) {\r\n    bufs.push(chunk.toString(encoding === \"buffer\" ? \"binary\" : encoding));\r\n    callback();\r\n  };\r\n  str.on('finish', function() {\r\n    if (!sent) {\r\n      xhr.send(bufs.join(''));\r\n      sent = true;\r\n    }\r\n  });\r\n  if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {\r\n    xhr.send(params.body);\r\n    sent = true;\r\n  }\r\n  xhr.onreadystatechange = function() {\r\n    if (xhr.readyState === 4) {\r\n      var headerNames = getResponseHeaderNames(xhr);\r\n      var headers = {};\r\n      _.forEach(headerNames, function(headerName) {\r\n        if (headerName) {\r\n          headers[headerName] = xhr.getResponseHeader(headerName);\r\n        }\r\n      });\r\n      response = {\r\n        statusCode: xhr.status,\r\n        headers: headers,\r\n        body: xhr.response\r\n      };\r\n      if (!response.statusCode) {\r\n        response.statusCode = 400;\r\n        response.body = \"Access Declined\";\r\n      }\r\n      if (callback) {\r\n        callback(null, response, response.body);\r\n      }\r\n      str.end();\r\n    }\r\n  };\r\n  return str;\r\n};\r\n\r\nfunction getResponseHeaderNames(xhr) {\r\n  var headerLines = (xhr.getAllResponseHeaders() || \"\").split(/[\\r\\n]+/);\r\n  return _.map(headerLines, function(headerLine) {\r\n    return headerLine.split(/\\s*:/)[0].toLowerCase();\r\n  });\r\n}\r\n","/**\r\n * @file Manages asynchronous method response cache\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar events = require('events'),\r\n    inherits = require('inherits'),\r\n    _      = require('lodash/core');\r\n\r\n/**\r\n * Class for managing cache entry\r\n *\r\n * @private\r\n * @class\r\n * @constructor\r\n * @template T\r\n */\r\nvar CacheEntry = function() {\r\n  this.fetching = false;\r\n};\r\n\r\ninherits(CacheEntry, events.EventEmitter);\r\n\r\n/**\r\n * Get value in the cache entry\r\n *\r\n * @param {Callback.<T>} [callback] - Callback function callbacked the cache entry updated\r\n * @returns {T|undefined}\r\n */\r\nCacheEntry.prototype.get = function(callback) {\r\n  if (!callback) {\r\n    return this._value;\r\n  } else {\r\n    this.once('value', callback);\r\n    if (!_.isUndefined(this._value)) {\r\n      this.emit('value', this._value);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Set value in the cache entry\r\n *\r\n * @param {T} [value] - A value for caching\r\n */\r\nCacheEntry.prototype.set = function(value) {\r\n  this._value = value;\r\n  this.emit('value', this._value);\r\n};\r\n\r\n/**\r\n * Clear cached value\r\n */\r\nCacheEntry.prototype.clear = function() {\r\n  this.fetching = false;\r\n  delete this._value;\r\n};\r\n\r\n\r\n/**\r\n * Caching manager for async methods\r\n *\r\n * @class\r\n * @constructor\r\n */\r\nvar Cache = function() {\r\n  this._entries = {};\r\n};\r\n\r\n/**\r\n * retrive cache entry, or create if not exists.\r\n *\r\n * @param {String} [key] - Key of cache entry\r\n * @returns {CacheEntry}\r\n */\r\nCache.prototype.get = function(key) {\r\n  if (key && this._entries[key]) {\r\n    return this._entries[key];\r\n  } else {\r\n    var entry = new CacheEntry();\r\n    this._entries[key] = entry;\r\n    return entry;\r\n  }\r\n};\r\n\r\n/**\r\n * clear cache entries prefix matching given key\r\n * @param {String} [key] - Key prefix of cache entry to clear\r\n */\r\nCache.prototype.clear = function(key) {\r\n  for (var k in this._entries) {\r\n    if (!key || k.indexOf(key) === 0) {\r\n      this._entries[k].clear();\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * create and return cache key from namespace and serialized arguments.\r\n * @private\r\n */\r\nfunction createCacheKey(namespace, args) {\r\n  args = Array.prototype.slice.apply(args);\r\n  return namespace + '(' + _.map(args, function(a){ return JSON.stringify(a); }).join(',') + ')';\r\n}\r\n\r\n/**\r\n * Enable caching for async call fn to intercept the response and store it to cache.\r\n * The original async calll fn is always invoked.\r\n *\r\n * @protected\r\n * @param {Function} fn - Function to covert cacheable\r\n * @param {Object} [scope] - Scope of function call\r\n * @param {Object} [options] - Options\r\n * @return {Function} - Cached version of function\r\n */\r\nCache.prototype.makeResponseCacheable = function(fn, scope, options) {\r\n  var cache = this;\r\n  options = options || {};\r\n  return function() {\r\n    var args = Array.prototype.slice.apply(arguments);\r\n    var callback = args.pop();\r\n    if (!_.isFunction(callback)) {\r\n      args.push(callback);\r\n      callback = null;\r\n    }\r\n    var key = _.isString(options.key) ? options.key :\r\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\r\n              createCacheKey(options.namespace, args);\r\n    var entry = cache.get(key);\r\n    entry.fetching = true;\r\n    if (callback) {\r\n      args.push(function(err, result) {\r\n        entry.set({ error: err, result: result });\r\n        callback(err, result);\r\n      });\r\n    }\r\n    var ret, error;\r\n    try {\r\n      ret = fn.apply(scope || this, args);\r\n    } catch(e) {\r\n      error = e;\r\n    }\r\n    if (ret && _.isFunction(ret.then)) { // if the returned value is promise\r\n      if (!callback) {\r\n        return ret.then(function(result) {\r\n          entry.set({ error: undefined, result: result });\r\n          return result;\r\n        }, function(err) {\r\n          entry.set({ error: err, result: undefined });\r\n          throw err;\r\n        });\r\n      } else {\r\n        return ret;\r\n      }\r\n    } else {\r\n      entry.set({ error: error, result: ret });\r\n      if (error) { throw error; }\r\n      return ret;\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Enable caching for async call fn to lookup the response cache first, then invoke original if no cached value.\r\n *\r\n * @protected\r\n * @param {Function} fn - Function to covert cacheable\r\n * @param {Object} [scope] - Scope of function call\r\n * @param {Object} [options] - Options\r\n * @return {Function} - Cached version of function\r\n */\r\nCache.prototype.makeCacheable = function(fn, scope, options) {\r\n  var cache = this;\r\n  options = options || {};\r\n  var $fn = function() {\r\n    var args = Array.prototype.slice.apply(arguments);\r\n    var callback = args.pop();\r\n    if (!_.isFunction(callback)) {\r\n      args.push(callback);\r\n    }\r\n    var key = _.isString(options.key) ? options.key :\r\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\r\n              createCacheKey(options.namespace, args);\r\n    var entry = cache.get(key);\r\n    if (!_.isFunction(callback)) { // if callback is not given in last arg, return cached result (immediate).\r\n      var value = entry.get();\r\n      if (!value) { throw new Error('Function call result is not cached yet.'); }\r\n      if (value.error) { throw value.error; }\r\n      return value.result;\r\n    }\r\n    entry.get(function(value) {\r\n      callback(value.error, value.result);\r\n    });\r\n    if (!entry.fetching) { // only when no other client is calling function\r\n      entry.fetching = true;\r\n      args.push(function(err, result) {\r\n        entry.set({ error: err, result: result });\r\n      });\r\n      fn.apply(scope || this, args);\r\n    }\r\n  };\r\n  $fn.clear = function() {\r\n    var key = _.isString(options.key) ? options.key :\r\n              _.isFunction(options.key) ? options.key.apply(scope, arguments) :\r\n              createCacheKey(options.namespace, arguments);\r\n    cache.clear(key);\r\n  };\r\n  return $fn;\r\n};\r\n\r\n\r\nmodule.exports = Cache;\r\n","/*global Buffer */\r\n/**\r\n * @file Connection class to keep the API session information and manage requests\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar events  = require('events'),\r\n    inherits = require('inherits'),\r\n    _       = require('lodash/core'),\r\n    Promise = require('./promise'),\r\n    Logger  = require('./logger'),\r\n    OAuth2  = require('./oauth2'),\r\n    Query   = require('./query'),\r\n    SObject = require('./sobject'),\r\n    QuickAction = require('./quick-action'),\r\n    HttpApi = require('./http-api'),\r\n    Transport = require('./transport'),\r\n    Process = require('./process'),\r\n    Cache   = require('./cache');\r\n\r\nvar defaults = {\r\n  loginUrl: \"https://login.salesforce.com\",\r\n  instanceUrl: \"\",\r\n  version: \"42.0\"\r\n};\r\n\r\n/*\r\n * Constant of maximum records num in DML operation (update/delete)\r\n */\r\nvar MAX_DML_COUNT = 200;\r\n\r\n\r\n/**\r\n * Connection class to keep the API session information and manage requests\r\n *\r\n * @constructor\r\n * @extends events.EventEmitter\r\n * @param {Object} [options] - Connection options\r\n * @param {OAuth2|Object} [options.oauth2] - OAuth2 instance or options to be passed to OAuth2 constructor\r\n * @param {String} [options.logLevel] - Output logging level (DEBUG|INFO|WARN|ERROR|FATAL)\r\n * @param {String} [options.version] - Salesforce API Version (without \"v\" prefix)\r\n * @param {Number} [options.maxRequest] - Max number of requests allowed in parallel call\r\n * @param {String} [options.loginUrl] - Salesforce Login Server URL (e.g. https://login.salesforce.com/)\r\n * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\r\n * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\r\n * @param {String} [options.accessToken] - Salesforce OAuth2 access token\r\n * @param {String} [options.sessionId] - Salesforce session ID\r\n * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token\r\n * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)\r\n * @param {String} [options.proxyUrl] - Cross-domain proxy server URL, used in browser client, non Visualforce app.\r\n * @param {String} [options.httpProxy] - URL of HTTP proxy server, used in server client.\r\n * @param {Object} [options.callOptions] - Call options used in each SOAP/REST API request. See manual.\r\n */\r\nvar Connection = module.exports = function(options) {\r\n  options = options || {};\r\n\r\n  this._logger = new Logger(options.logLevel);\r\n\r\n  var oauth2 = options.oauth2 || {\r\n    loginUrl : options.loginUrl,\r\n    clientId : options.clientId,\r\n    clientSecret : options.clientSecret,\r\n    redirectUri : options.redirectUri,\r\n    proxyUrl: options.proxyUrl,\r\n    httpProxy: options.httpProxy\r\n  };\r\n\r\n  /**\r\n   * OAuth2 object\r\n   * @member {OAuth2} Connection#oauth2\r\n   */\r\n  this.oauth2 = oauth2 = oauth2 instanceof OAuth2 ? oauth2 : new OAuth2(oauth2);\r\n\r\n  this.loginUrl = options.loginUrl || oauth2.loginUrl || defaults.loginUrl;\r\n  this.version = options.version || defaults.version;\r\n  this.maxRequest = options.maxRequest || this.maxRequest || 10;\r\n\r\n  /** @private */\r\n  if (options.proxyUrl) {\r\n    this._transport = new Transport.ProxyTransport(options.proxyUrl);\r\n  } else if (options.httpProxy) {\r\n    this._transport = new Transport.HttpProxyTransport(options.httpProxy);\r\n  } else {\r\n    this._transport = new Transport();\r\n  }\r\n\r\n  this.callOptions = options.callOptions;\r\n\r\n  /*\r\n   * Fire connection:new event to notify jsforce plugin modules\r\n   */\r\n  var jsforce = require('./core');\r\n  jsforce.emit('connection:new', this);\r\n\r\n  /**\r\n   * Streaming API object\r\n   * @member {Streaming} Connection#streaming\r\n   */\r\n  // this.streaming = new Streaming(this);\r\n  /**\r\n   * Bulk API object\r\n   * @member {Bulk} Connection#bulk\r\n   */\r\n  // this.bulk = new Bulk(this);\r\n  /**\r\n   * Tooling API object\r\n   * @member {Tooling} Connection#tooling\r\n   */\r\n  // this.tooling = new Tooling(this);\r\n  /**\r\n   * Analytics API object\r\n   * @member {Analytics} Connection#analytics\r\n   */\r\n  // this.analytics = new Analytics(this);\r\n  /**\r\n   * Chatter API object\r\n   * @member {Chatter} Connection#chatter\r\n   */\r\n  // this.chatter = new Chatter(this);\r\n  /**\r\n   * Metadata API object\r\n   * @member {Metadata} Connection#metadata\r\n   */\r\n  // this.metadata = new Metadata(this);\r\n\r\n  /**\r\n   * SOAP API object\r\n   * @member {SoapApi} Connection#soap\r\n   */\r\n  // this.soap = new SoapApi(this);\r\n\r\n  /**\r\n   * Apex REST API object\r\n   * @member {Apex} Connection#apex\r\n   */\r\n  // this.apex = new Apex(this);\r\n\r\n  /**\r\n   * @member {Process} Connection#process\r\n   */\r\n  this.process = new Process(this);\r\n\r\n  /**\r\n   * Cache object for result\r\n   * @member {Cache} Connection#cache\r\n   */\r\n  this.cache = new Cache();\r\n\r\n  // Allow to delegate connection refresh to outer function\r\n  var self = this;\r\n  var refreshFn = options.refreshFn;\r\n  if (!refreshFn && this.oauth2.clientId) {\r\n    refreshFn = oauthRefreshFn;\r\n  }\r\n  if (refreshFn) {\r\n    this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, refreshFn);\r\n  }\r\n\r\n  var cacheOptions = {\r\n    key: function(type) { return type ? \"describe.\" + type : \"describe\"; }\r\n  };\r\n  this.describe$ = this.cache.makeCacheable(this.describe, this, cacheOptions);\r\n  this.describe = this.cache.makeResponseCacheable(this.describe, this, cacheOptions);\r\n  this.describeSObject$ = this.describe$;\r\n  this.describeSObject = this.describe;\r\n\r\n  cacheOptions = { key: 'describeGlobal' };\r\n  this.describeGlobal$ = this.cache.makeCacheable(this.describeGlobal, this, cacheOptions);\r\n  this.describeGlobal = this.cache.makeResponseCacheable(this.describeGlobal, this, cacheOptions);\r\n\r\n  this.initialize(options);\r\n};\r\n\r\ninherits(Connection, events.EventEmitter);\r\n\r\n/**\r\n * Initialize connection.\r\n *\r\n * @protected\r\n * @param {Object} options - Initialization options\r\n * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\r\n * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\r\n * @param {String} [options.accessToken] - Salesforce OAuth2 access token\r\n * @param {String} [options.sessionId] - Salesforce session ID\r\n * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token\r\n * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)\r\n * @param {UserInfo} [options.userInfo] - Logged in user information\r\n */\r\nConnection.prototype.initialize = function(options) {\r\n  if (!options.instanceUrl && options.serverUrl) {\r\n    options.instanceUrl = options.serverUrl.split('/').slice(0, 3).join('/');\r\n  }\r\n  this.instanceUrl = options.instanceUrl || options.serverUrl || this.instanceUrl || defaults.instanceUrl;\r\n\r\n  this.accessToken = options.sessionId || options.accessToken || this.accessToken;\r\n  this.refreshToken = options.refreshToken || this.refreshToken;\r\n  if (this.refreshToken && !this._refreshDelegate) {\r\n    throw new Error(\"Refresh token is specified without oauth2 client information or refresh function\");\r\n  }\r\n\r\n  this.signedRequest = options.signedRequest && parseSignedRequest(options.signedRequest);\r\n  if (this.signedRequest) {\r\n    this.accessToken = this.signedRequest.client.oauthToken;\r\n    if (Transport.CanvasTransport.supported) {\r\n      this._transport = new Transport.CanvasTransport(this.signedRequest);\r\n    }\r\n  }\r\n\r\n  if (options.userInfo) {\r\n    this.userInfo = options.userInfo;\r\n  }\r\n\r\n  this.limitInfo = {};\r\n\r\n  this.sobjects = {};\r\n  this.cache.clear();\r\n  this.cache.get('describeGlobal').removeAllListeners('value');\r\n  this.cache.get('describeGlobal').on('value', _.bind(function(res) {\r\n    if (res.result) {\r\n      var types = _.map(res.result.sobjects, function(so) { return so.name; });\r\n      types.forEach(this.sobject, this);\r\n    }\r\n  }, this));\r\n\r\n  if (this.tooling) {\r\n    this.tooling.initialize();\r\n  }\r\n\r\n  this._sessionType = options.sessionId ? \"soap\" : \"oauth2\";\r\n\r\n};\r\n\r\n/** @private **/\r\nfunction oauthRefreshFn(conn, callback) {\r\n  conn.oauth2.refreshToken(conn.refreshToken, function(err, res) {\r\n    if (err) { return callback(err); }\r\n    var userInfo = parseIdUrl(res.id);\r\n    conn.initialize({\r\n      instanceUrl : res.instance_url,\r\n      accessToken : res.access_token,\r\n      userInfo : userInfo\r\n    });\r\n    callback(null, res.access_token, res);\r\n  });\r\n}\r\n\r\n/** @private **/\r\nfunction parseSignedRequest(sr) {\r\n  if (_.isString(sr)) {\r\n    if (sr[0] === '{') { // might be JSON\r\n      return JSON.parse(sr);\r\n    } else { // might be original base64-encoded signed request\r\n      var msg = sr.split('.').pop(); // retrieve latter part\r\n      var json = Buffer.from(msg, 'base64').toString('utf-8');\r\n      return JSON.parse(json);\r\n    }\r\n    return null;\r\n  }\r\n  return sr;\r\n}\r\n\r\n\r\n/** @private **/\r\nConnection.prototype._baseUrl = function() {\r\n  return [ this.instanceUrl, \"services/data\", \"v\" + this.version ].join('/');\r\n};\r\n\r\n/**\r\n * Convert path to absolute url\r\n * @private\r\n */\r\nConnection.prototype._normalizeUrl = function(url) {\r\n  if (url[0] === '/') {\r\n    if (url.indexOf('/services/') === 0) {\r\n      return this.instanceUrl + url;\r\n    } else {\r\n      return this._baseUrl() + url;\r\n    }\r\n  } else {\r\n    return url;\r\n  }\r\n};\r\n\r\n/**\r\n * Send REST API request with given HTTP request info, with connected session information.\r\n *\r\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\r\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\r\n * , or relative path from version root ('/sobjects/Account/describe').\r\n *\r\n * @param {String|Object} request - HTTP request object or URL to GET request\r\n * @param {String} request.method - HTTP method URL to send HTTP request\r\n * @param {String} request.url - URL to send HTTP request\r\n * @param {Object} [request.headers] - HTTP request headers in hash object (key-value)\r\n * @param {Object} [options] - HTTP API request options\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nConnection.prototype.request = function(request, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = null;\r\n  }\r\n  options = options || {};\r\n  var self = this;\r\n\r\n  // if request is simple string, regard it as url in GET method\r\n  if (_.isString(request)) {\r\n    request = { method: 'GET', url: request };\r\n  }\r\n  // if url is given in relative path, prepend base url or instance url before.\r\n  request.url = this._normalizeUrl(request.url);\r\n\r\n  var httpApi = new HttpApi(this, options);\r\n\r\n  // log api usage and its quota\r\n  httpApi.on('response', function(response) {\r\n    if (response.headers && response.headers[\"sforce-limit-info\"]) {\r\n      var apiUsage = response.headers[\"sforce-limit-info\"].match(/api\\-usage=(\\d+)\\/(\\d+)/);\r\n      if (apiUsage) {\r\n        self.limitInfo = {\r\n          apiUsage: {\r\n            used: parseInt(apiUsage[1], 10),\r\n            limit: parseInt(apiUsage[2], 10)\r\n          }\r\n        };\r\n      }\r\n    }\r\n  });\r\n  return httpApi.request(request).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Send HTTP GET request\r\n *\r\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\r\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\r\n * , or relative path from version root ('/sobjects/Account/describe').\r\n *\r\n * @param {String} url - Endpoint URL to request HTTP GET\r\n * @param {Object} [options] - HTTP API request options\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nConnection.prototype.requestGet = function(url, options, callback) {\r\n  var request = {\r\n    method: \"GET\",\r\n    url: url\r\n  };\r\n  return this.request(request, options, callback);\r\n};\r\n\r\n\r\n/**\r\n * Send HTTP POST request with JSON body, with connected session information\r\n *\r\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\r\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\r\n * , or relative path from version root ('/sobjects/Account/describe').\r\n *\r\n * @param {String} url - Endpoint URL to request HTTP POST\r\n * @param {Object} body - Any JS object which can be serialized to JSON\r\n * @param {Object} [options] - HTTP API request options\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nConnection.prototype.requestPost = function(url, body, options, callback) {\r\n  var request = {\r\n    method: \"POST\",\r\n    url: url,\r\n    body: JSON.stringify(body),\r\n    headers: { \"content-type\": \"application/json\" }\r\n  };\r\n  return this.request(request, options, callback);\r\n};\r\n\r\n/**\r\n * Send HTTP PUT request with JSON body, with connected session information\r\n *\r\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\r\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\r\n * , or relative path from version root ('/sobjects/Account/describe').\r\n *\r\n * @param {String} url - Endpoint URL to request HTTP PUT\r\n * @param {Object} body - Any JS object which can be serialized to JSON\r\n * @param {Object} [options] - HTTP API request options\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nConnection.prototype.requestPut = function(url, body, options, callback) {\r\n  var request = {\r\n    method: \"PUT\",\r\n    url: url,\r\n    body: JSON.stringify(body),\r\n    headers: { \"content-type\": \"application/json\" }\r\n  };\r\n  return this.request(request, options, callback);\r\n};\r\n\r\n/**\r\n * Send HTTP PATCH request with JSON body\r\n *\r\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\r\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\r\n * , or relative path from version root ('/sobjects/Account/describe').\r\n *\r\n * @param {String} url - Endpoint URL to request HTTP PATCH\r\n * @param {Object} body - Any JS object which can be serialized to JSON\r\n * @param {Object} [options] - HTTP API request options\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nConnection.prototype.requestPatch = function(url, body, options, callback) {\r\n  var request = {\r\n    method: \"PATCH\",\r\n    url: url,\r\n    body: JSON.stringify(body),\r\n    headers: { \"content-type\": \"application/json\" }\r\n  };\r\n  return this.request(request, options, callback);\r\n};\r\n\r\n/**\r\n * Send HTTP DELETE request\r\n *\r\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\r\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\r\n * , or relative path from version root ('/sobjects/Account/describe').\r\n *\r\n * @param {String} url - Endpoint URL to request HTTP DELETE\r\n * @param {Object} [options] - HTTP API request options\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nConnection.prototype.requestDelete = function(url, options, callback) {\r\n  var request = {\r\n    method: \"DELETE\",\r\n    url: url\r\n  };\r\n  return this.request(request, options, callback);\r\n};\r\n\r\n\r\n/** @private */\r\nfunction formatDate(date) {\r\n  function pad(number) {\r\n    if (number < 10) {\r\n      return '0' + number;\r\n    }\r\n    return number;\r\n  }\r\n\r\n  return date.getUTCFullYear() +\r\n    '-' + pad(date.getUTCMonth() + 1) +\r\n    '-' + pad(date.getUTCDate()) +\r\n    'T' + pad(date.getUTCHours()) +\r\n    ':' + pad(date.getUTCMinutes()) +\r\n    ':' + pad(date.getUTCSeconds()) +\r\n    '+00:00';\r\n}\r\n\r\n\r\n/** @private **/\r\nfunction parseIdUrl(idUrl) {\r\n  var idUrls = idUrl.split(\"/\");\r\n  var userId = idUrls.pop(), orgId = idUrls.pop();\r\n  return {\r\n    id: userId,\r\n    organizationId: orgId,\r\n    url: idUrl\r\n  };\r\n}\r\n\r\n/**\r\n * @callback Callback\r\n * @type {Function}\r\n * @param {Error} err - Callback error\r\n * @param {T} response - Callback response\r\n * @template T\r\n */\r\n\r\n/**\r\n * @typedef {Object} QueryResult\r\n * @prop {Boolean} done - Flag if the query is fetched all records or not\r\n * @prop {String} [nextRecordsUrl] - URL locator for next record set, (available when done = false)\r\n * @prop {Number} totalSize - Total size for query\r\n * @prop {Array.<Record>} [records] - Array of records fetched\r\n */\r\n\r\n/**\r\n * Execute query by using SOQL\r\n *\r\n * @param {String} soql - SOQL string\r\n * @param {Object} [options] - Query options\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n * @param {Callback.<QueryResult>} [callback] - Callback function\r\n * @returns {Query.<QueryResult>}\r\n */\r\nConnection.prototype.query = function(soql, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = undefined;\r\n  }\r\n  var query = new Query(this, soql, options);\r\n  if (callback) {\r\n    query.run(callback);\r\n  }\r\n  return query;\r\n};\r\n\r\n/**\r\n * Execute query by using SOQL, including deleted records\r\n *\r\n * @param {String} soql - SOQL string\r\n * @param {Object} [options] - Query options\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n * @param {Callback.<QueryResult>} [callback] - Callback function\r\n * @returns {Query.<QueryResult>}\r\n */\r\nConnection.prototype.queryAll = function(soql, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = undefined;\r\n  }\r\n  var query = new Query(this, soql, options);\r\n  query.scanAll(true);\r\n  if (callback) {\r\n    query.run(callback);\r\n  }\r\n  return query;\r\n};\r\n\r\n/**\r\n * Query next record set by using query locator\r\n *\r\n * @param {String} locator - Next record set locator\r\n * @param {Object} [options] - Query options\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n * @param {Callback.<QueryResult>} [callback] - Callback function\r\n * @returns {Query.<QueryResult>}\r\n */\r\nConnection.prototype.queryMore = function(locator, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = undefined;\r\n  }\r\n  var query = new Query(this, { locator: locator }, options);\r\n  if (callback) {\r\n    query.run(callback);\r\n  }\r\n  return query;\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._ensureVersion = function(majorVersion) {\r\n  var versions = this.version.split('.');\r\n  return parseInt(versions[0], 10) >= majorVersion;\r\n}\r\n\r\n/** @private */\r\nConnection.prototype._supports = function(feature) {\r\n  switch (feature) {\r\n    case 'sobject-collection':\r\n      return this._ensureVersion(42);\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Retrieve specified records\r\n *\r\n * @param {String} type - SObject Type\r\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Array.<String>} [options.fields] - Fetching field names in retrieving record\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\r\n * @returns {Promise.<Record|Array.<Record>>}\r\n */\r\nConnection.prototype.retrieve = function(type, ids, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  return (\r\n    _.isArray(ids) ?\r\n      (this._supports('sobject-collection') ? // check whether SObject collection API is supported\r\n        this._retrieveMany(type, ids, options) :\r\n        this._retrieveParallel(type, ids, options)) :\r\n      this._retrieveSingle(type, ids, options)\r\n  ).thenCall(callback);\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._retrieveSingle = function(type, id, options) {\r\n  if (!id) {\r\n    return Promise.reject(new Error('Invalid record ID. Specify valid record ID value'));\r\n  }\r\n  var url = [ this._baseUrl(), \"sobjects\", type, id ].join('/');\r\n  if (options.fields) {\r\n    url += '?fields=' + options.fields.join(',');\r\n  }\r\n  return this.request({\r\n    method: 'GET',\r\n    url: url,\r\n    headers: options.headers,\r\n  });\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._retrieveParallel = function(type, ids, options) {\r\n  if (ids.length > this.maxRequest) {\r\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\r\n  }\r\n  var self = this;\r\n  return Promise.all(\r\n    ids.map(function(id) {\r\n      return self._retrieveSingle(type, id, options).catch(function(err) {\r\n        if (options.allOrNone || err.errorCode !== 'NOT_FOUND') {\r\n          throw err;\r\n        }\r\n        return null;\r\n      });\r\n    })\r\n  );\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._retrieveMany = function(type, ids, options) {\r\n  if (ids.length === 0) {\r\n    return Promise.resolve([]);\r\n  }\r\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\", type ].join('/');\r\n  var self = this;\r\n  return (\r\n    options.fields ?\r\n      Promise.resolve(options.fields) :\r\n      new Promise(function(resolve, reject) {\r\n        self.describe$(type, function(err, so) {\r\n          if (err) {\r\n            reject(err);\r\n          } else {\r\n            var fields = so.fields.map(function(field) {\r\n              return field.name;\r\n            });\r\n            resolve(fields);\r\n          }\r\n        });\r\n      })\r\n  ).then(function(fields) {\r\n    return self.request({\r\n      method : 'POST',\r\n      url : url,\r\n      body : JSON.stringify({\r\n        ids : ids,\r\n        fields : fields\r\n      }),\r\n      headers : _.defaults(options.headers || {}, {\r\n        \"Content-Type\" : \"application/json\"\r\n      })\r\n    });\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * @typedef RecordResult\r\n * @prop {Boolean} success - The result is succeessful or not\r\n * @prop {String} [id] - Record ID\r\n * @prop {Array.<Object>} [errors] - Errors (available when success = false)\r\n */\r\n\r\n/** @private */\r\nConnection.prototype._toRecordResult = function(id, err) {\r\n  var error = {\r\n    statusCode: err.errorCode,\r\n    message: err.message\r\n  };\r\n  if (err.content) { error.content = err.content; } // preserve External id duplication message\r\n  if (err.fields) { error.fields = err.fields; } // preserve DML exception occurred fields\r\n  var result = {\r\n    success: false,\r\n    errors: [error]\r\n  };\r\n  if (id) { result.id = id; }\r\n  return result;\r\n};\r\n\r\n/**\r\n * Synonym of Connection#create()\r\n *\r\n * @method Connection#insert\r\n * @param {String} type - SObject Type\r\n * @param {Object|Array.<Object>} records - A record or array of records to create\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Create records\r\n *\r\n * @method Connection#create\r\n * @param {String} type - SObject Type\r\n * @param {Record|Array.<Record>} records - A record or array of records to create\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nConnection.prototype.insert =\r\nConnection.prototype.create = function(type, records, options, callback) {\r\n  if (!_.isString(type)) {\r\n    // reverse order\r\n    callback = options;\r\n    options = records;\r\n    records = type;\r\n    type = null;\r\n  }\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  return (\r\n    _.isArray(records) ?\r\n      (this._supports('sobject-collection') ? // check whether SObject collection API is supported\r\n        this._createMany(type, records, options) :\r\n        this._createParallel(type, records, options)) :\r\n      this._createSingle(type, records, options)\r\n  ).thenCall(callback);\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._createSingle = function(type, record, options) {\r\n  var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\r\n  if (!sobjectType) {\r\n    return Promise.reject(new Error('No SObject Type defined in record'));\r\n  }\r\n  record = _.clone(record);\r\n  delete record.Id;\r\n  delete record.type;\r\n  delete record.attributes;\r\n  var url = [ this._baseUrl(), \"sobjects\", sobjectType ].join('/');\r\n  return this.request({\r\n    method : 'POST',\r\n    url : url,\r\n    body : JSON.stringify(record),\r\n    headers : _.defaults(options.headers || {}, {\r\n      \"Content-Type\" : \"application/json\"\r\n    })\r\n  });\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._createParallel = function(type, records, options) {\r\n  if (records.length > this.maxRequest) {\r\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\r\n  }\r\n  var self = this;\r\n  return Promise.all(\r\n    records.map(function(record) {\r\n      return self._createSingle(type, record, options).catch(function(err) {\r\n        // be aware that allOrNone in parallel mode will not revert the other successful requests\r\n        // it only raises error when met at least one failed request.\r\n        if (options.allOrNone || !err.errorCode) {\r\n          throw err;\r\n        }\r\n        return this._toRecordResult(null, err);\r\n      });\r\n    })\r\n  );\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._createMany = function(type, records, options) {\r\n  if (records.length === 0) {\r\n    return Promise.resolve([]);\r\n  }\r\n  if (records.length > MAX_DML_COUNT && options.allowRecursive) {\r\n    var self = this;\r\n    return self._createMany(type, records.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\r\n      return self._createMany(type, records.slice(MAX_DML_COUNT), options).then(function(rets2) {\r\n        return rets1.concat(rets2);\r\n      });\r\n    });\r\n  }\r\n  records = _.map(records, function(record) {\r\n    var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\r\n    if (!sobjectType) {\r\n      return Promise.reject(new Error('No SObject Type defined in record'));\r\n    }\r\n    record = _.clone(record);\r\n    delete record.Id;\r\n    delete record.type;\r\n    record.attributes = { type : sobjectType };\r\n    return record;\r\n  });\r\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\" ].join('/');\r\n  return this.request({\r\n    method : 'POST',\r\n    url : url,\r\n    body : JSON.stringify({\r\n      allOrNone : options.allOrNone || false,\r\n      records : records\r\n    }),\r\n    headers : _.defaults(options.headers || {}, {\r\n      \"Content-Type\" : \"application/json\"\r\n    })\r\n  });\r\n};\r\n\r\n/**\r\n * Update records\r\n *\r\n * @param {String} type - SObject Type\r\n * @param {Record|Array.<Record>} records - A record or array of records to update\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nConnection.prototype.update = function(type, records, options, callback) {\r\n  if (!_.isString(type)) {\r\n    // reverse order\r\n    callback = options;\r\n    options = records;\r\n    records = type;\r\n    type = null;\r\n  }\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  return (\r\n    _.isArray(records) ?\r\n      (this._supports('sobject-collection') ? // check whether SObject collection API is supported\r\n        this._updateMany(type, records, options) :\r\n        this._updateParallel(type, records, options)) :\r\n      this._updateSingle(type, records, options)\r\n  ).thenCall(callback);\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._updateSingle = function(type, record, options) {\r\n  var id = record.Id;\r\n  if (!id) {\r\n    return Promise.reject(new Error('Record id is not found in record.'));\r\n  }\r\n  var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\r\n  if (!sobjectType) {\r\n    return Promise.reject(new Error('No SObject Type defined in record'));\r\n  }\r\n  record = _.clone(record);\r\n  delete record.Id;\r\n  delete record.type;\r\n  delete record.attributes;\r\n  var url = [ this._baseUrl(), \"sobjects\", sobjectType, id ].join('/');\r\n  return this.request({\r\n    method : 'PATCH',\r\n    url : url,\r\n    body : JSON.stringify(record),\r\n    headers : _.defaults(options.headers || {}, {\r\n      \"Content-Type\" : \"application/json\"\r\n    })\r\n  }, {\r\n    noContentResponse: { id : id, success : true, errors : [] }\r\n  });\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._updateParallel = function(type, records, options) {\r\n  if (records.length > this.maxRequest) {\r\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\r\n  }\r\n  var self = this;\r\n  return Promise.all(\r\n    records.map(function(record) {\r\n      return self._updateSingle(type, record, options).catch(function(err) {\r\n        // be aware that allOrNone in parallel mode will not revert the other successful requests\r\n        // it only raises error when met at least one failed request.\r\n        if (options.allOrNone || !err.errorCode) {\r\n          throw err;\r\n        }\r\n        return this._toRecordResult(record.Id, err);\r\n      });\r\n    })\r\n  );\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._updateMany = function(type, records, options) {\r\n  if (records.length === 0) {\r\n    return Promise.resolve([]);\r\n  }\r\n  if (records.length > MAX_DML_COUNT && options.allowRecursive) {\r\n    var self = this;\r\n    return self._updateMany(type, records.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\r\n      return self._updateMany(type, records.slice(MAX_DML_COUNT), options).then(function(rets2) {\r\n        return rets1.concat(rets2);\r\n      });\r\n    });\r\n  }\r\n  records = _.map(records, function(record) {\r\n    var id = record.Id;\r\n    if (!id) {\r\n      throw new Error('Record id is not found in record.');\r\n    }\r\n    var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\r\n    if (!sobjectType) {\r\n      throw new Error('No SObject Type defined in record');\r\n    }\r\n    record = _.clone(record);\r\n    delete record.Id;\r\n    record.id = id;\r\n    delete record.type;\r\n    record.attributes = { type : sobjectType };\r\n    return record;\r\n  });\r\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\" ].join('/');\r\n  return this.request({\r\n    method : 'PATCH',\r\n    url : url,\r\n    body : JSON.stringify({\r\n      allOrNone : options.allOrNone || false,\r\n      records : records\r\n    }),\r\n    headers : _.defaults(options.headers || {}, {\r\n      \"Content-Type\" : \"application/json\"\r\n    })\r\n  });\r\n};\r\n\r\n/**\r\n * Upsert records\r\n *\r\n * @param {String} type - SObject Type\r\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\r\n * @param {String} extIdField - External ID field name\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nConnection.prototype.upsert = function(type, records, extIdField, options, callback) {\r\n  // You can omit \"type\" argument, when the record includes type information.\r\n  if (!_.isString(type)) {\r\n    // reverse order\r\n    callback = options;\r\n    options = extIdField;\r\n    extIdField = records;\r\n    records = type;\r\n    type = null;\r\n  }\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  var self = this;\r\n  var isArray = _.isArray(records);\r\n  records = isArray ? records : [ records ];\r\n  if (records.length > this.maxRequest) {\r\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);\r\n  }\r\n  return Promise.all(\r\n    _.map(records, function(record) {\r\n      var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\r\n      var extId = record[extIdField];\r\n      record = _.clone(record);\r\n      delete record[extIdField];\r\n      delete record.type;\r\n      delete record.attributes;\r\n\r\n      var url = [ self._baseUrl(), \"sobjects\", sobjectType, extIdField, extId ].join('/');\r\n      return self.request({\r\n        method : 'PATCH',\r\n        url : url,\r\n        body : JSON.stringify(record),\r\n        headers : _.defaults(options.headers || {}, {\r\n          \"Content-Type\" : \"application/json\"\r\n        })\r\n      }, {\r\n        noContentResponse: { success : true, errors : [] }\r\n      })\r\n      .catch(function(err) {\r\n        // be aware that `allOrNone` option in upsert method will not revert the other successful requests\r\n        // it only raises error when met at least one failed request.\r\n        if (!isArray || options.allOrNone || !err.errorCode) { throw err; }\r\n        return self._toRecordResult(null, err);\r\n      })\r\n    })\r\n  ).then(function(results) {\r\n    return !isArray && _.isArray(results) ? results[0] : results;\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Synonym of Connection#destroy()\r\n *\r\n * @method Connection#delete\r\n * @param {String} type - SObject Type\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Synonym of Connection#destroy()\r\n *\r\n * @method Connection#del\r\n * @param {String} type - SObject Type\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Delete records\r\n *\r\n * @method Connection#destroy\r\n * @param {String} type - SObject Type\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\r\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nConnection.prototype[\"delete\"] =\r\nConnection.prototype.del =\r\nConnection.prototype.destroy = function(type, ids, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  return (\r\n    _.isArray(ids) ?\r\n      (this._supports('sobject-collection') ? // check whether SObject collection API is supported\r\n        this._destroyMany(type, ids, options) :\r\n        this._destroyParallel(type, ids, options)) :\r\n      this._destroySingle(type, ids, options)\r\n  ).thenCall(callback);\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._destroySingle = function(type, id, options) {\r\n  var url = [ this._baseUrl(), \"sobjects\", type, id ].join('/');\r\n  return this.request({\r\n    method : 'DELETE',\r\n    url : url,\r\n    headers: options.headers || null\r\n  }, {\r\n    noContentResponse: { id : id, success : true, errors : [] }\r\n  });\r\n};\r\n\r\n/** @private */\r\nConnection.prototype._destroyParallel = function(type, ids, options) {\r\n  if (ids.length > this.maxRequest) {\r\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\r\n  }\r\n  var self = this;\r\n  return Promise.all(\r\n    ids.map(function(id) {\r\n      return self._destroySingle(type, id, options).catch(function(err) {\r\n        // be aware that `allOrNone` option in parallel mode will not revert the other successful requests\r\n        // it only raises error when met at least one failed request.\r\n        if (options.allOrNone || !err.errorCode) {\r\n          throw err;\r\n        }\r\n        return this._toRecordResult(id, err);\r\n      });\r\n    })\r\n  );\r\n};\r\n\r\n\r\n/** @private */\r\nConnection.prototype._destroyMany = function(type, ids, options) {\r\n  if (ids.length === 0) {\r\n    return Promise.resolve([]);\r\n  }\r\n  if (ids.length > MAX_DML_COUNT && options.allowRecursive) {\r\n    var self = this;\r\n    return self._destroyMany(type, ids.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\r\n      return self._destroyMany(type, ids.slice(MAX_DML_COUNT), options).then(function(rets2) {\r\n        return rets1.concat(rets2);\r\n      });\r\n    });\r\n  }\r\n  var url = [ this._baseUrl(), \"composite\", \"sobjects?ids=\" ].join('/') + ids.join(',');\r\n  if (options.allOrNone) {\r\n    url += '&allOrNone=true';\r\n  }\r\n  return this.request({\r\n    method : 'DELETE',\r\n    url : url,\r\n    headers: options.headers || null\r\n  });\r\n};\r\n\r\n/**\r\n * Execute search by SOSL\r\n *\r\n * @param {String} sosl - SOSL string\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\nConnection.prototype.search = function(sosl, callback) {\r\n  var url = this._baseUrl() + \"/search?q=\" + encodeURIComponent(sosl);\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Result returned by describeSObject call\r\n *\r\n * @typedef {Object} DescribeSObjectResult\r\n */\r\n/**\r\n * Synonym of Connection#describe()\r\n *\r\n * @method Connection#describeSObject\r\n * @param {String} type - SObject Type\r\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\r\n * @returns {Promise.<DescribeSObjectResult>}\r\n */\r\n/**\r\n * Describe SObject metadata\r\n *\r\n * @method Connection#describe\r\n * @param {String} type - SObject Type\r\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\r\n * @returns {Promise.<DescribeSObjectResult>}\r\n */\r\nConnection.prototype.describe =\r\nConnection.prototype.describeSObject = function(type, callback) {\r\n  var url = [ this._baseUrl(), \"sobjects\", type, \"describe\" ].join('/');\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * Result returned by describeGlobal call\r\n *\r\n * @typedef {Object} DescribeGlobalResult\r\n */\r\n/**\r\n * Describe global SObjects\r\n *\r\n * @param {Callback.<DescribeGlobalResult>} [callback] - Callback function\r\n * @returns {Promise.<DescribeGlobalResult>}\r\n */\r\nConnection.prototype.describeGlobal = function(callback) {\r\n  var url = this._baseUrl() + \"/sobjects\";\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * Get SObject instance\r\n *\r\n * @param {String} type - SObject Type\r\n * @returns {SObject}\r\n */\r\nConnection.prototype.sobject = function(type) {\r\n  this.sobjects = this.sobjects || {};\r\n  var sobject = this.sobjects[type] =\r\n    this.sobjects[type] || new SObject(this, type);\r\n  return sobject;\r\n};\r\n\r\n/**\r\n * Get identity information of current user\r\n *\r\n * @param {Object} [options] - Identity call options\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request\r\n * @param {Callback.<IdentityInfo>} [callback] - Callback function\r\n * @returns {Promise.<IdentityInfo>}\r\n */\r\nConnection.prototype.identity = function(options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  var self = this;\r\n  var idUrl = this.userInfo && this.userInfo.url;\r\n  return Promise.resolve(\r\n    idUrl ?\r\n    { identity: idUrl } :\r\n    this.request({ method: 'GET', url: this._baseUrl(), headers: options.headers })\r\n  ).then(function(res) {\r\n    var url = res.identity;\r\n    return self.request({ method: 'GET', url: url });\r\n  }).then(function(res) {\r\n    self.userInfo = {\r\n      id: res.user_id,\r\n      organizationId: res.organization_id,\r\n      url: res.id\r\n    };\r\n    return res;\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * @typedef UserInfo\r\n * @prop {String} id - User ID\r\n * @prop {String} organizationId - Organization ID\r\n * @prop {String} url - Identity URL of the user\r\n */\r\n\r\n/**\r\n * Authorize (using oauth2 web server flow)\r\n *\r\n * @param {String} code - Authorization code\r\n * @param {Object} [params] - Optional parameters to send in token retrieval\r\n * @param {String} [params.code_verifier] - Code verifier value (RFC 7636 - Proof Key of Code Exchange)\r\n * @param {Callback.<UserInfo>} [callback] - Callback function\r\n * @returns {Promise.<UserInfo>}\r\n */\r\nConnection.prototype.authorize = function(code, params, callback) {\r\n  if (typeof params === 'function') {\r\n    callback = params;\r\n    params = {};\r\n  }\r\n  var self = this;\r\n  var logger = this._logger;\r\n\r\n  return this.oauth2.requestToken(code, params).then(function(res) {\r\n    var userInfo = parseIdUrl(res.id);\r\n    self.initialize({\r\n      instanceUrl : res.instance_url,\r\n      accessToken : res.access_token,\r\n      refreshToken : res.refresh_token,\r\n      userInfo: userInfo\r\n    });\r\n    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);\r\n    return userInfo;\r\n\r\n  }).thenCall(callback);\r\n\r\n};\r\n\r\n\r\n/**\r\n * Login to Salesforce\r\n *\r\n * @param {String} username - Salesforce username\r\n * @param {String} password - Salesforce password (and security token, if required)\r\n * @param {Callback.<UserInfo>} [callback] - Callback function\r\n * @returns {Promise.<UserInfo>}\r\n */\r\nConnection.prototype.login = function(username, password, callback) {\r\n  // register refreshDelegate for session expiration\r\n  this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, createUsernamePasswordRefreshFn(username, password));\r\n  if (this.oauth2 && this.oauth2.clientId && this.oauth2.clientSecret) {\r\n    return this.loginByOAuth2(username, password, callback);\r\n  } else {\r\n    return this.loginBySoap(username, password, callback);\r\n  }\r\n};\r\n\r\n/** @private **/\r\nfunction createUsernamePasswordRefreshFn(username, password) {\r\n  return function(conn, callback) {\r\n    conn.login(username, password, function(err) {\r\n      if (err) { return callback(err); }\r\n      callback(null, conn.accessToken);\r\n    });\r\n  };\r\n}\r\n\r\n/**\r\n * Login by OAuth2 username & password flow\r\n *\r\n * @param {String} username - Salesforce username\r\n * @param {String} password - Salesforce password (and security token, if required)\r\n * @param {Callback.<UserInfo>} [callback] - Callback function\r\n * @returns {Promise.<UserInfo>}\r\n */\r\nConnection.prototype.loginByOAuth2 = function(username, password, callback) {\r\n  var self = this;\r\n  var logger = this._logger;\r\n  return this.oauth2.authenticate(username, password).then(function(res) {\r\n    var userInfo = parseIdUrl(res.id);\r\n    self.initialize({\r\n      instanceUrl : res.instance_url,\r\n      accessToken : res.access_token,\r\n      userInfo: userInfo\r\n    });\r\n    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);\r\n    return userInfo;\r\n\r\n  }).thenCall(callback);\r\n\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nfunction esc(str) {\r\n  return str && String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;')\r\n                           .replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\r\n}\r\n\r\n/**\r\n * Login by SOAP web service API\r\n *\r\n * @param {String} username - Salesforce username\r\n * @param {String} password - Salesforce password (and security token, if required)\r\n * @param {Callback.<UserInfo>} [callback] - Callback function\r\n * @returns {Promise.<UserInfo>}\r\n */\r\nConnection.prototype.loginBySoap = function(username, password, callback) {\r\n  var self = this;\r\n  var logger = this._logger;\r\n  var body = [\r\n    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\r\n      '<se:Header/>',\r\n      '<se:Body>',\r\n        '<login xmlns=\"urn:partner.soap.sforce.com\">',\r\n          '<username>' + esc(username) + '</username>',\r\n          '<password>' + esc(password) + '</password>',\r\n        '</login>',\r\n      '</se:Body>',\r\n    '</se:Envelope>'\r\n  ].join('');\r\n\r\n  var soapLoginEndpoint = [ this.loginUrl, \"services/Soap/u\", this.version ].join('/');\r\n\r\n  return this._transport.httpRequest({\r\n    method : 'POST',\r\n    url : soapLoginEndpoint,\r\n    body : body,\r\n    headers : {\r\n      \"Content-Type\" : \"text/xml\",\r\n      \"SOAPAction\" : '\"\"'\r\n    }\r\n  }).then(function(response) {\r\n    var m;\r\n    if (response.statusCode >= 400) {\r\n      m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\r\n      var faultstring = m && m[1];\r\n      throw new Error(faultstring || response.body);\r\n    }\r\n    logger.debug(\"SOAP response = \" + response.body);\r\n    m = response.body.match(/<serverUrl>([^<]+)<\\/serverUrl>/);\r\n    var serverUrl = m && m[1];\r\n    m = response.body.match(/<sessionId>([^<]+)<\\/sessionId>/);\r\n    var sessionId = m && m[1];\r\n    m = response.body.match(/<userId>([^<]+)<\\/userId>/);\r\n    var userId = m && m[1];\r\n    m = response.body.match(/<organizationId>([^<]+)<\\/organizationId>/);\r\n    var orgId = m && m[1];\r\n    var idUrl = soapLoginEndpoint.split('/').slice(0, 3).join('/');\r\n    idUrl += \"/id/\" + orgId + \"/\" + userId;\r\n    var userInfo = {\r\n      id: userId,\r\n      organizationId: orgId,\r\n      url: idUrl\r\n    };\r\n    self.initialize({\r\n      serverUrl: serverUrl.split('/').slice(0, 3).join('/'),\r\n      sessionId: sessionId,\r\n      userInfo: userInfo\r\n    });\r\n    logger.debug(\"<login> completed. user id = \" + userId + \", org id = \" + orgId);\r\n    return userInfo;\r\n\r\n  }).thenCall(callback);\r\n\r\n};\r\n\r\n/**\r\n * Logout the current session \r\n *\r\n * @param {Boolean} [revoke] - Revokes API Access if set to true\r\n * @param {Callback.<undefined>} [callback] - Callback function\r\n * @returns {Promise.<undefined>}\r\n */\r\nConnection.prototype.logout = function(revoke, callback) {\r\n  if (typeof revoke === 'function') {\r\n    callback = revoke;\r\n    revoke = false;\r\n  }\r\n\r\n  if (this._sessionType === \"oauth2\") {\r\n    return this.logoutByOAuth2(revoke, callback);\r\n  } else {\r\n    return this.logoutBySoap(revoke, callback);\r\n  }\r\n};\r\n\r\n/**\r\n * Logout the current session by revoking access token via OAuth2 session revoke\r\n *\r\n * @param {Boolean} [revoke] - Revokes API Access if set to true\r\n * @param {Callback.<undefined>} [callback] - Callback function\r\n * @returns {Promise.<undefined>}\r\n */\r\nConnection.prototype.logoutByOAuth2 = function(revoke, callback) {\r\n  if (typeof revoke === 'function') {\r\n    callback = revoke;\r\n    revoke = false;\r\n  }\r\n  var self = this;\r\n  var logger = this._logger;\r\n\r\n  return this.oauth2.revokeToken(revoke ? this.refreshToken : this.accessToken).then(function() {\r\n    // Destroy the session bound to this connection\r\n    self.accessToken = null;\r\n    self.userInfo = null;\r\n    self.refreshToken = null;\r\n    self.instanceUrl = null;\r\n    self.cache.clear();\r\n\r\n    // nothing useful returned by logout API, just return\r\n    return undefined;\r\n  }).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * Logout the session by using SOAP web service API\r\n *\r\n * @param {Boolean} [revoke] - Revokes API Access if set to true\r\n * @param {Callback.<undefined>} [callback] - Callback function\r\n * @returns {Promise.<undefined>}\r\n */\r\nConnection.prototype.logoutBySoap = function(revoke, callback) {\r\n  if (typeof revoke === 'function') {\r\n    callback = revoke;\r\n    revoke = false;\r\n  }\r\n  var self = this;\r\n  var logger = this._logger;\r\n\r\n  var body = [\r\n    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\r\n      '<se:Header>',\r\n        '<SessionHeader xmlns=\"urn:partner.soap.sforce.com\">',\r\n          '<sessionId>' + esc(revoke ? this.refreshToken : this.accessToken) + '</sessionId>',\r\n        '</SessionHeader>',\r\n      '</se:Header>',\r\n      '<se:Body>',\r\n        '<logout xmlns=\"urn:partner.soap.sforce.com\"/>',\r\n      '</se:Body>',\r\n    '</se:Envelope>'\r\n  ].join('');\r\n\r\n  return this._transport.httpRequest({\r\n    method : 'POST',\r\n    url : [ this.instanceUrl, \"services/Soap/u\", this.version ].join('/'),\r\n    body : body,\r\n    headers : {\r\n      \"Content-Type\" : \"text/xml\",\r\n      \"SOAPAction\" : '\"\"'\r\n    }\r\n  }).then(function(response) {\r\n    logger.debug(\"SOAP statusCode = \" + response.statusCode + \", response = \" + response.body);\r\n    if (response.statusCode >= 400) {\r\n      var m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\r\n      var faultstring = m && m[1];\r\n      throw new Error(faultstring || response.body);\r\n    }\r\n\r\n    // Destroy the session bound to this connection\r\n    self.accessToken = null;\r\n    self.userInfo = null;\r\n    self.refreshToken = null;\r\n    self.instanceUrl = null;\r\n    self.cache.clear();\r\n\r\n    // nothing useful returned by logout API, just return\r\n    return undefined;\r\n\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * List recently viewed records\r\n *\r\n * @param {String} [type] - SObject type\r\n * @param {Number} [limit] - Limit num to fetch\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\nConnection.prototype.recent = function(type, limit, callback) {\r\n  if (!_.isString(type)) {\r\n    callback = limit;\r\n    limit = type;\r\n    type = undefined;\r\n  }\r\n  if (!_.isNumber(limit)) {\r\n    callback = limit;\r\n    limit = undefined;\r\n  }\r\n  var url;\r\n  if (type) {\r\n    url = [ this._baseUrl(), \"sobjects\", type ].join('/');\r\n    return this.request(url).then(function(res) {\r\n      return limit ? res.recentItems.slice(0, limit) : res.recentItems;\r\n    }).thenCall(callback);\r\n  } else {\r\n    url = this._baseUrl() + \"/recent\";\r\n    if (limit) {\r\n      url += \"?limit=\" + limit;\r\n    }\r\n    return this.request(url).thenCall(callback);\r\n  }\r\n\r\n};\r\n\r\n/**\r\n * @typedef {Object} UpdatedRecordsInfo\r\n * @prop {String} latestDateCovered - The timestamp of the last date covered.\r\n * @prop {Array.<String>} ids - Updated record IDs.\r\n */\r\n\r\n/**\r\n * Retrieve updated records\r\n *\r\n * @param {String} type - SObject Type\r\n * @param {String|Date} start - start date or string representing the start of the interval\r\n * @param {String|Date} end - start date or string representing the end of the interval must be > start\r\n * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function\r\n * @returns {Promise.<UpdatedRecordsInfo>}\r\n */\r\nConnection.prototype.updated = function (type, start, end, callback) {\r\n  var url = [ this._baseUrl(), \"sobjects\", type, \"updated\" ].join('/');\r\n\r\n  if (typeof start === 'string') {\r\n    start = new Date(start);\r\n  }\r\n\r\n  if (start instanceof Date) {\r\n    start = formatDate(start);\r\n  }\r\n\r\n  if (start) {\r\n    url += \"?start=\" + encodeURIComponent(start);\r\n  }\r\n\r\n  if (typeof end === 'string') {\r\n    end = new Date(end);\r\n  }\r\n\r\n  if (end instanceof Date) {\r\n    end = formatDate(end);\r\n  }\r\n\r\n  if (end) {\r\n    url += \"&end=\" + encodeURIComponent(end);\r\n  }\r\n\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} DeletedRecordsInfo\r\n * @prop {String} earliestDateAvailable - The timestamp of the earliest date available\r\n * @prop {String} latestDateCovered - The timestamp of the last date covered\r\n * @prop {Array.<Object>} deletedRecords - Updated records\r\n * @prop {String} deletedRecords.id - Record ID\r\n * @prop {String} deletedRecords.deletedDate - The timestamp when this record was deleted\r\n */\r\n\r\n/**\r\n * Retrieve deleted records\r\n *\r\n * @param {String} type - SObject Type\r\n * @param {String|Date} start - start date or string representing the start of the interval\r\n * @param {String|Date} end - start date or string representing the end of the interval\r\n * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function\r\n * @returns {Promise.<DeletedRecordsInfo>}\r\n */\r\nConnection.prototype.deleted = function (type, start, end, callback) {\r\n  var url = [ this._baseUrl(), \"sobjects\", type, \"deleted\" ].join('/');\r\n\r\n  if (typeof start === 'string') {\r\n    start = new Date(start);\r\n  }\r\n\r\n  if (start instanceof Date) {\r\n    start = formatDate(start);\r\n  }\r\n\r\n  if (start) {\r\n    url += \"?start=\" + encodeURIComponent(start);\r\n  }\r\n\r\n  if (typeof end === 'string') {\r\n    end = new Date(end);\r\n  }\r\n\r\n  if (end instanceof Date) {\r\n    end = formatDate(end);\r\n  }\r\n\r\n  if (end) {\r\n    url += \"&end=\" + encodeURIComponent(end);\r\n  }\r\n\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} TabsInfo - See the API document for detail structure\r\n */\r\n\r\n/**\r\n * Returns a list of all tabs\r\n *\r\n * @param {Callback.<TabsInfo>} [callback] - Callback function\r\n * @returns {Promise.<TabsInfo>}\r\n */\r\nConnection.prototype.tabs = function(callback) {\r\n  var url = [ this._baseUrl(), \"tabs\" ].join('/');\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} LimitsInfo - See the API document for detail structure\r\n */\r\n\r\n/**\r\n * Returns curren system limit in the organization\r\n *\r\n * @param {Callback.<LimitsInfo>} [callback] - Callback function\r\n * @returns {Promise.<LimitsInfo>}\r\n */\r\nConnection.prototype.limits = function(callback) {\r\n  var url = [ this._baseUrl(), \"limits\" ].join('/');\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} ThemeInfo - See the API document for detail structure\r\n */\r\n\r\n/**\r\n * Returns a theme info\r\n *\r\n * @param {Callback.<ThemeInfo>} [callback] - Callback function\r\n * @returns {Promise.<ThemeInfo>}\r\n */\r\nConnection.prototype.theme = function(callback) {\r\n  var url = [ this._baseUrl(), \"theme\" ].join('/');\r\n  return this.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Returns all registered global quick actions\r\n *\r\n * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\r\n */\r\nConnection.prototype.quickActions = function(callback) {\r\n  return this.request(\"/quickActions\").thenCall(callback);\r\n};\r\n\r\n/**\r\n * Get reference for specified global quick aciton\r\n *\r\n * @param {String} actionName - Name of the global quick action\r\n * @returns {QuickAction}\r\n */\r\nConnection.prototype.quickAction = function(actionName) {\r\n  return new QuickAction(this, \"/quickActions/\" + actionName);\r\n};\r\n","/**\r\n * @file JSforce Core\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n'use strict';\r\n\r\nvar EventEmitter = require('events').EventEmitter;\r\n\r\nvar jsforce = module.exports = new EventEmitter();\r\njsforce.VERSION = require('./VERSION');\r\njsforce.Connection = require('./connection');\r\njsforce.OAuth2 = require('./oauth2');\r\njsforce.Date = jsforce.SfDate = require(\"./date\");\r\njsforce.RecordStream = require('./record-stream');\r\njsforce.Promise = require('./promise');\r\njsforce.require = require('./require');\r\n","'use strict';\r\n\r\nvar _ = require('lodash/core'),\r\n    csvParse = require('csv-parse'),\r\n    csvParseSync = require('csv-parse/lib/sync'),\r\n    csvStringify = require('csv-stringify'),\r\n    csvStringifySync = require('csv-stringify/lib/sync');\r\n\r\n/**\r\n * @private\r\n */\r\nfunction parseCSV(str, options) {\r\n  options = _.extend({}, options, { columns: true });\r\n  return csvParseSync(str, options);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction toCSV(records, options) {\r\n  options = _.extend({}, options, { header: true });\r\n  return csvStringifySync(records, options);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction parseCSVStream(options) {\r\n  options = _.extend({}, options, { columns: true });\r\n  return csvParse(options);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction serializeCSVStream(options) {\r\n  options = _.extend({}, options, { header: true });\r\n  return csvStringify(options);\r\n}\r\n\r\n\r\n/**\r\n * @protected\r\n */\r\nmodule.exports = {\r\n  parseCSV: parseCSV,\r\n  toCSV: toCSV,\r\n  parseCSVStream: parseCSVStream,\r\n  serializeCSVStream: serializeCSVStream\r\n};\r\n","'use strict';\r\n\r\nvar _ = require('lodash/core');\r\n\r\n/**\r\n * A date object to keep Salesforce date literal\r\n *\r\n * @class\r\n * @constructor\r\n * @see http://www.salesforce.com/us/developer/docs/soql_sosl/Content/sforce_api_calls_soql_select_dateformats.htm\r\n */\r\nvar SfDate = module.exports = function(literal) {\r\n  this._literal = literal;\r\n};\r\n\r\n/**\r\n * Returns literal when converted to string\r\n *\r\n * @override\r\n */\r\nSfDate.prototype.toString =\r\nSfDate.prototype.toJSON = function() { return this._literal; };\r\n\r\n\r\n/** @private **/\r\nfunction zeropad(n) { return (n<10 ? \"0\" : \"\") + n; }\r\n\r\n/**\r\n * Convert JavaScript date object to ISO8601 Date format (e.g. 2012-10-31)\r\n *\r\n * @param {String|Number|Date} date - Input date\r\n * @returns {SfDate} - Salesforce date literal with ISO8601 date format\r\n */\r\nSfDate.toDateLiteral = function(date) {\r\n  if (_.isNumber(date)) {\r\n    date = new Date(date);\r\n  } else if (_.isString(date)) {\r\n    date = SfDate.parseDate(date);\r\n  }\r\n  var yy = date.getFullYear();\r\n  var mm = date.getMonth()+1;\r\n  var dd = date.getDate();\r\n  var dstr = [ yy, zeropad(mm), zeropad(dd) ].join(\"-\");\r\n  return new SfDate(dstr);\r\n};\r\n\r\n/**\r\n * Convert JavaScript date object to ISO8601 DateTime format\r\n * (e.g. 2012-10-31T12:34:56Z)\r\n *\r\n * @param {String|Number|Date} date - Input date\r\n * @returns {SfDate} - Salesforce date literal with ISO8601 datetime format\r\n */\r\nSfDate.toDateTimeLiteral = function(date) {\r\n  if (_.isNumber(date)) {\r\n    date = new Date(date);\r\n  } else if (_.isString(date)) {\r\n    date = SfDate.parseDate(date);\r\n  }\r\n  var yy = date.getUTCFullYear();\r\n  var mm = date.getUTCMonth()+1;\r\n  var dd = date.getUTCDate();\r\n  var hh = date.getUTCHours();\r\n  var mi = date.getUTCMinutes();\r\n  var ss = date.getUTCSeconds();\r\n  var dtstr =\r\n    [ yy, zeropad(mm), zeropad(dd) ].join(\"-\") + \"T\" +\r\n    [ zeropad(hh), zeropad(mi), zeropad(ss) ].join(\":\") + \"Z\";\r\n  return new SfDate(dtstr);\r\n};\r\n\r\n/**\r\n * Parse IS08601 date(time) formatted string and return date instance\r\n *\r\n * @param {String} str\r\n * @returns {Date}\r\n */\r\nSfDate.parseDate = function(str) {\r\n  var d = new Date();\r\n  var regexp = /^([\\d]{4})-?([\\d]{2})-?([\\d]{2})(T([\\d]{2}):?([\\d]{2}):?([\\d]{2})(.([\\d]{3}))?(Z|([\\+\\-])([\\d]{2}):?([\\d]{2})))?$/;\r\n  var m = str.match(regexp);\r\n  if (m) {\r\n    d = new Date(0);\r\n    if (!m[4]) {\r\n      d.setFullYear(parseInt(m[1], 10));\r\n      d.setDate(parseInt(m[3], 10));\r\n      d.setMonth(parseInt(m[2], 10) - 1);\r\n      d.setHours(0);\r\n      d.setMinutes(0);\r\n      d.setSeconds(0);\r\n      d.setMilliseconds(0);\r\n    } else {\r\n      d.setUTCFullYear(parseInt(m[1], 10));\r\n      d.setUTCDate(parseInt(m[3], 10));\r\n      d.setUTCMonth(parseInt(m[2], 10) - 1);\r\n      d.setUTCHours(parseInt(m[5], 10));\r\n      d.setUTCMinutes(parseInt(m[6], 10));\r\n      d.setUTCSeconds(parseInt(m[7], 10));\r\n      d.setUTCMilliseconds(parseInt(m[9] || '0', 10));\r\n      if (m[10] && m[10] !== 'Z') {\r\n        var offset = parseInt(m[12],10) * 60 + parseInt(m[13], 10);\r\n        d.setTime((m[11] === '+' ? -1 : 1) * offset * 60 * 1000 +d.getTime());\r\n      }\r\n    }\r\n    return d;\r\n  } else {\r\n    throw new Error(\"Invalid date format is specified : \" + str);\r\n  }\r\n};\r\n\r\n/*\r\n * Pre-defined Salesforce Date Literals\r\n */\r\nvar SfDateLiterals = {\r\n  YESTERDAY: 1,\r\n  TODAY: 1,\r\n  TOMORROW: 1,\r\n  LAST_WEEK: 1,\r\n  THIS_WEEK: 1,\r\n  NEXT_WEEK: 1,\r\n  LAST_MONTH: 1,\r\n  THIS_MONTH: 1,\r\n  NEXT_MONTH: 1,\r\n  LAST_90_DAYS: 1,\r\n  NEXT_90_DAYS: 1,\r\n  LAST_N_DAYS: 2,\r\n  NEXT_N_DAYS: 2,\r\n  NEXT_N_WEEKS: 2,\r\n  LAST_N_WEEKS: 2,\r\n  NEXT_N_MONTHS: 2,\r\n  LAST_N_MONTHS: 2,\r\n  THIS_QUARTER: 1,\r\n  LAST_QUARTER: 1,\r\n  NEXT_QUARTER: 1,\r\n  NEXT_N_QUARTERS: 2,\r\n  LAST_N_QUARTERS: 2,\r\n  THIS_YEAR: 1,\r\n  LAST_YEAR: 1,\r\n  NEXT_YEAR: 1,\r\n  NEXT_N_YEARS: 2,\r\n  LAST_N_YEARS: 2,\r\n  THIS_FISCAL_QUARTER: 1,\r\n  LAST_FISCAL_QUARTER: 1,\r\n  NEXT_FISCAL_QUARTER: 1,\r\n  NEXT_N_FISCAL_QUARTERS:2,\r\n  LAST_N_FISCAL_QUARTERS:2,\r\n  THIS_FISCAL_YEAR:1,\r\n  LAST_FISCAL_YEAR:1,\r\n  NEXT_FISCAL_YEAR:1,\r\n  NEXT_N_FISCAL_YEARS: 2,\r\n  LAST_N_FISCAL_YEARS: 2\r\n};\r\n\r\nfor (var literal in SfDateLiterals) {\r\n  var type = SfDateLiterals[literal];\r\n  SfDate[literal] =\r\n   type === 1 ? new SfDate(literal) : createLiteralBuilder(literal);\r\n}\r\n\r\n/** @private **/\r\nfunction createLiteralBuilder(literal) {\r\n  return function(num) { return new SfDate(literal + \":\" + num); };\r\n}\r\n","'use strict';\r\n\r\nvar inherits = require('inherits'),\r\n    events = require('events'),\r\n    _ = require('lodash/core'),\r\n    Promise = require('./promise');\r\n\r\n/**\r\n * HTTP based API class with authorization hook\r\n *\r\n * @constructor\r\n * @extends events.EventEmitter\r\n * @param {Connection} conn - Connection object\r\n * @param {Object} [options] - Http API Options\r\n * @param {String} [options.responseType] - Overriding content mime-type in response\r\n * @param {Transport} [options.transport] - Transport for http api\r\n * @param {Object} [options.noContentResponse] - Alternative response when no content returned in response (= HTTP 204)\r\n */\r\nvar HttpApi = function(conn, options) {\r\n  options = options || {};\r\n  this._conn = conn;\r\n  this.on('resume', function(err) { conn.emit('resume', err); });\r\n  this._responseType = options.responseType;\r\n  this._transport = options.transport || conn._transport;\r\n  this._noContentResponse = options.noContentResponse;\r\n};\r\n\r\ninherits(HttpApi, events.EventEmitter);\r\n\r\n/**\r\n * Callout to API endpoint using http\r\n *\r\n * @param {Object} request - Http Request object\r\n * @param {String} request.url - Endpoint URL to request\r\n * @param {String} request.method - Http method for request\r\n * @param {Object} [request.headers] - Http request headers in hash object\r\n * @param {Callback.<Object>} callback - Callback function\r\n * @returns {Promise.<Object>} -\r\n */\r\nHttpApi.prototype.request = function(request, callback) {\r\n  var self = this;\r\n  var conn = this._conn;\r\n  var logger = conn._logger;\r\n  var refreshDelegate = this.getRefreshDelegate();\r\n  // remember previous instance url in case it changes after a refresh\r\n  var lastInstanceUrl = conn.instanceUrl;\r\n\r\n  var deferred = Promise.defer();\r\n\r\n  var onResume = function(err) {\r\n    if (err) {\r\n      deferred.reject(err);\r\n      return;\r\n    }\r\n    // check to see if the token refresh has changed the instance url\r\n    if(lastInstanceUrl !== conn.instanceUrl){\r\n      // if the instance url has changed\r\n      // then replace the current request urls instance url fragment\r\n      // with the updated instance url\r\n      request.url = request.url.replace(lastInstanceUrl,conn.instanceUrl);\r\n    }\r\n\r\n    self.request(request).then(function(response) {\r\n      deferred.resolve(response);\r\n    }, function(err) {\r\n      deferred.reject(err);\r\n    });\r\n  };\r\n\r\n  if (refreshDelegate && refreshDelegate._refreshing) {\r\n    refreshDelegate.once('resume', onResume);\r\n    return deferred.promise.thenCall(callback);\r\n  }\r\n\r\n  // hook before sending\r\n  self.beforeSend(request);\r\n\r\n  self.emit('request', request);\r\n  logger.debug(\"<request> method=\" + request.method + \", url=\" + request.url);\r\n  var requestTime = Date.now();\r\n\r\n  return this._transport.httpRequest(request).then(function(response) {\r\n    var responseTime = Date.now();\r\n    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");\r\n    logger.debug(\"<response> status=\" + response.statusCode + \", url=\" + request.url);\r\n\r\n    self.emit('response', response);\r\n    // Refresh token if session has been expired and requires authentication\r\n    // when session refresh delegate is available\r\n    if (self.isSessionExpired(response) && refreshDelegate) {\r\n      refreshDelegate.refresh(requestTime, onResume);\r\n      return deferred.promise;\r\n    }\r\n    if (self.isErrorResponse(response)) {\r\n      var err = self.getError(response);\r\n      throw err;\r\n    }\r\n    return self.getResponseBody(response);\r\n  }, function(err) {\r\n    var responseTime = Date.now();\r\n    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");\r\n    logger.error(err);\r\n    throw err;\r\n  })\r\n  .thenCall(callback);\r\n};\r\n\r\n/**\r\n * @protected\r\n */\r\nHttpApi.prototype.getRefreshDelegate = function() {\r\n  return this._conn._refreshDelegate;\r\n};\r\n\r\n/**\r\n *\r\n * @protected\r\n */\r\nHttpApi.prototype.beforeSend = function(request) {\r\n  request.headers = request.headers || {};\r\n  if (this._conn.accessToken) {\r\n    request.headers.Authorization = \"Bearer \" + this._conn.accessToken;\r\n  }\r\n  if (this._conn.callOptions) {\r\n    var callOptions = [];\r\n    for (var name in this._conn.callOptions) {\r\n      callOptions.push(name + \"=\" + this._conn.callOptions[name]);\r\n    }\r\n    request.headers[\"Sforce-Call-Options\"] = callOptions.join(', ');\r\n  }\r\n};\r\n\r\n/**\r\n * Detect response content mime-type\r\n * @protected\r\n */\r\nHttpApi.prototype.getResponseContentType = function(response) {\r\n  return this._responseType || response.headers && response.headers[\"content-type\"];\r\n};\r\n\r\n/**\r\n *\r\n */\r\nHttpApi.prototype.parseResponseBody = function(response) {\r\n  var contentType = this.getResponseContentType(response);\r\n  var parseBody = /^(text|application)\\/xml(;|$)/.test(contentType) ? parseXML :\r\n         /^application\\/json(;|$)/.test(contentType) ? parseJSON :\r\n         /^text\\/csv(;|$)/.test(contentType) ? parseCSV :\r\n         parseText;\r\n  try {\r\n    return parseBody(response.body);\r\n  } catch(e) {\r\n    return response.body;\r\n  }\r\n};\r\n\r\n/**\r\n * Get response body\r\n * @protected\r\n */\r\nHttpApi.prototype.getResponseBody = function(response) {\r\n  if (response.statusCode === 204) { // No Content\r\n    return this._noContentResponse;\r\n  }\r\n  var body = this.parseResponseBody(response);\r\n  var err;\r\n  if (this.hasErrorInResponseBody(body)) {\r\n    err = this.getError(response, body);\r\n    throw err;\r\n  }\r\n  if (response.statusCode === 300) { // Multiple Choices\r\n    err = new Error('Multiple records found');\r\n    err.name = \"MULTIPLE_CHOICES\";\r\n    err.content = body;\r\n    throw err;\r\n  }\r\n  return body;\r\n};\r\n\r\n/** @private */\r\nfunction parseJSON(str) {\r\n  return JSON.parse(str);\r\n}\r\n\r\n/** @private */\r\nfunction parseXML(str) {\r\n  var ret = {};\r\n  require('xml2js').parseString(str, { explicitArray: false }, function(err, result) {\r\n    ret = { error: err, result : result };\r\n  });\r\n  if (ret.error) { throw ret.error; }\r\n  return ret.result;\r\n}\r\n\r\n/** @private */\r\nfunction parseCSV(str) {\r\n  return require('./csv').parseCSV(str);\r\n}\r\n\r\n/** @private */\r\nfunction parseText(str) { return str; }\r\n\r\n\r\n/**\r\n * Detect session expiry\r\n * @protected\r\n */\r\nHttpApi.prototype.isSessionExpired = function(response) {\r\n  return response.statusCode === 401;\r\n};\r\n\r\n/**\r\n * Detect error response\r\n * @protected\r\n */\r\nHttpApi.prototype.isErrorResponse = function(response) {\r\n  return response.statusCode >= 400;\r\n};\r\n\r\n/**\r\n * Detect error in response body\r\n * @protected\r\n */\r\nHttpApi.prototype.hasErrorInResponseBody = function(body) {\r\n  return false;\r\n};\r\n\r\n/**\r\n * Parsing error message in response\r\n * @protected\r\n */\r\nHttpApi.prototype.parseError = function(body) {\r\n  var errors = body;\r\n  return _.isArray(errors) ? errors[0] : errors;\r\n};\r\n\r\n/**\r\n * Get error message in response\r\n * @protected\r\n */\r\nHttpApi.prototype.getError = function(response, body) {\r\n  var error;\r\n  try {\r\n    error = this.parseError(body || this.parseResponseBody(response));\r\n  } catch(e) {}\r\n  error = _.isObject(error) && _.isString(error.message) ? error : {\r\n    errorCode: 'ERROR_HTTP_' + response.statusCode,\r\n    message : response.body\r\n  };\r\n  var err = new Error(error.message);\r\n  err.name = error.errorCode;\r\n  for (var key in error) { err[key] = error[key]; }\r\n  return err;\r\n};\r\n\r\n/*-------------------------------------------------------------------------*/\r\n\r\n/**\r\n * @protected\r\n */\r\nvar SessionRefreshDelegate = function(conn, refreshFn) {\r\n  this._conn = conn;\r\n  this._refreshFn = refreshFn;\r\n  this._refreshing = false;\r\n};\r\n\r\ninherits(SessionRefreshDelegate, events.EventEmitter);\r\n\r\n/**\r\n * Refresh access token\r\n * @private\r\n */\r\nSessionRefreshDelegate.prototype.refresh = function(since, callback) {\r\n  // Callback immediately When refreshed after designated time\r\n  if (this._lastRefreshedAt > since) { return callback(); }\r\n  var self = this;\r\n  var conn = this._conn;\r\n  var logger = conn._logger;\r\n  self.once('resume', callback);\r\n  if (self._refreshing) { return; }\r\n  logger.debug(\"<refresh token>\");\r\n  self._refreshing = true;\r\n  return self._refreshFn(conn, function(err, accessToken, res) {\r\n    if (!err) {\r\n      logger.debug(\"Connection refresh completed.\");\r\n      conn.accessToken = accessToken;\r\n      conn.emit(\"refresh\", accessToken, res);\r\n    }\r\n    self._lastRefreshedAt = Date.now();\r\n    self._refreshing = false;\r\n    self.emit('resume', err);\r\n  });\r\n};\r\n\r\n\r\n/**\r\n *\r\n */\r\nHttpApi.SessionRefreshDelegate = SessionRefreshDelegate;\r\nmodule.exports = HttpApi;\r\n","'use strict';\r\n\r\n/**\r\n * @protected\r\n * @class\r\n * @constructor\r\n * @param {String|Number} logLevel - Log level\r\n */\r\nvar Logger = module.exports = function(logLevel) {\r\n  if (typeof logLevel === 'string') {\r\n    logLevel = LogLevels[logLevel];\r\n  }\r\n  if (!logLevel) {\r\n    logLevel = LogLevels.INFO;\r\n  }\r\n  this._logLevel = logLevel;\r\n};\r\n\r\n/**\r\n * @memberof Logger\r\n */\r\nvar LogLevels = Logger.LogLevels = {\r\n  \"DEBUG\" : 1,\r\n  \"INFO\" : 2,\r\n  \"WARN\" : 3,\r\n  \"ERROR\" : 4,\r\n  \"FATAL\" : 5\r\n};\r\n\r\n/**\r\n * Output log\r\n *\r\n * @param {String} level - Logging target level\r\n * @param {String} message - Message to log\r\n */\r\nLogger.prototype.log = function(level, message) {\r\n  if (this._logLevel <= level) {\r\n    if (level < LogLevels.ERROR) {\r\n      console.log(message);\r\n    } else {\r\n      console.error(message);\r\n    }\r\n  }\r\n};\r\n\r\nfor (var level in LogLevels) {\r\n  Logger.prototype[level.toLowerCase()] = createLoggerFunction(LogLevels[level]);\r\n}\r\n\r\nfunction createLoggerFunction(level) {\r\n  return function(message) { this.log(level, message); };\r\n}\r\n","/**\r\n * @file Manages Salesforce OAuth2 operations\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar querystring = require('querystring'),\r\n    _ = require('lodash/core'),\r\n    Transport = require('./transport');\r\n\r\nvar defaults = {\r\n  loginUrl : \"https://login.salesforce.com\"\r\n};\r\n\r\n/**\r\n * OAuth2 class\r\n *\r\n * @class\r\n * @constructor\r\n * @param {Object} options - OAuth2 config options\r\n * @param {String} [options.loginUrl] - Salesforce login server URL\r\n * @param {String} [options.authzServiceUrl] - OAuth2 authorization service URL. If not specified, it generates from default by adding to login server URL.\r\n * @param {String} [options.tokenServiceUrl] - OAuth2 token service URL. If not specified it generates from default by adding to login server URL.\r\n * @param {String} options.clientId - OAuth2 client ID.\r\n * @param {String} [options.clientSecret] - OAuth2 client secret (This is optional for public client).\r\n * @param {String} options.redirectUri - URI to be callbacked from Salesforce OAuth2 authorization service.\r\n */\r\nvar OAuth2 = module.exports = function(options) {\r\n  if (options.authzServiceUrl && options.tokenServiceUrl) {\r\n    this.loginUrl = options.authzServiceUrl.split('/').slice(0, 3).join('/');\r\n    this.authzServiceUrl = options.authzServiceUrl;\r\n    this.tokenServiceUrl = options.tokenServiceUrl;\r\n    this.revokeServiceUrl = options.revokeServiceUrl;\r\n  } else {\r\n    this.loginUrl = options.loginUrl || defaults.loginUrl;\r\n    this.authzServiceUrl = this.loginUrl + \"/services/oauth2/authorize\";\r\n    this.tokenServiceUrl = this.loginUrl + \"/services/oauth2/token\";\r\n    this.revokeServiceUrl = this.loginUrl + \"/services/oauth2/revoke\";\r\n  }\r\n  this.clientId = options.clientId;\r\n  this.clientSecret = options.clientSecret;\r\n  this.redirectUri = options.redirectUri;\r\n  if (options.proxyUrl) {\r\n    this._transport = new Transport.ProxyTransport(options.proxyUrl);\r\n  } else if (options.httpProxy) {\r\n    this._transport = new Transport.HttpProxyTransport(options.httpProxy);\r\n  } else {\r\n    this._transport = new Transport();\r\n  }\r\n};\r\n\r\n\r\n\r\n/**\r\n *\r\n */\r\n_.extend(OAuth2.prototype, /** @lends OAuth2.prototype **/ {\r\n\r\n  /**\r\n   * Get Salesforce OAuth2 authorization page URL to redirect user agent.\r\n   *\r\n   * @param {Object} params - Parameters\r\n   * @param {String} [params.scope] - Scope values in space-separated string\r\n   * @param {String} [params.state] - State parameter\r\n   * @param {String} [params.code_challenge] - Code challenge value (RFC 7636 - Proof Key of Code Exchange)\r\n   * @returns {String} Authorization page URL\r\n   */\r\n  getAuthorizationUrl : function(params) {\r\n    params = _.extend({\r\n      response_type : \"code\",\r\n      client_id : this.clientId,\r\n      redirect_uri : this.redirectUri\r\n    }, params || {});\r\n    return this.authzServiceUrl +\r\n      (this.authzServiceUrl.indexOf('?') >= 0 ? \"&\" : \"?\") +\r\n      querystring.stringify(params);\r\n  },\r\n\r\n  /**\r\n   * @typedef TokenResponse\r\n   * @type {Object}\r\n   * @property {String} access_token\r\n   * @property {String} refresh_token\r\n   */\r\n\r\n  /**\r\n   * OAuth2 Refresh Token Flow\r\n   *\r\n   * @param {String} refreshToken - Refresh token\r\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\r\n   * @returns {Promise.<TokenResponse>}\r\n   */\r\n  refreshToken : function(refreshToken, callback) {\r\n    var params = {\r\n      grant_type : \"refresh_token\",\r\n      refresh_token : refreshToken,\r\n      client_id : this.clientId\r\n    };\r\n    if (this.clientSecret) {\r\n      params.client_secret = this.clientSecret;\r\n    }\r\n    return this._postParams(params, callback);\r\n  },\r\n\r\n  /**\r\n   * OAuth2 Web Server Authentication Flow (Authorization Code)\r\n   * Access Token Request\r\n   *\r\n   * @param {String} code - Authorization code\r\n   * @param {Object} [params] - Optional parameters to send in token retrieval\r\n   * @param {String} [params.code_verifier] - Code verifier value (RFC 7636 - Proof Key of Code Exchange)\r\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\r\n   * @returns {Promise.<TokenResponse>}\r\n   */\r\n  requestToken : function(code, params, callback) {\r\n    if (typeof params === 'function') {\r\n      callback = params;\r\n      params = {};\r\n    }\r\n    params = _.extend({\r\n      grant_type : \"authorization_code\",\r\n      code : code,\r\n      client_id : this.clientId,\r\n      redirect_uri : this.redirectUri\r\n    }, params || {});\r\n    if (this.clientSecret) {\r\n      params.client_secret = this.clientSecret;\r\n    }\r\n    return this._postParams(params, callback);\r\n  },\r\n\r\n  /**\r\n   * OAuth2 Username-Password Flow (Resource Owner Password Credentials)\r\n   *\r\n   * @param {String} username - Salesforce username\r\n   * @param {String} password - Salesforce password\r\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\r\n   * @returns {Promise.<TokenResponse>}\r\n   */\r\n  authenticate : function(username, password, callback) {\r\n    return this._postParams({\r\n      grant_type : \"password\",\r\n      username : username,\r\n      password : password,\r\n      client_id : this.clientId,\r\n      client_secret : this.clientSecret,\r\n      redirect_uri : this.redirectUri\r\n    }, callback);\r\n  },\r\n\r\n  /**\r\n   * OAuth2 Revoke Session or API Token\r\n   *\r\n   * @param {String} token - Access or Refresh token to revoke. Passing in the Access token revokes the session. Passing in the Refresh token revokes API Access.\r\n   * @param {Callback.<undefined>} [callback] - Callback function\r\n   * @returns {Promise.<undefined>}\r\n   */\r\n  revokeToken : function(token, callback) {\r\n    return this._transport.httpRequest({\r\n      method : 'POST',\r\n      url : this.revokeServiceUrl,\r\n      body: querystring.stringify({ token: token }),\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n      }\r\n    }).then(function(response) {\r\n      if (response.statusCode >= 400) {\r\n        var res = querystring.parse(response.body);\r\n        if (!res || !res.error) {\r\n          res = { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };\r\n        }\r\n        var err = new Error(res.error_description);\r\n        err.name = res.error;\r\n        throw err;\r\n      }\r\n    }).thenCall(callback);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _postParams : function(params, callback) {\r\n    return this._transport.httpRequest({\r\n      method : 'POST',\r\n      url : this.tokenServiceUrl,\r\n      body : querystring.stringify(params),\r\n      headers : {\r\n        \"content-type\" : \"application/x-www-form-urlencoded\"\r\n      }\r\n    }).then(function(response) {\r\n      var res;\r\n      try {\r\n        res = JSON.parse(response.body);\r\n      } catch(e) {}\r\n      if (response.statusCode >= 400) {\r\n        res = res || { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };\r\n        var err = new Error(res.error_description);\r\n        err.name = res.error;\r\n        throw err;\r\n      }\r\n      return res;\r\n    }).thenCall(callback);\r\n  }\r\n\r\n});\r\n","/**\r\n * @file Process class to manage/run workflow rule and approval process\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar _ = require('lodash/core'),\r\n    Promise = require('./promise'),\r\n    Conneciton = require('./connection');\r\n\r\n/**\r\n * A class which manages process rules and approval processes\r\n *\r\n * @class\r\n * @param {Connection} conn - Connection object\r\n */\r\nvar Process = module.exports = function(conn) {\r\n  /**\r\n   * Object which mangages process rules\r\n   * @member {Process~ProcessRule} Process#rule\r\n   */\r\n  this.rule = new ProcessRule(conn);\r\n  /**\r\n   * Object which mangages approval process\r\n   * @member {Process~ApprovalProcess} Process#approval\r\n   */\r\n  this.approval = new ApprovalProcess(conn);\r\n};\r\n\r\n/**\r\n * A class which manages process (workflow) rules\r\n *\r\n * @class Process~ProcessRule\r\n * @param {Connection} conn - Connection object\r\n */\r\nvar ProcessRule = function(conn) {\r\n  this._conn = conn;\r\n};\r\n\r\n/**\r\n * @typedef {Object} Process~ProcessRuleDefinition\r\n * @prop {String} id - Id of approval process definition\r\n * @prop {String} name - Name of process rule definition\r\n * @prop {String} object - SObject name which process rule is defined\r\n */\r\n\r\n/**\r\n * Get all process rule definitions registered to sobjects\r\n *\r\n * @method Process~ProcessRule#list\r\n * @param {Callback.<Map.<String, Array.<Process~ProcessRuleDefinition>>>} [callback] - Callback function\r\n * @returns {Promise.<Map.<String, Array.<Process~ProcessRuleDefinition>>>}\r\n */\r\nProcessRule.prototype.list = function(callback) {\r\n  return this._conn.request(\"/process/rules\").then(function(res) {\r\n    return res.rules;\r\n  }).thenCall(callback);\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} Process~ProcessRuleTriggerResult\r\n * @prop {Boolean} success - Is process rule trigger succeeded or not\r\n * @prop {Array.<Object>} errors - Array of errors returned if the request failed\r\n */\r\n\r\n/**\r\n * Trigger process rule for given entities\r\n *\r\n * @method Process~ProcessRule#trigger\r\n * @param {String|Array.<String>} contextIds - Entity ID(s) to trigger workflow process\r\n * @param {Callback.<Process~ProcessRuleTriggerResult>} [callback] - Callback function\r\n * @returns {Promise.<Process~ProcessRuleTriggerResult>}\r\n */\r\nProcessRule.prototype.trigger = function(contextIds, callback) {\r\n  contextIds = _.isArray(contextIds) ? contextIds : [ contextIds ];\r\n  return this._conn.request({\r\n    method: \"POST\",\r\n    url: \"/process/rules/\",\r\n    body: JSON.stringify({\r\n      contextIds: contextIds\r\n    }),\r\n    headers: {\r\n      \"content-type\": \"application/json\"\r\n    }\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * A class which manages approval processes\r\n *\r\n * @class Process~ApprovalProcess\r\n * @param {Connection} conn - Connection object\r\n */\r\nvar ApprovalProcess = function(conn) {\r\n  this._conn = conn;\r\n};\r\n\r\n/**\r\n * @typedef {Object} Process~ApprovalProcessDefinition\r\n * @prop {String} id - Id of approval process definition\r\n * @prop {String} name - Name of approval process definition\r\n * @prop {String} object - SObject name which approval process is defined\r\n * @prop {Number} sortOrder - Processing order of approval in SObject\r\n */\r\n/**\r\n * Get all approval process definitions registered to sobjects\r\n *\r\n * @method Process~ApprovalProcess#list\r\n * @param {Callback.<Map.<String, Array.<ApprovalProcessDefinition>>>} [callback] - Callback function\r\n * @returns {Promise.<Map.<String, Array.<ApprovalProcessDefinition>>>}\r\n */\r\nApprovalProcess.prototype.list = function(callback) {\r\n  return this._conn.request(\"/process/approvals\").then(function(res) {\r\n    return res.approvals;\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} Process~ApprovalProcessRequestResult\r\n * @prop {Boolean} success - True if processing or approval completed successfully\r\n * @prop {Array.<Object>} errors - The set of errors returned if the request failed\r\n * @prop {Array.<String>} actorIds - IDs of the users who are currently assigned to this approval step\r\n * @prop {String} entityId - Object being processed\r\n * @prop {String} instanceId - ID of the ProcessInstance associated with the object submitted for processing\r\n * @prop {String} instanceStatus - Status of the current process instance (not an individual object but the entire process instance)\r\n * @prop {Array.<String>} newWorkItemIds - Case-insensitive IDs that point to ProcessInstanceWorkitem items (the set of pending approval requests)\r\n */\r\n\r\n/**\r\n * Send bulk requests for approval process\r\n *\r\n * @method Process~ApprovalProcess#request\r\n * @param {Array.<ApprovalProcessRequest>} requests - Array of approval process request to send\r\n * @param {Callback.<Array.<ApprovalProcessRequestResult>>} - Callback function\r\n * @param {Promise.<Array.<ApprovalProcessRequestResult>>}\r\n */\r\nApprovalProcess.prototype.request = function(requests, callback) {\r\n  requests = requests.map(function(req) {\r\n    return req._request ? req._request : req;\r\n  });\r\n  return this._conn.request({\r\n    method: 'POST',\r\n    url: '/process/approvals',\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify({ requests: requests })\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Create approval process request\r\n *\r\n * @private\r\n */\r\nApprovalProcess.prototype._createRequest = function(actionType, contextId, comments, options, callback) {\r\n  if (typeof comments === \"function\") {\r\n    callback = comments;\r\n    options = null;\r\n    comments = null;\r\n  }\r\n  if (typeof options === \"function\") {\r\n    callback = options;\r\n    options = null;\r\n  }\r\n  options = options || {};\r\n  var request = {\r\n    actionType: actionType,\r\n    contextId: contextId,\r\n    comments: comments\r\n  };\r\n  _.extend(request, options);\r\n  return new ApprovalProcessRequest(this, request).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Submit approval request for an item\r\n *\r\n * @method Process~ApprovalProcess#submit\r\n * @param {String} contextId - ID of the item that is being acted upon\r\n * @param {String} [comments] - Comment to add to the history step associated with this request\r\n * @param {Object} [options] - Request parameters\r\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\r\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\r\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\r\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\r\n * @returns {ApprovalProcessRequest}\r\n */\r\nApprovalProcess.prototype.submit = function(contextId, comments, options, callback) {\r\n  return this._createRequest(\"Submit\", contextId, comments, options, callback);\r\n};\r\n\r\n/**\r\n * Approve approval request for an item\r\n *\r\n * @method Process~ApprovalProcess#approve\r\n * @param {String} workitemId - ID of the item that is being acted upon\r\n * @param {String} [comments] - Comment to add to the history step associated with this request\r\n * @param {Object} [options] - Request parameters\r\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\r\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\r\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\r\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\r\n * @returns {ApprovalProcessRequest}\r\n */\r\nApprovalProcess.prototype.approve = function(workitemId, comments, options, callback) {\r\n  return this._createRequest(\"Approve\", workitemId, comments, options, callback);\r\n};\r\n\r\n/**\r\n * Reject approval request for an item\r\n *\r\n * @method Process~ApprovalProcess#reject\r\n * @param {String} workitemId - ID of the item that is being acted upon\r\n * @param {String} [comments] - Comment to add to the history step associated with this request\r\n * @param {Object} [options] - Request parameters\r\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\r\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\r\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\r\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\r\n * @returns {ApprovalProcessRequest}\r\n */\r\nApprovalProcess.prototype.reject = function(workitemId, comments, options, callback) {\r\n  return this._createRequest(\"Reject\", workitemId, comments, options, callback);\r\n};\r\n\r\n/**\r\n * A class representing approval process request\r\n *\r\n * @protected\r\n * @class Process~ApprovalProcessRequest\r\n * @implements {Promise.<Process~ApprovalProcessRequestResult>}\r\n * @param {Process~ApprovalProcess} process - ApprovalProcess\r\n * @param {Object} request - Request parameters\r\n * @param {String} request.actionType - Represents the kind of action to take: Submit, Approve, or Reject\r\n * @param {String} request.contextId - ID of the item that is being acted upon\r\n * @param {String} request.comments - Comment to add to the history step associated with this request\r\n * @param {Array.<String>} [request.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\r\n * @param {String} [request.processDefinitionNameOrId] - Developer name or ID of the process definition\r\n * @param {Boolean} [request.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\r\n */\r\nvar ApprovalProcessRequest = function(process, request) {\r\n  this._process = process;\r\n  this._request = request;\r\n};\r\n\r\n/**\r\n * Promise/A+ interface\r\n * http://promises-aplus.github.io/promises-spec/\r\n *\r\n * @method Process~ApprovalProcessRequest#then\r\n */\r\nApprovalProcessRequest.prototype.then = function(onResolve, onReject) {\r\n  if (!this._promise) {\r\n    this._promise = this._process.request([ this ]).then(function(rets) {\r\n      return rets[0];\r\n    });\r\n  }\r\n  this._promise.then(onResolve, onReject);\r\n};\r\n\r\n/**\r\n * Promise/A+ extension\r\n * Call \"then\" using given node-style callback function\r\n *\r\n * @method Process~ApprovalProcessRequest#thenCall\r\n */\r\nApprovalProcessRequest.prototype.thenCall = function(callback) {\r\n  return callback ? this.then(function(res) {\r\n    callback(null, res);\r\n  }, function(err) {\r\n    callback(err);\r\n  }) :\r\n  this;\r\n};\r\n","/*global process*/\r\n\r\n'use strict';\r\n\r\nvar _ = require('lodash/core');\r\n\r\n/**\r\n * @callback ResolvedCallback\r\n * @param {T} result - Resolved value\r\n * @returns {S}\r\n * @template T,S\r\n */\r\n\r\n/**\r\n * @callback RejectedCallback\r\n * @param {Error} reason - Rejected reason\r\n * @returns {S}\r\n * @template S\r\n */\r\n\r\n/**\r\n * @callback ResolveCallback\r\n * @param {T} result\r\n * @template T\r\n */\r\n\r\n/**\r\n * @callback RejectedCallback\r\n * @param {Error} reason - Rejected reason\r\n * @returns {S}\r\n * @template S\r\n */\r\n\r\n/**\r\n * @callback PromiseCallback\r\n * @param {ResolveCallback.<T>} resolve\r\n * @param {RejectCallback} reject\r\n * @template T\r\n */\r\n\r\n/**\r\n * Promise class with a little extension\r\n *\r\n * @class Promise\r\n * @constructor\r\n * @param {PromiseCallback.<T>}\r\n * @template T\r\n */\r\nvar Promise = require('promise/lib/es6-extensions');\r\n\r\n/**\r\n * The \"then\" method from the Promises/A+ specification\r\n *\r\n * @method Promise#then\r\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\r\n * @param {RejectedCallback.<S2>} [onRejected]\r\n * @returns {Promise.<S1|S2>}\r\n */\r\n\r\n/**\r\n * Call \"then\" using given node-style callback function.\r\n * This is basically same as \"nodeify\" except that it always return the original promise\r\n *\r\n * @method Promise#thenCall\r\n * @param {Callback.<T>} [callback] - Callback function\r\n * @returns {Promise}\r\n */\r\nPromise.prototype.thenCall = function(callback) {\r\n  if (_.isFunction(callback)) {\r\n    this.then(function(res) {\r\n      process.nextTick(function() {\r\n        callback(null, res);\r\n      });\r\n    }, function(err) {\r\n      process.nextTick(function() {\r\n        callback(err);\r\n      });\r\n    });\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * A sugar method, equivalent to promise.then(undefined, onRejected).\r\n *\r\n * @method Promise#catch\r\n * @param {RejectedCallback.<S>} onRejected\r\n * @returns {Promise.<S>}\r\n */\r\n\r\n/**\r\n * Synonym of Promise#catch\r\n *\r\n * @method Promise#fail\r\n * @param {RejectedCallback.<S>} onRejected\r\n * @returns {Promise.<S>}\r\n */\r\nPromise.prototype.fail = Promise.prototype['catch'];\r\n\r\n/**\r\n * Returns resolving promise with given reason\r\n *\r\n * @method Promise.resolve\r\n * @param {*} result - Resolved value\r\n * @returns {Promise}\r\n */\r\n\r\n/**\r\n * Returns rejecting promise with given reason\r\n *\r\n * @method Promise.reject\r\n * @param {Error} reason - Rejecting reason\r\n * @returns {Promise}\r\n */\r\n\r\n/**\r\n * Returns a promise that is fulfilled with an array containing the fulfillment value of each promise,\r\n * or is rejected with the same rejection reason as the first promise to be rejected.\r\n *\r\n * @method Promise.all\r\n * @param {Array.<Promise.<*>|*>} promises\r\n * @returns {Promise.<Array.<*>>}\r\n */\r\n\r\n/**\r\n * Returns a deferred object\r\n *\r\n * @method Promise.defer\r\n * @returns {Deferred}\r\n */\r\nPromise.defer = function() {\r\n  return new Deferred();\r\n};\r\n\r\n/**\r\n * Deferred object\r\n *\r\n * @protected\r\n * @constructor\r\n */\r\nvar Deferred = function() {\r\n  var self = this;\r\n  this.promise = new Promise(function(resolve, reject) {\r\n    self.resolve = resolve;\r\n    self.reject = reject;\r\n  });\r\n};\r\n\r\n/**\r\n * Resolve promise\r\n * @method Deferred#resolve\r\n * @param {*} result - Resolving result\r\n */\r\n\r\n/**\r\n * Reject promise\r\n * @method Deferred#reject\r\n * @param {Error} error - Rejecting reason\r\n */\r\n\r\n/**\r\n *\r\n */\r\nmodule.exports = Promise;\r\n","/*global process*/\r\n/**\r\n * @file Manages query for records in Salesforce\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar inherits = require('inherits'),\r\n    events = require('events'),\r\n    stream = require('readable-stream'),\r\n    _      = require('lodash/core'),\r\n    Promise = require('./promise'),\r\n    SfDate = require(\"./date\"),\r\n    SOQLBuilder = require(\"./soql-builder\"),\r\n    RecordStream = require(\"./record-stream\");\r\n\r\n/**\r\n * Query\r\n *\r\n * @protected\r\n * @class\r\n * @extends {stream.Readable}\r\n * @implements Promise.<T>\r\n * @template T\r\n * @param {Connection} conn - Connection object\r\n * @param {Object|String} config - Query config object or SOQL string\r\n * @param {Object} [options] - Default query options\r\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\r\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\r\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n */\r\nvar Query = module.exports = function(conn, config, options) {\r\n  Query.super_.call(this, { objectMode: true });\r\n\r\n  this._conn = conn;\r\n  if (_.isString(config)) { // if query config is string, it is given in SOQL.\r\n    this._soql = config;\r\n  } else if (config.locator && config.locator.indexOf(\"/\") >= 0) { // if locator given in url for next records\r\n    this._locator = config.locator.split(\"/\").pop();\r\n  } else {\r\n    this._config = config;\r\n    this.select(config.fields);\r\n    if (config.includes) {\r\n      this.include(config.includes);\r\n    }\r\n    if (config.sort) {\r\n      this.sort(config.sort);\r\n    }\r\n  }\r\n  this._options = _.defaults(options || {}, {\r\n    maxFetch: 10000,\r\n    autoFetch: false,\r\n    scanAll: false,\r\n    responseTarget: ResponseTargets.QueryResult\r\n  });\r\n  this._executed = false;\r\n  this._finished = false;\r\n  this._chaining = false;\r\n\r\n  this._deferred = Promise.defer();\r\n\r\n  var self = this;\r\n};\r\n\r\ninherits(Query, stream.Readable);\r\n\r\n/**\r\n * Select fields to include in the returning result\r\n *\r\n * @param {Object|Array.<String>|String} fields - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.select = function(fields) {\r\n  if (this._soql) {\r\n    throw Error(\"Cannot set select fields for the query which has already built SOQL.\");\r\n  }\r\n  fields = fields || '*';\r\n  if (_.isString(fields)) {\r\n    fields = fields.split(/\\s*,\\s*/);\r\n  } else if (_.isObject(fields) && !_.isArray(fields)) {\r\n    var _fields =  [];\r\n    for (var k in fields) {\r\n      if (fields[k]) { _fields.push(k); }\r\n    }\r\n    fields = _fields;\r\n  }\r\n  this._config.fields = fields;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set query conditions to filter the result records\r\n *\r\n * @param {Object|String} conditions - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.where = function(conditions) {\r\n  if (this._soql) {\r\n    throw Error(\"Cannot set where conditions for the query which has already built SOQL.\");\r\n  }\r\n  this._config.conditions = conditions;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Limit the returning result\r\n *\r\n * @param {Number} limit - Maximum number of records the query will return.\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.limit = function(limit) {\r\n  if (this._soql) {\r\n    throw Error(\"Cannot set limit for the query which has already built SOQL.\");\r\n  }\r\n  this._config.limit = limit;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Synonym of Query#offset()\r\n *\r\n * @method Query#skip\r\n * @param {Number} offset - Offset number where begins returning results.\r\n * @returns {Query.<T>}\r\n */\r\n/**\r\n * Skip records\r\n *\r\n * @method Query#offset\r\n * @param {Number} offset - Offset number where begins returning results.\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.skip =\r\nQuery.prototype.offset = function(offset) {\r\n  if (this._soql) {\r\n    throw Error(\"Cannot set skip/offset for the query which has already built SOQL.\");\r\n  }\r\n  this._config.offset = offset;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Synonym of Query#sort()\r\n *\r\n * @memthod Query#orderby\r\n * @param {String|Object} sort - Sorting field or hash object with field name and sord direction\r\n * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)\r\n * @returns {Query.<T>}\r\n */\r\n/**\r\n * Set query sort with direction\r\n *\r\n * @method Query#sort\r\n * @param {String|Object} sort - Sorting field or hash object with field name and sord direction\r\n * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.sort =\r\nQuery.prototype.orderby = function(sort, dir) {\r\n  if (this._soql) {\r\n    throw Error(\"Cannot set sort for the query which has already built SOQL.\");\r\n  }\r\n  if (_.isString(sort) && _.isString(dir)) {\r\n    sort = [ [ sort, dir ] ];\r\n  }\r\n  this._config.sort = sort;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Include child relationship query\r\n *\r\n * @param {String} childRelName - Child relationship name to include in query result\r\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\r\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\r\n * @param {Object} [options] - Optional query configulations.\r\n * @param {Number} [options.limit] - Maximum number of records the query will return.\r\n * @param {Number} [options.offset] - Offset number where begins returning results.\r\n * @param {Number} [options.skip] - Synonym of options.offset.\r\n * @returns {Query~SubQuery}\r\n */\r\nQuery.prototype.include = function(childRelName, conditions, fields, options) {\r\n  if (this._soql) {\r\n    throw Error(\"Cannot include child relationship into the query which has already built SOQL.\");\r\n  }\r\n  if (_.isObject(childRelName)) {\r\n    var includes = childRelName;\r\n    for (var crname in includes) {\r\n      var config = includes[crname];\r\n      this.include(crname, config.conditions, config.fields, config);\r\n    }\r\n    return;\r\n  }\r\n  var childConfig = {\r\n    table: childRelName,\r\n    conditions: conditions,\r\n    fields: fields,\r\n    limit: options && options.limit,\r\n    offset: options && (options.offset || options.skip),\r\n    sort: options && options.sort\r\n  };\r\n  if (!_.isArray(this._config.includes)) this._config.includes = [];\r\n  this._config.includes.push(childConfig);\r\n  var childQuery = new SubQuery(this._conn, this, childConfig);\r\n  this._children = this._children || [];\r\n  this._children.push(childQuery);\r\n  return childQuery;\r\n};\r\n\r\n\r\n/**\r\n * Setting maxFetch query option\r\n *\r\n * @param {Number} maxFetch - Max fetching records in auto fetch mode\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.maxFetch = function(maxFetch) {\r\n  this._options.maxFetch = maxFetch;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Switching auto fetch mode\r\n *\r\n * @param {Boolean} autoFetch - Using auto fetch mode or not\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.autoFetch = function(autoFetch) {\r\n  this._options.autoFetch = autoFetch;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set flag to scan all records including deleted and archived.\r\n *\r\n * @param {Boolean} scanAll - Flag whether include deleted/archived record or not. Default is false.\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.scanAll = function(scanAll) {\r\n  this._options.scanAll = scanAll;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nvar ResponseTargets = Query.ResponseTargets = {};\r\n[ \"QueryResult\", \"Records\", \"SingleRecord\", \"Count\" ].forEach(function(f) {\r\n  ResponseTargets[f] = f;\r\n});\r\n\r\n/**\r\n * @protected\r\n * @param {String} responseTarget - Query response target\r\n * @returns {Query.<S>}\r\n */\r\nQuery.prototype.setResponseTarget = function(responseTarget) {\r\n  if (responseTarget in ResponseTargets) {\r\n    this._options.responseTarget = responseTarget;\r\n  }\r\n  return this;\r\n};\r\n\r\n\r\n/**\r\n * Synonym of Query#execute()\r\n *\r\n * @method Query#run\r\n * @param {Object} [options] - Query options\r\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\r\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\r\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n * @param {Callback.<T>} [callback] - Callback function\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.run =\r\n/**\r\n * Synonym of Query#execute()\r\n *\r\n * @method Query#exec\r\n * @param {Object} [options] - Query options\r\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\r\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\r\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n * @param {Callback.<T>} [callback] - Callback function\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.exec =\r\n/**\r\n * Execute query and fetch records from server.\r\n *\r\n * @method Query#execute\r\n * @param {Object} [options] - Query options\r\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\r\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\r\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\r\n * @param {Callback.<T>} [callback] - Callback function\r\n * @returns {Query.<T>}\r\n */\r\nQuery.prototype.execute = function(options, callback) {\r\n  var self = this;\r\n  var logger = this._conn._logger;\r\n  var deferred = this._deferred;\r\n\r\n  if (this._executed) {\r\n    deferred.reject(new Error(\"re-executing already executed query\"));\r\n    return this;\r\n  }\r\n\r\n  if (this._finished) {\r\n    deferred.reject(new Error(\"executing already closed query\"));\r\n    return this;\r\n  }\r\n\r\n  if (typeof options === \"function\") {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  options = {\r\n    headers: options.headers || self._options.headers,\r\n    responseTarget: options.responseTarget || self._options.responseTarget,\r\n    autoFetch: options.autoFetch || self._options.autoFetch,\r\n    maxFetch: options.maxFetch || self._options.maxFetch,\r\n    scanAll: options.scanAll || self._options.scanAll\r\n  };\r\n\r\n  // callback and promise resolution;\r\n  var promiseCallback = function(err, res) {\r\n    if (_.isFunction(callback)) {\r\n      try {\r\n        res = callback(err, res);\r\n        err = null;\r\n      } catch(e) {\r\n        err = e;\r\n      }\r\n    }\r\n    if (err) {\r\n      deferred.reject(err);\r\n    } else {\r\n      deferred.resolve(res);\r\n    }\r\n  };\r\n  this.once('response', function(res) {\r\n    promiseCallback(null, res);\r\n  });\r\n  this.once('error', function(err) {\r\n    promiseCallback(err);\r\n  });\r\n\r\n  // collect fetched records in array\r\n  // only when response target is Records and\r\n  // either callback or chaining promises are available to this query.\r\n  this.once('fetch', function() {\r\n    if (options.responseTarget === ResponseTargets.Records && (self._chaining || callback)) {\r\n      logger.debug('--- collecting all fetched records ---');\r\n      var records = [];\r\n      var onRecord = function(record) {\r\n        records.push(record);\r\n      };\r\n      self.on('record', onRecord);\r\n      self.once('end', function() {\r\n        self.removeListener('record', onRecord);\r\n        self.emit('response', records, self);\r\n      });\r\n    }\r\n  });\r\n\r\n  // flag to prevent re-execution\r\n  this._executed = true;\r\n\r\n  // start actual query\r\n  logger.debug('>>> Query start >>>');\r\n  this._execute(options).then(function() {\r\n    logger.debug('*** Query finished ***');\r\n  }).fail(function(err) {\r\n    logger.debug('--- Query error ---');\r\n    self.emit('error', err);\r\n  });\r\n\r\n  // return Query instance for chaining\r\n  return this;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nQuery.prototype._execute = function(options) {\r\n  var self = this;\r\n  var logger = this._conn._logger;\r\n  var responseTarget = options.responseTarget;\r\n  var autoFetch = options.autoFetch;\r\n  var maxFetch = options.maxFetch;\r\n  var scanAll = options.scanAll;\r\n\r\n  return Promise.resolve(\r\n    self._locator ?\r\n    self._conn._baseUrl() + \"/query/\" + self._locator :\r\n    self.toSOQL().then(function(soql) {\r\n      self.totalFetched = 0;\r\n      logger.debug(\"SOQL = \" + soql);\r\n      return self._conn._baseUrl() + \"/\" + (scanAll ? \"queryAll\" : \"query\") + \"?q=\" + encodeURIComponent(soql);\r\n    })\r\n  ).then(function(url) {\r\n    return self._conn.request({\r\n      method: 'GET',\r\n      url: url,\r\n      headers: options.headers\r\n    });\r\n  }).then(function(data) {\r\n    self.emit(\"fetch\");\r\n    self.totalSize = data.totalSize;\r\n    var res;\r\n    switch(responseTarget) {\r\n      case ResponseTargets.SingleRecord:\r\n        res = data.records && data.records.length > 0 ? data.records[0] : null;\r\n        break;\r\n      case ResponseTargets.Records:\r\n        res = data.records;\r\n        break;\r\n      case ResponseTargets.Count:\r\n        res = data.totalSize;\r\n        break;\r\n      default:\r\n        res = data;\r\n    }\r\n    // only fire response event when it should be notified per fetch\r\n    if (responseTarget !== ResponseTargets.Records) {\r\n      self.emit(\"response\", res, self);\r\n    }\r\n\r\n    // streaming record instances\r\n    var numRecords = (data.records && data.records.length) || 0;\r\n    for (var i=0; i<numRecords; i++) {\r\n      if (self.totalFetched >= maxFetch) {\r\n        self._finished = true;\r\n        break;\r\n      }\r\n      var record = data.records[i];\r\n      self.push(record);\r\n      self.emit('record', record, self.totalFetched++, self);\r\n    }\r\n    if (data.nextRecordsUrl) {\r\n      self._locator = data.nextRecordsUrl.split('/').pop();\r\n    }\r\n    self._finished = self._finished || data.done || !autoFetch;\r\n    if (self._finished) {\r\n      self.push(null);\r\n    } else {\r\n      self._execute(options);\r\n    }\r\n    return res;\r\n  });\r\n};\r\n\r\n/**\r\n * Readable stream implementation\r\n *\r\n * @override\r\n * @private\r\n */\r\nQuery.prototype._read = function(size) {\r\n  if (!this._finished && !this._executed) {\r\n    this.execute({ autoFetch: true });\r\n  }\r\n};\r\n\r\n/** @override **/\r\nQuery.prototype.on = function(e, fn) {\r\n  if (e === 'record') {\r\n    var self = this;\r\n    this.on('readable', function() {\r\n      while(self.read() !== null) {} // discard buffered records\r\n    });\r\n  }\r\n  return Query.super_.prototype.on.call(this, e, fn);\r\n};\r\n\r\n/** @override **/\r\nQuery.prototype.addListener = Query.prototype.on;\r\n\r\n\r\n/**\r\n * @private\r\n */\r\nQuery.prototype._expandFields = function() {\r\n  if (this._soql) {\r\n    return Promise.reject(new Error(\"Cannot expand fields for the query which has already built SOQL.\"));\r\n  }\r\n  var self = this;\r\n  var logger = self._conn._logger;\r\n  var conn = this._conn;\r\n  var table = this._config.table;\r\n  var fields = this._config.fields || [];\r\n\r\n  logger.debug('_expandFields: table = ' + table + ', fields = ' + fields.join(', '));\r\n\r\n  return Promise.all([\r\n    Promise.resolve(self._parent ? findRelationTable(table) : table)\r\n      .then(function(table) {\r\n        return Promise.all(\r\n          _.map(fields, function(field) { return expandAsteriskField(table, field); })\r\n        ).then(function(expandedFields) {\r\n          self._config.fields = _.flatten(expandedFields);\r\n        });\r\n      }),\r\n    Promise.all(\r\n      _.map(self._children || [], function(childQuery) {\r\n        return childQuery._expandFields();\r\n      })\r\n    )\r\n  ]);\r\n\r\n  function findRelationTable(rname) {\r\n    var ptable = self._parent._config.table;\r\n    logger.debug('finding table for relation \"' + rname + '\" in \"' + ptable + '\"...');\r\n    return describeCache(ptable).then(function(sobject) {\r\n      var upperRname = rname.toUpperCase();\r\n      var childRelation = _.find(sobject.childRelationships, function(cr) {\r\n        return (cr.relationshipName || '').toUpperCase() === upperRname;\r\n      });\r\n      return childRelation ? childRelation.childSObject :\r\n        Promise.reject(new Error(\"No child relationship found: \" + rname ));\r\n    });\r\n  }\r\n\r\n  function describeCache(table) {\r\n    logger.debug('describe cache: '+table);\r\n    var deferred = Promise.defer();\r\n    conn.describe$(table, function(err, sobject) {\r\n      logger.debug('... done.');\r\n      if (err) { deferred.reject(err); }\r\n      else { deferred.resolve(sobject); }\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  function expandAsteriskField(table, field) {\r\n    logger.debug('expanding field \"'+ field + '\" in \"' + table + '\"...');\r\n    var fpath = field.split('.');\r\n    return fpath[fpath.length - 1] === '*' ?\r\n      describeCache(table).then(function(sobject) {\r\n        logger.debug('table '+table+'has been described');\r\n        if (fpath.length > 1) {\r\n          var rname = fpath.shift();\r\n          var rfield = _.find(sobject.fields, function(f) {\r\n            return f.relationshipName &&\r\n                   f.relationshipName.toUpperCase() === rname.toUpperCase();\r\n          });\r\n          if (rfield) {\r\n            var rtable = rfield.referenceTo.length === 1 ? rfield.referenceTo[0] : 'Name';\r\n            return expandAsteriskField(rtable, fpath.join('.')).then(function(fpaths) {\r\n              return _.map(fpaths, function(fpath) { return rname + '.' + fpath; });\r\n            });\r\n          } else {\r\n            return [];\r\n          }\r\n        } else {\r\n          return _.map(sobject.fields, function(f) { return f.name; });\r\n        }\r\n      }) :\r\n      Promise.resolve([ field ]);\r\n  }\r\n};\r\n\r\n/**\r\n * Explain plan for executing query\r\n *\r\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\r\n * @returns {Promise.<ExplainInfo>}\r\n */\r\nQuery.prototype.explain = function(callback) {\r\n  var self = this;\r\n  var logger = this._conn._logger;\r\n  return self.toSOQL().then(function(soql) {\r\n    logger.debug(\"SOQL = \" + soql);\r\n    var url = \"/query/?explain=\" + encodeURIComponent(soql);\r\n    return self._conn.request(url);\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Return SOQL expression for the query\r\n *\r\n * @param {Callback.<String>} [callback] - Callback function\r\n * @returns {Promise.<String>}\r\n */\r\nQuery.prototype.toSOQL = function(callback) {\r\n  var self = this;\r\n  return Promise.resolve(self._soql ||\r\n    self._expandFields().then(function() { return SOQLBuilder.createSOQL(self._config); })\r\n  ).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Create data stream of queried records.\r\n * Automatically resume query if paused.\r\n *\r\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\r\n * @param {Object} [options] - Options passed to converter\r\n * @returns {stream.Readable}\r\n */\r\nQuery.prototype.stream = RecordStream.Serializable.prototype.stream;\r\n\r\n/**\r\n * Get record stream of queried records applying the given mapping function\r\n *\r\n * @param {RecordMapFunction} fn - Record mapping function\r\n * @returns {RecordStream.Serializable}\r\n */\r\nQuery.prototype.map = RecordStream.prototype.map;\r\n\r\n/**\r\n * Get record stream of queried records, applying the given filter function\r\n *\r\n * @param {RecordFilterFunction} fn - Record filtering function\r\n * @returns {RecordStream.Serializable}\r\n */\r\nQuery.prototype.filter = RecordStream.prototype.map;\r\n\r\n/*\r\n * Default threshold num of bulk API switching\r\n */\r\nvar DEFAULT_BULK_THRESHOLD = 200;\r\n\r\n/**\r\n * Synonym of Query#destroy()\r\n *\r\n * @method Query#delete\r\n * @param {String} [type] - SObject type. Required for SOQL based query object.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\n/**\r\n * Synonym of Query#destroy()\r\n *\r\n * @method Query#del\r\n * @param {String} [type] - SObject type. Required for SOQL based query object.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\n/**\r\n * Delete queried records\r\n *\r\n * @method Query#destroy\r\n * @param {String} [type] - SObject type. Required for SOQL based query object.\r\n * @param {Object} [options] - Mass delete operation options\r\n * @param {Boolean} [options.allowBulk] - Allow switching to Bulk API when the num of queried records reached to certain threshold. Default is true.\r\n * @param {Number} [options.bulkThreshold] - Threshold num to switch to use Bulk API instead of usual `SObject#delete()` call. Default value is 200 after API ver 42.0, and 0.5 * `maxRequest` before API ver 42.0.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\nQuery.prototype[\"delete\"] =\r\nQuery.prototype.del =\r\nQuery.prototype.destroy = function(type, options, callback) {\r\n  if (typeof type === 'function') {\r\n    callback = type;\r\n    options = {};\r\n    type = null;\r\n  } else if (typeof type === 'object' && type !== null) {\r\n    callback = options;\r\n    options = type;\r\n    type = null;\r\n  }\r\n  options = options || {};\r\n  type = type || (this._config && this._config.table);\r\n  if (!type) {\r\n    throw new Error(\"SOQL based query needs SObject type information to bulk delete.\");\r\n  }\r\n  // Set the threshold number to pass to bulk API\r\n  var thresholdNum =\r\n    options.allowBulk === false ?\r\n      -1 :\r\n    typeof options.bulkThreshold === 'number' ?\r\n      options.bulkThreshold :\r\n      // determine threshold if the connection version supports SObject collection API or not\r\n      (this._conn._ensureVersion(42) ? DEFAULT_BULK_THRESHOLD : this._conn.maxRequest / 2);\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    var records = [];\r\n    var batch = null;\r\n    var handleRecord = function(rec) {\r\n      if (!rec.Id) {\r\n        self.emit('error', new Error('Queried record does not include Salesforce record ID.'))\r\n        return;\r\n      }\r\n      var record = { Id: rec.Id };\r\n      if (batch) {\r\n        batch.write(record);\r\n      } else {\r\n        records.push(record);\r\n        if (thresholdNum < 0 || records.length > thresholdNum) {\r\n          // Use bulk delete instead of SObject REST API\r\n          batch =\r\n            self._conn.sobject(type).deleteBulk()\r\n              .on('response', resolve)\r\n              .on('error', reject);\r\n          records.forEach(function(record) {\r\n            batch.write(record);\r\n          });\r\n          records = [];\r\n        }\r\n      }\r\n    };\r\n    var handleEnd = function() {\r\n      if (batch) {\r\n        batch.end();\r\n      } else {\r\n        var ids = records.map(function (record) { return record.Id; });\r\n        self._conn.sobject(type).destroy(ids, { allowRecursive: true }).then(resolve, reject);\r\n      }\r\n    };\r\n    self.on('data', handleRecord)\r\n      .on('end', handleEnd)\r\n      .on('error', reject);\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Update queried records, using given mapping function/object\r\n *\r\n * @param {Record|RecordMapFunction} mapping - Mapping record or record mapping function\r\n * @param {String} [type] - SObject type. Required for SOQL based query object.\r\n * @param {Object} [options] - Mass update operation options\r\n * @param {Boolean} [options.allowBulk] - Allow switching to Bulk API when the num of queried records reached to certain threshold. Default is true.\r\n * @param {Number} [options.bulkThreshold] - Threshold num to switch to use Bulk API instead of usual `SObject#delete()` call. Default value is 200 after API ver 42.0, and 0.5 * `maxRequest` before API ver 42.0.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\nQuery.prototype.update = function(mapping, type, options, callback) {\r\n  if (typeof type === 'function') {\r\n    callback = type;\r\n    options = {};\r\n    type = null;\r\n  } else if (typeof type === 'object' && type !== null) {\r\n    callback = options;\r\n    options = type;\r\n    type = null;\r\n  }\r\n  options = options || {};\r\n  type = type || (this._config && this._config.table);\r\n  if (!type) {\r\n    throw new Error(\"SOQL based query needs SObject type information to bulk update.\");\r\n  }\r\n  var updateStream = _.isFunction(mapping) ? RecordStream.map(mapping) : RecordStream.recordMapStream(mapping);\r\n  // Set the threshold number to pass to bulk API\r\n  var thresholdNum =\r\n    options.allowBulk === false ?\r\n      -1 :\r\n    typeof options.bulkThreshold === 'number' ?\r\n      options.bulkThreshold :\r\n      // determine threshold if the connection version supports SObject collection API or not\r\n      (this._conn._ensureVersion(42) ? DEFAULT_BULK_THRESHOLD : this._conn.maxRequest / 2);\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    var records = [];\r\n    var batch = null;\r\n    var handleRecord = function(record) {\r\n      if (batch) {\r\n        batch.write(record);\r\n      } else {\r\n        records.push(record);\r\n        if (thresholdNum < 0 || records.length > thresholdNum) {\r\n          // Use bulk update instead of SObject REST API\r\n          batch =\r\n            self._conn.sobject(type).updateBulk()\r\n              .on('response', resolve)\r\n              .on('error', reject);\r\n          records.forEach(function(record) {\r\n            batch.write(record);\r\n          });\r\n          records = [];\r\n        }\r\n      }\r\n    };\r\n    var handleEnd = function() {\r\n      if (batch) {\r\n        batch.end();\r\n      } else {\r\n        self._conn.sobject(type).update(records, { allowRecursive: true }).then(resolve, reject);\r\n      }\r\n    };\r\n    self.on('error', reject)\r\n      .pipe(updateStream)\r\n      .on('data', handleRecord)\r\n      .on('end', handleEnd)\r\n      .on('error', reject);\r\n  }).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Promise/A+ interface\r\n * http://promises-aplus.github.io/promises-spec/\r\n *\r\n * Delegate to deferred promise, return promise instance for query result\r\n *\r\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\r\n * @param {RejectedCallback.<S2>} [onRejected]\r\n * @returns {Promise.<S1|S2>}\r\n */\r\nQuery.prototype.then = function(onResolved, onReject) {\r\n  this._chaining = true;\r\n  if (!this._finished && !this._executed) { this.execute(); }\r\n  return this._deferred.promise.then.apply(this._deferred.promise, arguments);\r\n};\r\n\r\n/**\r\n * Promise/A+ extension\r\n * Call \"then\" using given node-style callback function\r\n *\r\n * @param {Callback.<T>} [callback] - Callback function\r\n * @returns {Query}\r\n */\r\nQuery.prototype.thenCall = function(callback) {\r\n  if (_.isFunction(callback)) {\r\n    this.then(function(res) {\r\n      process.nextTick(function() {\r\n        callback(null, res);\r\n      });\r\n    }, function(err) {\r\n      process.nextTick(function() {\r\n        callback(err);\r\n      });\r\n    });\r\n  }\r\n  return this;\r\n};\r\n\r\n/*--------------------------------------------*/\r\n\r\n/**\r\n * SubQuery object for representing child relationship query\r\n *\r\n * @protected\r\n * @class Query~SubQuery\r\n * @extends Query\r\n * @param {Connection} conn - Connection object\r\n * @param {Query} parent - Parent query object\r\n * @param {Object} config - Sub query configuration\r\n */\r\nvar SubQuery = function(conn, parent, config) {\r\n  SubQuery.super_.call(this, conn, config);\r\n  this._parent = parent;\r\n};\r\n\r\ninherits(SubQuery, Query);\r\n\r\n/**\r\n * @method Query~SubQuery#include\r\n * @override\r\n */\r\nSubQuery.prototype.include = function() {\r\n  throw new Error(\"Not allowed to include another subquery in subquery.\");\r\n};\r\n\r\n/**\r\n * Back the context to parent query object\r\n *\r\n * @method Query~SubQuery#end\r\n * @returns {Query}\r\n */\r\nSubQuery.prototype.end = function() {\r\n  return this._parent;\r\n};\r\n\r\n/**\r\n * If execute is called in subquery context, delegate it to parent query object\r\n *\r\n * @method Query~SubQuery#execute\r\n * @override\r\n */\r\nSubQuery.prototype.run =\r\nSubQuery.prototype.exec =\r\nSubQuery.prototype.execute = function() {\r\n  return this._parent.execute.apply(this._parent, arguments);\r\n};\r\n","/**\r\n * @file Represents Salesforce QuickAction\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\n\r\n/**\r\n * A class for quick action\r\n *\r\n * @protected\r\n * @constructor\r\n */\r\nvar QuickAction = module.exports = function(conn, path) {\r\n  this._conn = conn;\r\n  this._path = path;\r\n};\r\n\r\n/**\r\n * @typedef {Object} QuickAction~QuickActionInfo\r\n * @prop {String} type - Type of the action (e.g. Create, Update, Post, LogACall)\r\n * @prop {String} name - Name of the action\r\n * @prop {String} label - Label of the action\r\n * @prop {Object} urls - Endpoint URL information of the action\r\n */\r\n/**\r\n * @typedef {QuickAction~QuickActionInfo} QuickAction~QuickActionDescriveInfo\r\n * @prop {String} contextSobjectType - Object type used for the action\r\n * @prop {String} targetSobjectType - Object type of the action to target\r\n * @prop {String} targetParentField - Field name in the target object which refers parent(context) object record ID.\r\n * @prop {String} targetRecordTypeId - Record type of the targeted record\r\n * @prop {Object} layout - Layout sections that comprise an action\r\n */\r\n\r\n/**\r\n * Describe the action's information (including layout, etc.)\r\n *\r\n * @param {Callback.<QuickAction~QuickActionDescriveInfo>} [callback] - Callback function\r\n * @returns {Promise.<QuickAction~QuickActionDescriveInfo>}\r\n */\r\nQuickAction.prototype.describe = function(callback) {\r\n  var url = this._path + \"/describe\";\r\n  return this._conn.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Retrieve default field values in the action (for given record, if specified)\r\n *\r\n * @param {String} [contextId] - ID of record to get default values specific to the record\r\n * @param {Callback.<Record>} [callback] - Callback function\r\n * @returns {Promise.<Record>}\r\n */\r\nQuickAction.prototype.defaultValues = function(contextId, callback) {\r\n  if (typeof contextId === 'function') {\r\n    callback = contextId;\r\n    contextId = null;\r\n  }\r\n  var url = this._path + \"/defaultValues\";\r\n  if (contextId) {\r\n    url += \"/\" + contextId;\r\n  }\r\n  return this._conn.request(url).thenCall(callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} QuickAction~QuickActionResult\r\n * @param {String} id - Record id of the action result\r\n * @param {Array.<String>} feedItemIds - List of IDs for feed item\r\n * @param {Boolean} success - True if the action successfully completed\r\n * @param {Boolean} created - True if the action yields a new record\r\n * @param {String} contextId - Context record ID of the action\r\n * @param {Array.<Object>} errors - Errors if the action failed\r\n */\r\n\r\n/**\r\n * Execute the action for given context Id and record information\r\n * \r\n * @param {String} contextId - Context record ID of the action\r\n * @param {Record} record - Input record information for the action\r\n * @param {Callback.<QuickAction~QuickActionResult>} [callback] - Callback function\r\n * @returns {Promise.<QuickAction~QuickActionResult>}\r\n */\r\nQuickAction.prototype.execute = function(contextId, record, callback) {\r\n  var body = {\r\n    contextId: contextId,\r\n    record: record\r\n  };\r\n  return this._conn.requestPost(this._path, body).thenCall(callback);\r\n};\r\n","/**\r\n * @file Represents stream that handles Salesforce record as stream data\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar events = require('events'),\r\n    stream = require('readable-stream'),\r\n    Duplex = stream.Duplex,\r\n    Transform = stream.Transform,\r\n    PassThrough = stream.PassThrough,\r\n    inherits = require('inherits'),\r\n    _      = require('lodash/core'),\r\n    CSV    = require('./csv');\r\n\r\n\r\n/**\r\n * Class for Record Stream\r\n *\r\n * @class\r\n * @constructor\r\n * @extends stream.Transform\r\n */\r\nvar RecordStream = module.exports = function() {\r\n  RecordStream.super_.call(this, { objectMode: true });\r\n};\r\n\r\ninherits(RecordStream, Transform);\r\n\r\n\r\n/*\r\n * @override\r\n */\r\nRecordStream.prototype._transform = function(record, enc, callback) {\r\n  this.emit('record', record);\r\n  this.push(record);\r\n  callback();\r\n};\r\n\r\n/**\r\n * Get record stream of queried records applying the given mapping function\r\n *\r\n * @param {RecordMapFunction} fn - Record mapping function\r\n * @returns {RecordStream}\r\n */\r\nRecordStream.prototype.map = function(fn) {\r\n  return this.pipe(RecordStream.map(fn));\r\n};\r\n\r\n/**\r\n * Get record stream of queried records, applying the given filter function\r\n *\r\n * @param {RecordFilterFunction} fn - Record filtering function\r\n * @returns {RecordStream}\r\n */\r\nRecordStream.prototype.filter = function(fn) {\r\n  return this.pipe(RecordStream.filter(fn));\r\n};\r\n\r\n\r\n/**\r\n * @class RecordStream.Serializable\r\n * @extends {RecordStream}\r\n */\r\nvar Serializable = RecordStream.Serializable = function() {\r\n  Serializable.super_.call(this);\r\n  this._dataStream = null;\r\n};\r\n\r\ninherits(Serializable, RecordStream);\r\n\r\n/**\r\n * Create readable data stream which emits serialized record data\r\n *\r\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\r\n * @param {Object} [options] - Options passed to converter\r\n * @returns {stream.Readable}\r\n*/\r\nSerializable.prototype.stream = function(type, options) {\r\n  type = type || 'csv';\r\n  var converter = DataStreamConverters[type];\r\n  if (!converter) {\r\n    throw new Error('Converting [' + type + '] data stream is not supported.');\r\n  }\r\n  if (!this._dataStream) {\r\n    this._dataStream = new PassThrough();\r\n    this.pipe(converter.serialize(options))\r\n      .pipe(this._dataStream);\r\n  }\r\n  return this._dataStream;\r\n};\r\n\r\n\r\n/**\r\n * @class RecordStream.Parsable\r\n * @extends {RecordStream}\r\n */\r\nvar Parsable = RecordStream.Parsable = function() {\r\n  Parsable.super_.call(this);\r\n  this._dataStream = null;\r\n};\r\n\r\ninherits(Parsable, RecordStream);\r\n\r\n/**\r\n * Create writable data stream which accepts serialized record data\r\n *\r\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\r\n * @param {Object} [options] - Options passed to converter\r\n * @returns {stream.Readable}\r\n*/\r\nParsable.prototype.stream = function(type, options) {\r\n  type = type || 'csv';\r\n  var converter = DataStreamConverters[type];\r\n  var self = this;\r\n  if (!converter) {\r\n    throw new Error('Converting [' + type + '] data stream is not supported.');\r\n  }\r\n  if (!this._dataStream) {\r\n    this._dataStream = new PassThrough();\r\n    this._parserStream = converter.parse(options).on('error', function(error) { self.emit('error', error); });\r\n    this._parserStream.pipe(this).pipe(new PassThrough({ objectMode: true, highWaterMark: ( 500 * 1000 ) }));\r\n  }\r\n  return this._dataStream;\r\n};\r\n\r\n\r\n/* @override */\r\nParsable.prototype.on = function(ev, fn) {\r\n  if (ev === 'readable' || ev === 'record') {\r\n    this._dataStream.pipe(this._parserStream);\r\n  }\r\n  return Parsable.super_.prototype.on.call(this, ev, fn);\r\n};\r\n\r\n/* @override */\r\nParsable.prototype.addListener = Parsable.prototype.on;\r\n\r\n/* --------------------------------------------------- */\r\n\r\n/**\r\n * @callback RecordMapFunction\r\n * @param {Record} record - Source record to map\r\n * @returns {Record}\r\n */\r\n\r\n/**\r\n * Create a record stream which maps records and pass them to downstream\r\n *\r\n * @param {RecordMapFunction} fn - Record mapping function\r\n * @returns {RecordStream.Serializable}\r\n */\r\nRecordStream.map = function(fn) {\r\n  var mapStream = new RecordStream.Serializable();\r\n  mapStream._transform = function(record, enc, callback) {\r\n    var rec = fn(record) || record; // if not returned record, use same record\r\n    this.push(rec);\r\n    callback();\r\n  };\r\n  return mapStream;\r\n};\r\n\r\n/**\r\n * Create mapping stream using given record template\r\n *\r\n * @param {Record} record - Mapping record object. In mapping field value, temlate notation can be used to refer field value in source record, if noeval param is not true.\r\n * @param {Boolean} [noeval] - Disable template evaluation in mapping record.\r\n * @returns {RecordStream.Serializable}\r\n */\r\nRecordStream.recordMapStream = function(record, noeval) {\r\n  return RecordStream.map(function(rec) {\r\n    var mapped = { Id: rec.Id };\r\n    for (var prop in record) {\r\n      mapped[prop] = noeval ? record[prop] : evalMapping(record[prop], rec);\r\n    }\r\n    return mapped;\r\n  });\r\n\r\n  function evalMapping(value, mapping) {\r\n    if (_.isString(value)) {\r\n      var m = /^\\$\\{(\\w+)\\}$/.exec(value);\r\n      if (m) { return mapping[m[1]]; }\r\n      return value.replace(/\\$\\{(\\w+)\\}/g, function($0, prop) {\r\n        var v = mapping[prop];\r\n        return _.isNull(v) || _.isUndefined(v) ? \"\" : String(v);\r\n      });\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * @callback RecordFilterFunction\r\n * @param {Record} record - Source record to filter\r\n * @returns {Boolean}\r\n */\r\n\r\n/**\r\n * Create a record stream which filters records and pass them to downstream\r\n *\r\n * @param {RecordFilterFunction} fn - Record filtering function\r\n * @returns {RecordStream.Serializable}\r\n */\r\nRecordStream.filter = function(fn) {\r\n  var filterStream = new RecordStream.Serializable();\r\n  filterStream._transform = function(record, enc, callback) {\r\n    if (fn(record)) { this.push(record); }\r\n    callback();\r\n  };\r\n  return filterStream;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nfunction convertRecordForSerialization(record, options) {\r\n  return Object.keys(record).reduce(function(rec, key) {\r\n    var value = rec[key];\r\n    var t = typeof value;\r\n    var urec = {};\r\n    if (key === 'attributes') { // 'attributes' prop will be ignored\r\n      rec = _.extend({}, rec);\r\n      delete rec[key];\r\n    } else if (options.nullValue && value === null) {\r\n      urec[key] = options.nullValue;\r\n      rec = _.extend({}, rec, urec);\r\n    } else if (value !== null && typeof value === 'object') {\r\n      var precord = convertRecordForSerialization(value, options);\r\n      rec = Object.keys(precord).reduce(function(prec, pkey) {\r\n        prec[key + '.' + pkey] = precord[pkey];\r\n        return prec;\r\n      }, _.extend({}, rec));\r\n    }\r\n    return rec;\r\n  }, record);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction createPipelineStream(s1, s2) {\r\n  var pipeline = new PassThrough();\r\n  pipeline.on('pipe', function(source) {\r\n    source.unpipe(pipeline);\r\n    source.pipe(s1).pipe(s2);\r\n  });\r\n  pipeline.pipe = function(dest, options) {\r\n    return s2.pipe(dest, options);\r\n  };\r\n  return pipeline;\r\n}\r\n\r\n/** ---------------------------------------------------------------------- **/\r\n\r\n/**\r\n * @private\r\n */\r\nvar CSVStreamConverter = {\r\n  serialize: function(options) {\r\n    options = options || {};\r\n    return createPipelineStream(\r\n      RecordStream.map(function(record) {\r\n        return convertRecordForSerialization(record, options);\r\n      }),\r\n      CSV.serializeCSVStream(options)\r\n    );\r\n  },\r\n  parse: function(options) {\r\n    return CSV.parseCSVStream(options);\r\n  }\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nvar DataStreamConverters = RecordStream.DataStreamConverters = {\r\n  csv: CSVStreamConverter\r\n};\r\n","/**\r\n * @file Represents Salesforce record information\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar _ = require('lodash/core');\r\n\r\n/**\r\n * A simple hash object including record field information\r\n *\r\n * @typedef {Object} Record\r\n */\r\n\r\n/**\r\n * Remote reference to record information\r\n *\r\n * @protected\r\n * @class\r\n * @constructor\r\n * @param {Connection} conn - Connection object\r\n * @param {String} type - SObject type\r\n * @param {String} id - Record ID\r\n */\r\nvar RecordReference = module.exports = function(conn, type, id) {\r\n  this._conn = conn;\r\n  this.type = type;\r\n  this.id = id;\r\n};\r\n\r\n/**\r\n * Retrieve record field information\r\n *\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<Record>} [callback] - Callback function\r\n * @returns {Promise.<Record>}\r\n */\r\nRecordReference.prototype.retrieve = function(options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.retrieve(this.type, this.id, options, callback);\r\n};\r\n\r\n/**\r\n * Update record field information\r\n *\r\n * @param {Record} record - A Record which includes fields to update\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult>}\r\n */\r\nRecordReference.prototype.update = function(record, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  record = _.clone(record);\r\n  record.Id = this.id;\r\n  return this._conn.update(this.type, record, options, callback);\r\n};\r\n\r\n/**\r\n * Synonym of Record#destroy()\r\n *\r\n * @method RecordReference#delete\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult>}\r\n */\r\nRecordReference.prototype[\"delete\"] =\r\n/**\r\n * Synonym of Record#destroy()\r\n *\r\n * @method RecordReference#del\r\n * @param {Callback.<RecordResult>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult>}\r\n */\r\nRecordReference.prototype.del =\r\n/**\r\n * Delete record field\r\n *\r\n * @method RecordReference#destroy\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult>}\r\n */\r\nRecordReference.prototype.destroy = function(options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.destroy(this.type, this.id, options, callback);\r\n};\r\n\r\n/**\r\n * Get blob field as stream\r\n *\r\n * @param {String} fieldName - Blob field name\r\n * @returns {stream.Stream}\r\n */\r\nRecordReference.prototype.blob = function(fieldName) {\r\n  var url = [ this._conn._baseUrl(), 'sobjects', this.type, this.id, fieldName ].join('/');\r\n  return this._conn.request(url).stream();\r\n};\r\n","'use strict';\r\n\r\nvar required = require('./_required');\r\n\r\nmodule.exports = function(name) {\r\n  if (name === './jsforce' || name === 'jsforce') {\r\n    name = './core';\r\n  }\r\n  var m = required[name];\r\n  if (typeof m === 'undefined') {\r\n    throw new Error(\"Cannot find module '\" + name + \"'\");\r\n  }\r\n  return m;\r\n};\r\n","/**\r\n * @file Manages method call to SOAP endpoint\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar inherits = require('inherits'),\r\n    _ = require('lodash/core'),\r\n    xml2js = require('xml2js'),\r\n    HttpApi = require('./http-api');\r\n\r\n\r\n/**\r\n * Class for SOAP endpoint of Salesforce\r\n *\r\n * @protected\r\n * @class\r\n * @constructor\r\n * @param {Connection} conn - Connection instance\r\n * @param {Object} options - SOAP endpoint setting options\r\n * @param {String} options.endpointUrl - SOAP endpoint URL\r\n * @param {String} [options.xmlns] - XML namespace for method call (default is \"urn:partner.soap.sforce.com\")\r\n */\r\nvar SOAP = module.exports = function(conn, options) {\r\n  SOAP.super_.apply(this, arguments);\r\n  this._endpointUrl = options.endpointUrl;\r\n  this._xmlns = options.xmlns || 'urn:partner.soap.sforce.com';\r\n};\r\n\r\ninherits(SOAP, HttpApi);\r\n\r\n/**\r\n * Invoke SOAP call using method and arguments\r\n *\r\n * @param {String} method - Method name\r\n * @param {Object} args - Arguments for the method call\r\n * @param {Object} [schema] - Schema definition of response message\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nSOAP.prototype.invoke = function(method, args, schema, callback) {\r\n  if (typeof schema === 'function') {\r\n    callback = schema;\r\n    schema = null;\r\n  }\r\n  var message = {};\r\n  message[method] = args;\r\n  return this.request({\r\n    method: 'POST',\r\n    url: this._endpointUrl,\r\n    headers: {\r\n      'Content-Type': 'text/xml',\r\n      'SOAPAction': '\"\"'\r\n    },\r\n    message: message\r\n  }).then(function(res) {\r\n    return schema ? convertType(res, schema) : res;\r\n  }).thenCall(callback);\r\n};\r\n\r\n/* @private */\r\nfunction convertType(value, schema) {\r\n  if (_.isArray(value)) {\r\n    return value.map(function(v) {\r\n      return convertType(v, schema && schema[0])\r\n    });\r\n  } else if (_.isObject(value)) {\r\n    if (value.$ && value.$['xsi:nil'] === 'true') {\r\n      return null;\r\n    } else if (_.isArray(schema)) {\r\n      return [ convertType(value, schema[0]) ];\r\n    } else {\r\n      var o = {};\r\n      for (var key in value) {\r\n        o[key] = convertType(value[key], schema && schema[key]);\r\n      }\r\n      return o;\r\n    }\r\n  } else {\r\n    if (_.isArray(schema)) {\r\n      return [ convertType(value, schema[0]) ];\r\n    } else if (_.isObject(schema)) {\r\n      return {};\r\n    } else {\r\n      switch(schema) {\r\n        case 'string':\r\n          return String(value);\r\n        case 'number':\r\n          return Number(value);\r\n        case 'boolean':\r\n          return value === 'true';\r\n        default:\r\n          return value;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/** @override **/\r\nSOAP.prototype.beforeSend = function(request) {\r\n  request.body = this._createEnvelope(request.message);\r\n};\r\n\r\n/** @override **/\r\nSOAP.prototype.isSessionExpired = function(response) {\r\n  return response.statusCode === 500 &&\r\n    /<faultcode>[a-zA-Z]+:INVALID_SESSION_ID<\\/faultcode>/.test(response.body);\r\n};\r\n\r\n/** @override **/\r\nSOAP.prototype.parseError = function(body) {\r\n  var error = lookupValue(body, [ /:Envelope$/, /:Body$/, /:Fault$/ ]);\r\n  return {\r\n    errorCode: error.faultcode,\r\n    message: error.faultstring\r\n  };\r\n};\r\n\r\n/** @override **/\r\nSOAP.prototype.getResponseBody = function(response) {\r\n  var body = SOAP.super_.prototype.getResponseBody.call(this, response);\r\n  return lookupValue(body, [ /:Envelope$/, /:Body$/, /.+/ ]);\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nfunction lookupValue(obj, propRegExps) {\r\n  var regexp = propRegExps.shift();\r\n  if (!regexp) {\r\n    return obj;\r\n  }\r\n  else {\r\n    for (var prop in obj) {\r\n      if (regexp.test(prop)) {\r\n        return lookupValue(obj[prop], propRegExps);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction toXML(name, value) {\r\n  if (_.isObject(name)) {\r\n    value = name;\r\n    name = null;\r\n  }\r\n  if (_.isArray(value)) {\r\n    return _.map(value, function(v) { return toXML(name, v); }).join('');\r\n  } else {\r\n    var attrs = [];\r\n    var elems = [];\r\n    if (_.isObject(value)) {\r\n      for (var k in value) {\r\n        var v = value[k];\r\n        if (k[0] === '@') {\r\n          k = k.substring(1);\r\n          attrs.push(k + '=\"' + v + '\"');\r\n        } else {\r\n          elems.push(toXML(k, v));\r\n        }\r\n      }\r\n      value = elems.join('');\r\n    } else {\r\n      value = String(value)\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/'/g, '&apos;');\r\n    }\r\n    var startTag = name ? '<' + name + (attrs.length > 0 ? ' ' + attrs.join(' ') : '') + '>' : '';\r\n    var endTag = name ? '</' + name + '>' : '';\r\n    return  startTag + value + endTag;\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nSOAP.prototype._createEnvelope = function(message) {\r\n  var header = {};\r\n  var conn = this._conn;\r\n  if (conn.accessToken) {\r\n    header.SessionHeader = { sessionId: this._conn.accessToken };\r\n  }\r\n  if (conn.callOptions) {\r\n    header.CallOptions = conn.callOptions;\r\n  }\r\n  return [\r\n    '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',\r\n    '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"',\r\n    ' xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"',\r\n    ' xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">',\r\n    '<soapenv:Header xmlns=\"' + this._xmlns + '\">',\r\n    toXML(header),\r\n    '</soapenv:Header>',\r\n    '<soapenv:Body xmlns=\"' + this._xmlns + '\">',\r\n    toXML(message),\r\n    '</soapenv:Body>',\r\n    '</soapenv:Envelope>'\r\n  ].join('');\r\n};\r\n","/**\r\n * @file Represents Salesforce SObject\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar _      = require('lodash/core'),\r\n    Record = require('./record'),\r\n    Query  = require('./query'),\r\n    Cache  = require('./cache'),\r\n    QuickAction = require('./quick-action');\r\n\r\n/**\r\n * A class for organizing all SObject access\r\n *\r\n * @constructor\r\n */\r\nvar SObject = module.exports = function(conn, type) {\r\n  this._conn = conn;\r\n  this.type = type;\r\n  var cacheOptions = { key: \"describe.\" + this.type };\r\n  this.describe$ = conn.cache.makeCacheable(this.describe, this, cacheOptions);\r\n  this.describe = conn.cache.makeResponseCacheable(this.describe, this, cacheOptions);\r\n\r\n  cacheOptions = { key: \"layouts.\" + this.type };\r\n  this.layouts$ = conn.cache.makeCacheable(this.layouts, this, cacheOptions);\r\n  this.layouts = conn.cache.makeResponseCacheable(this.layouts, this, cacheOptions);\r\n\r\n  cacheOptions = { key: \"compactLayouts.\" + this.type };\r\n  this.compactLayouts$ = conn.cache.makeCacheable(this.compactLayouts, this, cacheOptions);\r\n  this.compactLayouts = conn.cache.makeResponseCacheable(this.compactLayouts, this, cacheOptions);\r\n\r\n  cacheOptions = { key: \"approvalLayouts.\" + this.type };\r\n  this.approvalLayouts$ = conn.cache.makeCacheable(this.approvalLayouts, this, cacheOptions);\r\n  this.approvalLayouts = conn.cache.makeResponseCacheable(this.approvalLayouts, this, cacheOptions);\r\n};\r\n\r\n/**\r\n * Synonym of SObject#create()\r\n *\r\n * @method SObject#insert\r\n * @param {Record|Array.<Record>} records - A record or array of records to create\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Create records\r\n *\r\n * @method SObject#create\r\n * @param {Record|Array.<Record>} records - A record or array of records to create\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nSObject.prototype.insert =\r\nSObject.prototype.create = function(records, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.create(this.type, records, options, callback);\r\n};\r\n\r\n/**\r\n * Retrieve specified records\r\n *\r\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\r\n * @returns {Promise.<Record|Array.<Record>>}\r\n */\r\nSObject.prototype.retrieve = function(ids, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.retrieve(this.type, ids, options, callback);\r\n};\r\n\r\n/**\r\n * Update records\r\n *\r\n * @param {Record|Array.<Record>} records - A record or array of records to update\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nSObject.prototype.update = function(records, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.update(this.type, records, options, callback);\r\n};\r\n\r\n/**\r\n * Upsert records\r\n *\r\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\r\n * @param {String} extIdField - External ID field name\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nSObject.prototype.upsert = function(records, extIdField, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.upsert(this.type, records, extIdField, options, callback);\r\n};\r\n\r\n/**\r\n * Synonym of SObject#destroy()\r\n *\r\n * @method SObject#delete\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Synonym of SObject#destroy()\r\n *\r\n * @method SObject#del\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\n/**\r\n * Delete records\r\n *\r\n * @method SObject#destroy\r\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\r\n * @param {Object} [options] - Options for rest api.\r\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\r\n */\r\nSObject.prototype[\"delete\"] =\r\nSObject.prototype.del =\r\nSObject.prototype.destroy = function(ids, options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  return this._conn.destroy(this.type, ids, options, callback);\r\n};\r\n\r\n/**\r\n * Describe SObject metadata\r\n *\r\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\r\n * @returns {Promise.<DescribeSObjectResult>}\r\n */\r\nSObject.prototype.describe = function(callback) {\r\n  return this._conn.describe(this.type, callback);\r\n};\r\n\r\n/**\r\n * Get record representation instance by given id\r\n *\r\n * @param {String} id - A record ID\r\n * @returns {RecordReference}\r\n */\r\nSObject.prototype.record = function(id) {\r\n  return new Record(this._conn, this.type, id);\r\n};\r\n\r\n/**\r\n * Find and fetch records which matches given conditions\r\n *\r\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\r\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\r\n * @param {Object} [options] - Query options.\r\n * @param {Number} [options.limit] - Maximum number of records the query will return.\r\n * @param {Number} [options.offset] - Offset number where begins returning results.\r\n * @param {Number} [options.skip] - Synonym of options.offset.\r\n * @param {Callback.<Array.<Record>>} [callback] - Callback function\r\n * @returns {Query.<Array.<Record>>}\r\n */\r\nSObject.prototype.find = function(conditions, fields, options, callback) {\r\n  if (typeof conditions === 'function') {\r\n    callback = conditions;\r\n    conditions = {};\r\n    fields = null;\r\n    options = null;\r\n  } else if (typeof fields === 'function') {\r\n    callback = fields;\r\n    fields = null;\r\n    options = null;\r\n  } else if (typeof options === 'function') {\r\n    callback = options;\r\n    options = null;\r\n  }\r\n  options = options || {};\r\n  var config = {\r\n    fields: fields,\r\n    includes: options.includes,\r\n    table: this.type,\r\n    conditions: conditions,\r\n    limit: options.limit,\r\n    sort: options.sort,\r\n    offset: options.offset || options.skip\r\n  };\r\n  var query = new Query(this._conn, config, options);\r\n  query.setResponseTarget(Query.ResponseTargets.Records);\r\n  if (callback) { query.run(callback); }\r\n  return query;\r\n};\r\n\r\n/**\r\n * Fetch one record which matches given conditions\r\n *\r\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\r\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\r\n * @param {Object} [options] - Query options.\r\n * @param {Number} [options.limit] - Maximum number of records the query will return.\r\n * @param {Number} [options.offset] - Offset number where begins returning results.\r\n * @param {Number} [options.skip] - Synonym of options.offset.\r\n * @param {Callback.<Record>} [callback] - Callback function\r\n * @returns {Query.<Record>}\r\n */\r\nSObject.prototype.findOne = function(conditions, fields, options, callback) {\r\n  if (typeof conditions === 'function') {\r\n    callback = conditions;\r\n    conditions = {};\r\n    fields = null;\r\n    options = null;\r\n  } else if (typeof fields === 'function') {\r\n    callback = fields;\r\n    fields = null;\r\n    options = null;\r\n  } else if (typeof options === 'function') {\r\n    callback = options;\r\n    options = null;\r\n  }\r\n  options = _.extend(options || {}, { limit: 1 });\r\n  var query = this.find(conditions, fields, options);\r\n  query.setResponseTarget(Query.ResponseTargets.SingleRecord);\r\n  if (callback) { query.run(callback); }\r\n  return query;\r\n};\r\n\r\n/**\r\n * Find and fetch records only by specifying fields to fetch.\r\n *\r\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\r\n * @param {Callback.<Array.<Record>>} [callback] - Callback function\r\n * @returns {Query.<Array.<Record>>}\r\n */\r\nSObject.prototype.select = function(fields, callback) {\r\n  return this.find(null, fields, null, callback);\r\n};\r\n\r\n/**\r\n * Count num of records which matches given conditions\r\n *\r\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\r\n * @param {Callback.<Number>} [callback] - Callback function\r\n * @returns {Query.<Number>}\r\n */\r\nSObject.prototype.count = function(conditions, callback) {\r\n  if (typeof conditions === 'function') {\r\n    callback = conditions;\r\n    conditions = {};\r\n  }\r\n  var query = this.find(conditions, { \"count()\" : true });\r\n  query.setResponseTarget(\"Count\");\r\n  if (callback) { query.run(callback); }\r\n  return query;\r\n};\r\n\r\n\r\n/**\r\n * Call Bulk#load() to execute bulkload, returning batch object\r\n *\r\n * @param {String} operation - Bulk load operation ('insert', 'update', 'upsert', 'delete', or 'hardDelete')\r\n * @param {Object} [options] - Options for bulk loading operation\r\n * @param {String} [options.extIdField] - External ID field name (used when upsert operation).\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulkload. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nSObject.prototype.bulkload = function(operation, options, input, callback) {\r\n  return this._conn.bulk.load(this.type, operation, options, input, callback);\r\n};\r\n\r\n/**\r\n * Synonym of SObject#createBulk()\r\n *\r\n * @method SObject#insertBulk\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\n/**\r\n * Bulkly insert input data using bulk API\r\n *\r\n * @method SObject#createBulk\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nSObject.prototype.insertBulk =\r\nSObject.prototype.createBulk = function(input, callback) {\r\n  return this.bulkload(\"insert\", input, callback);\r\n};\r\n\r\n/**\r\n * Bulkly update records by input data using bulk API\r\n *\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk update Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nSObject.prototype.updateBulk = function(input, callback) {\r\n  return this.bulkload(\"update\", input, callback);\r\n};\r\n\r\n/**\r\n * Bulkly upsert records by input data using bulk API\r\n *\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk upsert. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {String} [options.extIdField] - External ID field name\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nSObject.prototype.upsertBulk = function(input, extIdField, callback) {\r\n  return this.bulkload(\"upsert\", { extIdField: extIdField }, input, callback);\r\n};\r\n\r\n/**\r\n * Synonym of SObject#destroyBulk()\r\n *\r\n * @method SObject#deleteBulk\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\n/**\r\n * Bulkly delete records specified by input data using bulk API\r\n *\r\n * @method SObject#destroyBulk\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nSObject.prototype.deleteBulk =\r\nSObject.prototype.destroyBulk = function(input, callback) {\r\n  return this.bulkload(\"delete\", input, callback);\r\n};\r\n\r\n/**\r\n * Synonym of SObject#destroyHardBulk()\r\n *\r\n * @method SObject#deleteHardBulk\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\n/**\r\n * Bulkly hard delete records specified in input data using bulk API\r\n *\r\n * @method SObject#destroyHardBulk\r\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Bulk~Batch}\r\n */\r\nSObject.prototype.deleteHardBulk =\r\nSObject.prototype.destroyHardBulk = function(input, callback) {\r\n  return this.bulkload(\"hardDelete\", input, callback);\r\n};\r\n\r\n/**\r\n * Retrieve recently accessed records\r\n *\r\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<RecordResult>>}\r\n */\r\nSObject.prototype.recent = function (callback) {\r\n  return this._conn.recent(this.type, callback);\r\n};\r\n\r\n/**\r\n * Retrieve the updated records\r\n *\r\n * @param {String|Date} start - start date or string representing the start of the interval\r\n * @param {String|Date} end - start date or string representing the end of the interval, must be > start\r\n * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function\r\n * @returns {Promise.<UpdatedRecordsInfo>}\r\n */\r\nSObject.prototype.updated = function (start, end, callback) {\r\n  return this._conn.updated(this.type, start, end, callback);\r\n};\r\n\r\n/**\r\n * Retrieve the deleted records\r\n *\r\n * @param {String|Date} start - start date or string representing the start of the interval\r\n * @param {String|Date} end - start date or string representing the end of the interval, must be > start\r\n * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function\r\n * @returns {Promise.<DeletedRecordsInfo>}\r\n */\r\nSObject.prototype.deleted = function (start, end, callback) {\r\n  return this._conn.deleted(this.type, start, end, callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} LayoutInfo\r\n * @prop {Array.<Object>} layouts - Array of layouts\r\n * @prop {Array.<Object>} recordTypeMappings - Array of record type mappings\r\n */\r\n/**\r\n * Describe layout information for SObject\r\n *\r\n * @param {String} [layoutName] - Name of named layout. (e.g. UserAlt in User SObject)\r\n * @param {Callback.<LayoutInfo>} [callback] - Callback function\r\n * @returns {Promise.<LayoutInfo>}\r\n */\r\nSObject.prototype.layouts = function(layoutName, callback) {\r\n  if (typeof layoutName === 'function') {\r\n    callback = layoutName;\r\n    layoutName = null;\r\n  }\r\n  var url = \"/sobjects/\" + this.type + \"/describe/\" + (layoutName ? \"namedLayouts/\"+layoutName : \"layouts\");\r\n  return this._conn.request(url, callback);\r\n};\r\n\r\n/**\r\n * @typedef {Object} CompactLayoutInfo\r\n * @prop {Array.<Object>} compactLayouts - Array of compact layouts\r\n * @prop {String} defaultCompactLayoutId - ID of default compact layout\r\n * @prop {Array.<Object>} recordTypeCompactLayoutMappings - Array of record type mappings\r\n */\r\n/**\r\n * Describe compact layout information defined for SObject\r\n *\r\n * @param {Callback.<CompactLayoutInfo>} [callback] - Callback function\r\n * @returns {Promise.<CompactLayoutInfo>}\r\n */\r\nSObject.prototype.compactLayouts = function(callback) {\r\n  var url = \"/sobjects/\" + this.type + \"/describe/compactLayouts\";\r\n  return this._conn.request(url, callback);\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} ApprovalLayoutInfo\r\n * @prop {Array.<Object>} approvalLayouts - Array of approval layouts\r\n */\r\n/**\r\n * Describe compact layout information defined for SObject\r\n *\r\n * @param {Callback.<ApprovalLayoutInfo>} [callback] - Callback function\r\n * @returns {Promise.<ApprovalLayoutInfo>}\r\n */\r\nSObject.prototype.approvalLayouts = function(callback) {\r\n  var url = \"/sobjects/\" + this.type + \"/describe/approvalLayouts\";\r\n  return this._conn.request(url, callback);\r\n};\r\n\r\n/**\r\n * Returns the list of list views for the SObject\r\n *\r\n * @param {Callback.<ListViewsInfo>} [callback] - Callback function\r\n * @returns {Promise.<ListViewsInfo>}\r\n */\r\nSObject.prototype.listviews = function(callback) {\r\n  var url = this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews';\r\n  return this._conn.request(url, callback);\r\n};\r\n\r\n/**\r\n * Returns the list view info in specifed view id\r\n *\r\n * @param {String} id - List view ID\r\n * @returns {ListView}\r\n */\r\nSObject.prototype.listview = function(id) {\r\n  return new ListView(this._conn, this.type, id);\r\n};\r\n\r\n/**\r\n * Returns all registered quick actions for the SObject\r\n *\r\n * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\r\n * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\r\n */\r\nSObject.prototype.quickActions = function(callback) {\r\n  return this._conn.request(\"/sobjects/\" + this.type + \"/quickActions\").thenCall(callback);\r\n};\r\n\r\n/**\r\n * Get reference for specified quick aciton in the SObject\r\n *\r\n * @param {String} actionName - Name of the quick action\r\n * @returns {QuickAction}\r\n */\r\nSObject.prototype.quickAction = function(actionName) {\r\n  return new QuickAction(this._conn, \"/sobjects/\" + this.type + \"/quickActions/\" + actionName);\r\n};\r\n\r\n\r\n/**\r\n * A class for organizing list view information\r\n *\r\n * @protected\r\n * @class ListView\r\n * @param {Connection} conn - Connection instance\r\n * @param {SObject} type - SObject type\r\n * @param {String} id - List view ID\r\n */\r\nvar ListView = function(conn, type, id) {\r\n  this._conn = conn;\r\n  this.type = type;\r\n  this.id = id;\r\n};\r\n\r\n/**\r\n * Executes query for the list view and returns the resulting data and presentation information.\r\n *\r\n * @param {Callback.<ListViewResultInfo>} [callback] - Callback function\r\n * @returns {Promise.<ListViewResultInfo>}\r\n */\r\nListView.prototype.results = function(callback) {\r\n  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/results';\r\n  return this._conn.request(url, callback);\r\n};\r\n\r\n\r\n/**\r\n * Returns detailed information about a list view\r\n *\r\n * @param {Object} [options] - Identity call options\r\n * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request\r\n * @param {Callback.<ListViewDescribeInfo>} [callback] - Callback function\r\n * @returns {Promise.<ListViewDescribeInfo>}\r\n */\r\nListView.prototype.describe = function(options, callback) {\r\n  if (typeof options === 'function') {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n  options = options || {};\r\n  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/describe';\r\n  return this._conn.request({ method: 'GET', url: url, headers: options.headers }, callback);\r\n};\r\n\r\n/**\r\n * Explain plan for executing list view\r\n *\r\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\r\n * @returns {Promise.<ExplainInfo>}\r\n */\r\nListView.prototype.explain = function(callback) {\r\n  var url = \"/query/?explain=\" + this.id;\r\n  return this._conn.request(url, callback);\r\n};\r\n","/**\r\n * @file Create and build SOQL string from configuration\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\nvar _      = require('lodash/core'),\r\n    SfDate = require(\"./date\");\r\n\r\n\r\n/**\r\n * Create SOQL\r\n * @private\r\n */\r\nfunction createSOQL(query) {\r\n  var soql = [\r\n    \"SELECT \",\r\n    createFieldsClause(query.fields, query.includes),\r\n    \" FROM \",\r\n    query.table\r\n  ].join(\"\");\r\n  var cond = createConditionClause(query.conditions);\r\n  if (cond) {\r\n    soql += \" WHERE \" + cond;\r\n  }\r\n  var orderby = createOrderByClause(query.sort);\r\n  if (orderby) {\r\n    soql += \" ORDER BY \" + orderby;\r\n  }\r\n  if (query.limit) {\r\n    soql += \" LIMIT \" + query.limit;\r\n  }\r\n  if (query.offset) {\r\n    soql += \" OFFSET \" + query.offset;\r\n  }\r\n  return soql;\r\n}\r\n\r\n/** @private **/\r\nfunction createFieldsClause(fields, childQueries) {\r\n  childQueries = _.map(_.values(childQueries || {}), function(cquery) {\r\n    return '(' + createSOQL(cquery) + ')';\r\n  });\r\n  return (fields || [ \"Id\" ]).concat(childQueries).join(', ');\r\n}\r\n\r\n/** @private **/\r\nfunction createConditionClause(conditions, operator, depth) {\r\n  if (_.isString(conditions)) {\r\n    return conditions;\r\n  }\r\n  conditions = conditions || [];\r\n  operator = operator || \"AND\";\r\n  depth = depth || 0;\r\n  if (!isArray(conditions)) { // if passed in hash object\r\n    conditions = _.keys(conditions).map(function(key) {\r\n      return {\r\n        key: key,\r\n        value: conditions[key]\r\n      };\r\n    });\r\n  } else {\r\n    conditions = conditions.map(function(cond) {\r\n      var conds = [];\r\n      for (var key in cond) {\r\n        conds.push({\r\n          key: key,\r\n          value: cond[key]\r\n        });\r\n      }\r\n      return conds.length>1 ? conds : conds[0];\r\n    });\r\n  }\r\n  conditions = conditions.map(function(cond) {\r\n    var d = depth+1, op;\r\n    switch (cond.key) {\r\n      case \"$or\" :\r\n      case \"$and\" :\r\n      case \"$not\" :\r\n        if (operator !== \"NOT\" && conditions.length === 1) {\r\n          d = depth; // not change tree depth\r\n        }\r\n        op = cond.key === \"$or\" ? \"OR\" :\r\n             cond.key === \"$and\" ? \"AND\" :\r\n             \"NOT\";\r\n        return createConditionClause(cond.value, op, d);\r\n      default:\r\n        return createFieldExpression(cond.key, cond.value);\r\n    }\r\n  }).filter(function(expr) { return expr; });\r\n\r\n  var paren;\r\n  if (operator === 'NOT') {\r\n    paren = depth > 0;\r\n    return (paren ? \"(\" : \"\") + \"NOT \" + conditions[0] + (paren ? \")\" : \"\");\r\n  } else {\r\n    paren = depth > 0 && conditions.length > 1;\r\n    return (paren ? \"(\" : \"\") + conditions.join(\" \"+operator+\" \") + (paren ? \")\" : \"\");\r\n  }\r\n}\r\n\r\nvar opMap = {\r\n  \"=\"     : \"=\",\r\n  \"$eq\"   : \"=\",\r\n  \"!=\"    : \"!=\",\r\n  \"$ne\"   : \"!=\",\r\n  \">\"     : \">\",\r\n  \"$gt\"   : \">\",\r\n  \"<\"     : \"<\",\r\n  \"$lt\"   : \"<\",\r\n  \">=\"    : \">=\",\r\n  \"$gte\"  : \">=\",\r\n  \"<=\"    : \"<=\",\r\n  \"$lte\"  : \"<=\",\r\n  \"$like\" : \"LIKE\",\r\n  \"$nlike\" : \"NOT LIKE\",\r\n  \"$in\"   : \"IN\",\r\n  \"$nin\"  : \"NOT IN\",\r\n  \"$includes\" : \"INCLUDES\",\r\n  \"$excludes\" : \"EXCLUDES\",\r\n  \"$exists\" : \"EXISTS\"\r\n};\r\n\r\n/** @private **/\r\nfunction createFieldExpression(field, value) {\r\n  var op = \"$eq\";\r\n\r\n  // Assume the `$in` operator if value is an array and none was supplied.\r\n  if (_.isArray(value)) { op = \"$in\"; }\r\n  // Otherwise, if an object was passed then process the supplied ops.\r\n  else if (_.isObject(value)) {\r\n    var _value;\r\n    for (var k in value) {\r\n      if (k[0] === \"$\") {\r\n        op = k;\r\n        value = value[k];\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  var sfop = opMap[op];\r\n  if (!sfop || _.isUndefined(value)) { return null; }\r\n  var valueExpr = createValueExpression(value);\r\n  if (_.isUndefined(valueExpr)) { return null; }\r\n  switch (sfop) {\r\n    case \"NOT LIKE\":\r\n      return \"(\" + [ \"NOT\", field, 'LIKE', valueExpr ].join(\" \") + \")\";\r\n    case \"EXISTS\":\r\n      return [ field, value ? \"!=\" : \"=\", \"null\" ].join(\" \");\r\n    default:\r\n      return [ field, sfop, valueExpr ].join(\" \");\r\n  }\r\n}\r\n\r\n/** @private **/\r\nfunction createValueExpression(value) {\r\n  if (isArray(value)) {\r\n    return value.length > 0 ?\r\n           \"(\" + value.map(createValueExpression).join(\", \") + \")\" :\r\n           undefined;\r\n  }\r\n  if (value instanceof SfDate) {\r\n    return value.toString();\r\n  }\r\n  if (_.isString(value)) {\r\n    return \"'\" + escapeSOQLString(value) + \"'\";\r\n  }\r\n  if (_.isNumber(value)) {\r\n    return (value).toString();\r\n  }\r\n  if (_.isNull(value)) {\r\n    return \"null\";\r\n  }\r\n  return value;\r\n}\r\n\r\n/** @private **/\r\nfunction escapeSOQLString(str) {\r\n  return String(str || '').replace(/'/g, \"\\\\'\");\r\n}\r\n\r\n/** @private **/\r\nfunction isArray(a) {\r\n  return _.isObject(a) && _.isFunction(a.pop);\r\n}\r\n\r\n\r\n/** @private **/\r\nfunction createOrderByClause(sort) {\r\n  sort = sort || [];\r\n  if (_.isString(sort)) {\r\n    if (/,|\\s+(asc|desc)\\s*$/.test(sort)) {\r\n      // must be specified in pure \"order by\" clause. Return raw config.\r\n      return sort;\r\n    }\r\n    // sort order in mongoose-style expression.\r\n    // e.g. \"FieldA -FieldB\" => \"ORDER BY FieldA ASC, FieldB DESC\"\r\n    sort = sort.split(/\\s+/).map(function(field) {\r\n      var dir = \"ASC\"; // ascending\r\n      var flag = field[0];\r\n      if (flag === '-') {\r\n        dir = \"DESC\";\r\n        field = field.substring(1);\r\n      } else if (flag === '+') {\r\n        field = field.substring(1);\r\n      }\r\n      return [ field, dir ];\r\n    });\r\n  } else if (!isArray(sort)) {\r\n    sort = _.keys(sort).map(function(field) {\r\n      var dir = sort[field];\r\n      return [ field, dir ];\r\n    });\r\n  }\r\n  return sort.map(function(s) {\r\n    var field = s[0], dir = s[1];\r\n    switch (String(dir)) {\r\n      case \"DESC\":\r\n      case \"desc\":\r\n      case \"descending\":\r\n      case \"-\":\r\n      case \"-1\":\r\n        dir = \"DESC\";\r\n        break;\r\n      default:\r\n        dir = \"ASC\";\r\n    }\r\n    return field + \" \" + dir;\r\n  }).join(\", \");\r\n}\r\n\r\n\r\nexports.createSOQL = createSOQL;\r\n","/*global process, Sfdc */\r\n\r\n'use strict';\r\n\r\nvar inherits = require('inherits'),\r\n    Promise = require('./promise');\r\n\r\n/* */\r\n\r\nvar request = require('request'),\r\n    canvas = require('./browser/canvas'),\r\n    jsonp = require('./browser/jsonp');\r\n\r\n// set options if defaults setting is available in request, which is not available in xhr module.\r\nif (request.defaults) {\r\n  var defaults = {\r\n    followAllRedirects: true\r\n  };\r\n  if (process.env.HTTP_PROXY) {\r\n    defaults.proxy = process.env.HTTP_PROXY;\r\n  }\r\n  if (parseInt(process.env.HTTP_TIMEOUT)) {\r\n    defaults.timeout = parseInt(process.env.HTTP_TIMEOUT);\r\n  }\r\n  request = request.defaults(defaults);\r\n}\r\n\r\nvar baseUrl;\r\nif (typeof window === 'undefined') {\r\n  baseUrl = process.env.LOCATION_BASE_URL || \"\";\r\n} else {\r\n  var apiHost = normalizeApiHost(window.location.host);\r\n  baseUrl = apiHost ? \"https://\" + apiHost : \"\";\r\n}\r\n\r\n/**\r\n * Add stream() method to promise (and following promise chain), to access original request stream.\r\n * @private\r\n */\r\nfunction streamify(promise, factory) {\r\n  var _then = promise.then;\r\n  promise.then = function() {\r\n    factory();\r\n    var newPromise = _then.apply(promise, arguments);\r\n    return streamify(newPromise, factory);\r\n  };\r\n  promise.stream = factory;\r\n  return promise;\r\n}\r\n\r\n/**\r\n * Normarize Salesforce API host name\r\n * @private\r\n */\r\nfunction normalizeApiHost(apiHost) {\r\n  var m = /(\\w+)\\.(visual\\.force|salesforce)\\.com$/.exec(apiHost);\r\n  if (m) {\r\n    apiHost = m[1] + \".salesforce.com\";\r\n  }\r\n  return apiHost;\r\n}\r\n\r\n/**\r\n * Class for HTTP request transport\r\n *\r\n * @class\r\n * @protected\r\n */\r\nvar Transport = module.exports = function() {};\r\n\r\n/**\r\n * Make HTTP request, returns promise instead of stream\r\n *\r\n * @param {Object} params - HTTP request\r\n * @param {Callback.<Object>} [callback] - Calback Function\r\n * @returns {Promise.<Object>}\r\n */\r\nTransport.prototype.httpRequest = function(params, callback) {\r\n  var deferred = Promise.defer();\r\n  var req;\r\n  var httpRequest = this._getHttpRequestModule();\r\n  var createRequest = function() {\r\n    if (!req) {\r\n      req = httpRequest(params, function(err, response) {\r\n        if (err) {\r\n          deferred.reject(err);\r\n        } else {\r\n          deferred.resolve(response);\r\n        }\r\n      });\r\n    }\r\n    return req;\r\n  };\r\n  return streamify(deferred.promise, createRequest).thenCall(callback);\r\n};\r\n\r\n/** @protected **/\r\nTransport.prototype._getHttpRequestModule = function() {\r\n  return request;\r\n};\r\n\r\n\r\n/**\r\n * Class for JSONP request transport\r\n * @class Transport~JsonpTransport\r\n * @protected\r\n * @extends Transport\r\n * @param {String} jsonpParam - Callback parameter name for JSONP invokation.\r\n */\r\nvar JsonpTransport = Transport.JsonpTransport = function(jsonpParam) {\r\n  this._jsonpParam = jsonpParam;\r\n};\r\n\r\ninherits(JsonpTransport, Transport);\r\n\r\n/** @protected **/\r\nJsonpTransport.prototype._getHttpRequestModule = function() {\r\n  return jsonp.createRequest(this._jsonpParam);\r\n};\r\n\r\nJsonpTransport.supported = jsonp.supported;\r\n\r\n\r\n/**\r\n * Class for Sfdc Canvas request transport\r\n * @class Transport~CanvasTransport\r\n * @protected\r\n * @extends Transport\r\n * @param {Object} signedRequest - Parsed signed request object\r\n */\r\nvar CanvasTransport = Transport.CanvasTransport = function(signedRequest) {\r\n  this._signedRequest = signedRequest;\r\n};\r\n\r\ninherits(CanvasTransport, Transport);\r\n\r\n/** @protected **/\r\nCanvasTransport.prototype._getHttpRequestModule = function() {\r\n  return canvas.createRequest(this._signedRequest);\r\n};\r\n\r\nCanvasTransport.supported = canvas.supported;\r\n\r\n\r\n/**\r\n * Class for HTTP request transport using AJAX proxy service\r\n *\r\n * @class Transport~ProxyTransport\r\n * @protected\r\n * @extends Transport\r\n * @param {String} proxyUrl - AJAX Proxy server URL\r\n */\r\nvar ProxyTransport = Transport.ProxyTransport = function(proxyUrl) {\r\n  this._proxyUrl = proxyUrl;\r\n};\r\n\r\ninherits(ProxyTransport, Transport);\r\n\r\n/**\r\n * Make HTTP request via AJAX proxy\r\n *\r\n * @method Transport~ProxyTransport#httpRequest\r\n * @param {Object} params - HTTP request\r\n * @param {Callback.<Object>} [callback] - Calback Function\r\n * @returns {Promise.<Object>}\r\n */\r\nProxyTransport.prototype.httpRequest = function(params, callback) {\r\n  var url = params.url;\r\n  if (url.indexOf(\"/\") === 0) {\r\n    url = baseUrl + url;\r\n  }\r\n  var proxyParams = {\r\n    method: params.method,\r\n    url: this._proxyUrl + '?' + Date.now() + \".\" + (\"\" + Math.random()).substring(2),\r\n    headers: {\r\n      'salesforceproxy-endpoint': url\r\n    }\r\n  };\r\n  if (params.body || params.body === \"\") {\r\n    proxyParams.body = params.body;\r\n  }\r\n  if (params.headers) {\r\n    for (var name in params.headers) {\r\n      proxyParams.headers[name] = params.headers[name];\r\n    }\r\n  }\r\n  return ProxyTransport.super_.prototype.httpRequest.call(this, proxyParams, callback);\r\n};\r\n\r\n\r\n/**\r\n * Class for HTTP request transport using a proxy server\r\n *\r\n * @class Transport~HttpProxyTransport\r\n * @protected\r\n * @extends Transport\r\n * @param {String} httpProxy - URL of the HTTP proxy server\r\n */\r\nvar HttpProxyTransport = Transport.HttpProxyTransport = function(httpProxy) {\r\n  this._httpProxy = httpProxy;\r\n};\r\n\r\ninherits(HttpProxyTransport, Transport);\r\n\r\n/**\r\n * Make HTTP request via proxy server\r\n *\r\n * @method Transport~HttpProxyTransport#httpRequest\r\n * @param {Object} params - HTTP request\r\n * @param {Callback.<Object>} [callback] - Callback Function\r\n * @returns {Promise.<Object>}\r\n */\r\nHttpProxyTransport.prototype.httpRequest = function(params, callback) {\r\n  var url = params.url;\r\n  if (url.indexOf(\"/\") === 0) {\r\n    url = baseUrl + url;\r\n  }\r\n  var proxyParams = {\r\n    method: params.method,\r\n    url: params.url,\r\n    proxy: this._httpProxy,\r\n    headers: {}\r\n  };\r\n  if (params.body || params.body === \"\") {\r\n    proxyParams.body = params.body;\r\n  }\r\n  if (params.headers) {\r\n    for (var name in params.headers) {\r\n      proxyParams.headers[name] = params.headers[name];\r\n    }\r\n  }\r\n  return HttpProxyTransport.super_.prototype.httpRequest.call(this, proxyParams, callback);\r\n};\r\n","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  get: function () {\n    if (!(this instanceof Buffer)) {\n      return undefined\n    }\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  get: function () {\n    if (!(this instanceof Buffer)) {\n      return undefined\n    }\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('Invalid typed array length')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value) || (value && isArrayBuffer(value.buffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return fromObject(value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if (ArrayBuffer.isView(obj) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0)\n      }\n      return fromArrayLike(obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data)\n    }\n  }\n\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (ArrayBuffer.isView(buf)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isArrayBuffer(string)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check\n// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166\nfunction isArrayBuffer (obj) {\n  return obj instanceof ArrayBuffer ||\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\n      typeof obj.byteLength === 'number')\n}\n\nfunction numberIsNaN (obj) {\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","// Generated by CoffeeScript 1.12.7\nvar Parser, StringDecoder, isObjLiteral, stream, util;\n\nstream = require('stream');\n\nutil = require('util');\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nmodule.exports = function() {\n  var callback, called, chunks, data, err, options, parser;\n  if (arguments.length === 3) {\n    data = arguments[0];\n    options = arguments[1];\n    callback = arguments[2];\n    if (typeof callback !== 'function') {\n      throw Error(\"Invalid callback argument: \" + (JSON.stringify(callback)));\n    }\n    if (!(typeof data === 'string' || Buffer.isBuffer(arguments[0]))) {\n      return callback(Error(\"Invalid data argument: \" + (JSON.stringify(data))));\n    }\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'string' || Buffer.isBuffer(arguments[0])) {\n      data = arguments[0];\n    } else if (isObjLiteral(arguments[0])) {\n      options = arguments[0];\n    } else {\n      err = \"Invalid first argument: \" + (JSON.stringify(arguments[0]));\n    }\n    if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else if (isObjLiteral(arguments[1])) {\n      if (options) {\n        err = 'Invalid arguments: got options twice as first and second arguments';\n      } else {\n        options = arguments[1];\n      }\n    } else {\n      err = \"Invalid first argument: \" + (JSON.stringify(arguments[1]));\n    }\n    if (err) {\n      if (!callback) {\n        throw Error(err);\n      } else {\n        return callback(Error(err));\n      }\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  }\n  if (options == null) {\n    options = {};\n  }\n  parser = new Parser(options);\n  if (data != null) {\n    process.nextTick(function() {\n      parser.write(data);\n      return parser.end();\n    });\n  }\n  if (callback) {\n    called = false;\n    chunks = options.objname ? {} : [];\n    parser.on('readable', function() {\n      var chunk, results;\n      results = [];\n      while (chunk = parser.read()) {\n        if (options.objname) {\n          results.push(chunks[chunk[0]] = chunk[1]);\n        } else {\n          results.push(chunks.push(chunk));\n        }\n      }\n      return results;\n    });\n    parser.on('error', function(err) {\n      called = true;\n      return callback(err);\n    });\n    parser.on('end', function() {\n      if (!called) {\n        return callback(null, chunks);\n      }\n    });\n  }\n  return parser;\n};\n\nParser = function(options) {\n  var base, base1, base10, base11, base12, base13, base14, base15, base16, base2, base3, base4, base5, base6, base7, base8, base9, k, v;\n  if (options == null) {\n    options = {};\n  }\n  this.options = {};\n  for (k in options) {\n    v = options[k];\n    this.options[k] = v;\n  }\n  this.options.objectMode = true;\n  stream.Transform.call(this, this.options);\n  if ((base = this.options).rowDelimiter == null) {\n    base.rowDelimiter = null;\n  }\n  if (typeof this.options.rowDelimiter === 'string') {\n    this.options.rowDelimiter = [this.options.rowDelimiter];\n  }\n  if ((base1 = this.options).delimiter == null) {\n    base1.delimiter = ',';\n  }\n  if (this.options.quote !== void 0 && !this.options.quote) {\n    this.options.quote = '';\n  }\n  if ((base2 = this.options).quote == null) {\n    base2.quote = '\"';\n  }\n  if ((base3 = this.options).escape == null) {\n    base3.escape = '\"';\n  }\n  if ((base4 = this.options).columns == null) {\n    base4.columns = null;\n  }\n  if ((base5 = this.options).comment == null) {\n    base5.comment = '';\n  }\n  if ((base6 = this.options).objname == null) {\n    base6.objname = false;\n  }\n  if ((base7 = this.options).trim == null) {\n    base7.trim = false;\n  }\n  if ((base8 = this.options).ltrim == null) {\n    base8.ltrim = false;\n  }\n  if ((base9 = this.options).rtrim == null) {\n    base9.rtrim = false;\n  }\n  if ((base10 = this.options).auto_parse == null) {\n    base10.auto_parse = false;\n  }\n  if ((base11 = this.options).auto_parse_date == null) {\n    base11.auto_parse_date = false;\n  }\n  if (this.options.auto_parse_date === true) {\n    this.options.auto_parse_date = function(value) {\n      var m;\n      m = Date.parse(value);\n      if (!isNaN(m)) {\n        value = new Date(m);\n      }\n      return value;\n    };\n  }\n  if ((base12 = this.options).relax == null) {\n    base12.relax = false;\n  }\n  if ((base13 = this.options).relax_column_count == null) {\n    base13.relax_column_count = false;\n  }\n  if ((base14 = this.options).skip_empty_lines == null) {\n    base14.skip_empty_lines = false;\n  }\n  if ((base15 = this.options).max_limit_on_data_read == null) {\n    base15.max_limit_on_data_read = 128000;\n  }\n  if ((base16 = this.options).skip_lines_with_empty_values == null) {\n    base16.skip_lines_with_empty_values = false;\n  }\n  this.lines = 0;\n  this.count = 0;\n  this.skipped_line_count = 0;\n  this.empty_line_count = 0;\n  this.is_int = /^(\\-|\\+)?([1-9]+[0-9]*)$/;\n  this.is_float = function(value) {\n    return (value - parseFloat(value) + 1) >= 0;\n  };\n  this._ = {\n    decoder: new StringDecoder(),\n    quoting: false,\n    commenting: false,\n    field: null,\n    nextChar: null,\n    closingQuote: 0,\n    line: [],\n    chunks: [],\n    rawBuf: '',\n    buf: '',\n    rowDelimiterLength: this.options.rowDelimiter ? Math.max.apply(Math, this.options.rowDelimiter.map(function(v) {\n      return v.length;\n    })) : void 0\n  };\n  return this;\n};\n\nutil.inherits(Parser, stream.Transform);\n\nmodule.exports.Parser = Parser;\n\nParser.prototype._transform = function(chunk, encoding, callback) {\n  var err;\n  if (chunk instanceof Buffer) {\n    chunk = this._.decoder.write(chunk);\n  }\n  err = this.__write(chunk, false);\n  if (err) {\n    return this.emit('error', err);\n  }\n  return callback();\n};\n\nParser.prototype._flush = function(callback) {\n  var err;\n  err = this.__write(this._.decoder.end(), true);\n  if (err) {\n    return this.emit('error', err);\n  }\n  if (this._.quoting) {\n    this.emit('error', new Error(\"Quoted field not terminated at line \" + (this.lines + 1)));\n    return;\n  }\n  if (this._.line.length > 0) {\n    err = this.__push(this._.line);\n    if (err) {\n      return callback(err);\n    }\n  }\n  return callback();\n};\n\nParser.prototype.__push = function(line) {\n  var call_column_udf, columns, err, field, i, j, len, lineAsColumns, rawBuf, ref, row;\n  if (this.options.skip_lines_with_empty_values && line.join('').trim() === '') {\n    return;\n  }\n  row = null;\n  if (this.options.columns === true) {\n    this.options.columns = line;\n    rawBuf = '';\n    return;\n  } else if (typeof this.options.columns === 'function') {\n    call_column_udf = function(fn, line) {\n      var columns, err;\n      try {\n        columns = fn.call(null, line);\n        return [null, columns];\n      } catch (error) {\n        err = error;\n        return [err];\n      }\n    };\n    ref = call_column_udf(this.options.columns, line), err = ref[0], columns = ref[1];\n    if (err) {\n      return err;\n    }\n    this.options.columns = columns;\n    rawBuf = '';\n    return;\n  }\n  if (!this._.line_length && line.length > 0) {\n    this._.line_length = this.options.columns ? this.options.columns.length : line.length;\n  }\n  if (line.length === 1 && line[0] === '') {\n    this.empty_line_count++;\n  } else if (line.length !== this._.line_length) {\n    if (this.options.relax_column_count) {\n      this.count++;\n      this.skipped_line_count++;\n    } else if (this.options.columns != null) {\n      return Error(\"Number of columns on line \" + this.lines + \" does not match header\");\n    } else {\n      return Error(\"Number of columns is inconsistent on line \" + this.lines);\n    }\n  } else {\n    this.count++;\n  }\n  if (this.options.columns != null) {\n    lineAsColumns = {};\n    for (i = j = 0, len = line.length; j < len; i = ++j) {\n      field = line[i];\n      if (this.options.columns[i] === false) {\n        continue;\n      }\n      lineAsColumns[this.options.columns[i]] = field;\n    }\n    if (this.options.objname) {\n      row = [lineAsColumns[this.options.objname], lineAsColumns];\n    } else {\n      row = lineAsColumns;\n    }\n  } else {\n    row = line;\n  }\n  if (this.count < this.options.from) {\n    return;\n  }\n  if (this.count > this.options.to) {\n    return;\n  }\n  if (this.options.raw) {\n    this.push({\n      raw: this._.rawBuf,\n      row: row\n    });\n    this._.rawBuf = '';\n  } else {\n    this.push(row);\n  }\n  return null;\n};\n\nParser.prototype.__write = function(chars, end) {\n  var areNextCharsDelimiter, areNextCharsRowDelimiters, auto_parse, char, err, escapeIsQuote, i, isDelimiter, isEscape, isNextCharAComment, isQuote, isRowDelimiter, isRowDelimiterLength, is_float, is_int, l, ltrim, nextCharPos, ref, ref1, ref2, ref3, ref4, ref5, remainingBuffer, rowDelimiter, rtrim, wasCommenting;\n  is_int = (function(_this) {\n    return function(value) {\n      if (typeof _this.is_int === 'function') {\n        return _this.is_int(value);\n      } else {\n        return _this.is_int.test(value);\n      }\n    };\n  })(this);\n  is_float = (function(_this) {\n    return function(value) {\n      if (typeof _this.is_float === 'function') {\n        return _this.is_float(value);\n      } else {\n        return _this.is_float.test(value);\n      }\n    };\n  })(this);\n  auto_parse = (function(_this) {\n    return function(value) {\n      if (!_this.options.auto_parse) {\n        return value;\n      }\n      if (typeof _this.options.auto_parse === 'function') {\n        return _this.options.auto_parse(value);\n      }\n      if (is_int(value)) {\n        value = parseInt(value);\n      } else if (is_float(value)) {\n        value = parseFloat(value);\n      } else if (_this.options.auto_parse_date) {\n        value = _this.options.auto_parse_date(value);\n      }\n      return value;\n    };\n  })(this);\n  ltrim = this.options.trim || this.options.ltrim;\n  rtrim = this.options.trim || this.options.rtrim;\n  chars = this._.buf + chars;\n  l = chars.length;\n  i = 0;\n  if (this.lines === 0 && 0xFEFF === chars.charCodeAt(0)) {\n    i++;\n  }\n  while (i < l) {\n    if (!end) {\n      remainingBuffer = chars.substr(i, l - i);\n      if ((!this.options.rowDelimiter && i + 3 > l) || (!this._.commenting && l - i < this.options.comment.length && this.options.comment.substr(0, l - i) === remainingBuffer) || (this.options.rowDelimiter && l - i < this._.rowDelimiterLength && this.options.rowDelimiter.some(function(rd) {\n        return rd.substr(0, l - i) === remainingBuffer;\n      })) || (this.options.rowDelimiter && this._.quoting && l - i < (this.options.quote.length + this._.rowDelimiterLength) && this.options.rowDelimiter.some((function(_this) {\n        return function(rd) {\n          return (_this.options.quote + rd).substr(0, l - i) === remainingBuffer;\n        };\n      })(this))) || (l - i <= this.options.delimiter.length && this.options.delimiter.substr(0, l - i) === remainingBuffer) || (l - i <= this.options.escape.length && this.options.escape.substr(0, l - i) === remainingBuffer)) {\n        break;\n      }\n    }\n    char = this._.nextChar ? this._.nextChar : chars.charAt(i);\n    this._.nextChar = l > i + 1 ? chars.charAt(i + 1) : '';\n    if (this.options.raw) {\n      this._.rawBuf += char;\n    }\n    if (this.options.rowDelimiter == null) {\n      nextCharPos = i;\n      rowDelimiter = null;\n      if (!this._.quoting && (char === '\\n' || char === '\\r')) {\n        rowDelimiter = char;\n        nextCharPos += 1;\n      } else if (this._.quoting && char === this.options.quote && ((ref = this._.nextChar) === '\\n' || ref === '\\r')) {\n        rowDelimiter = this._.nextChar;\n        nextCharPos += 2;\n        if (this.raw) {\n          rawBuf += this._.nextChar;\n        }\n      }\n      if (rowDelimiter) {\n        if (rowDelimiter === '\\r' && chars.charAt(nextCharPos) === '\\n') {\n          rowDelimiter += '\\n';\n        }\n        this.options.rowDelimiter = [rowDelimiter];\n        this._.rowDelimiterLength = rowDelimiter.length;\n      }\n    }\n    if (!this._.commenting && char === this.options.escape) {\n      escapeIsQuote = this.options.escape === this.options.quote;\n      isEscape = this._.nextChar === this.options.escape;\n      isQuote = this._.nextChar === this.options.quote;\n      if (!(escapeIsQuote && (this._.field == null) && !this._.quoting) && (isEscape || isQuote)) {\n        i++;\n        char = this._.nextChar;\n        this._.nextChar = chars.charAt(i + 1);\n        if (this._.field == null) {\n          this._.field = '';\n        }\n        this._.field += char;\n        if (this.options.raw) {\n          this._.rawBuf += char;\n        }\n        i++;\n        continue;\n      }\n    }\n    if (!this._.commenting && char === this.options.quote) {\n      if (this._.quoting) {\n        areNextCharsRowDelimiters = this.options.rowDelimiter && this.options.rowDelimiter.some(function(rd) {\n          return chars.substr(i + 1, rd.length) === rd;\n        });\n        areNextCharsDelimiter = chars.substr(i + 1, this.options.delimiter.length) === this.options.delimiter;\n        isNextCharAComment = this._.nextChar === this.options.comment;\n        if (this._.nextChar && !areNextCharsRowDelimiters && !areNextCharsDelimiter && !isNextCharAComment) {\n          if (this.options.relax) {\n            this._.quoting = false;\n            if (this._.field) {\n              this._.field = \"\" + this.options.quote + this._.field;\n            }\n          } else {\n            return Error(\"Invalid closing quote at line \" + (this.lines + 1) + \"; found \" + (JSON.stringify(this._.nextChar)) + \" instead of delimiter \" + (JSON.stringify(this.options.delimiter)));\n          }\n        } else {\n          this._.quoting = false;\n          this._.closingQuote = this.options.quote.length;\n          i++;\n          if (end && i === l) {\n            this._.line.push(auto_parse(this._.field || ''));\n            this._.field = null;\n          }\n          continue;\n        }\n      } else if (!this._.field) {\n        this._.quoting = true;\n        i++;\n        continue;\n      } else if ((this._.field != null) && !this.options.relax) {\n        return Error(\"Invalid opening quote at line \" + (this.lines + 1));\n      }\n    }\n    isRowDelimiter = this.options.rowDelimiter && this.options.rowDelimiter.some(function(rd) {\n      return chars.substr(i, rd.length) === rd;\n    });\n    if (isRowDelimiter || (end && i === l - 1)) {\n      this.lines++;\n    }\n    wasCommenting = false;\n    if (!this._.commenting && !this._.quoting && this.options.comment && chars.substr(i, this.options.comment.length) === this.options.comment) {\n      this._.commenting = true;\n    } else if (this._.commenting && isRowDelimiter) {\n      wasCommenting = true;\n      this._.commenting = false;\n    }\n    isDelimiter = chars.substr(i, this.options.delimiter.length) === this.options.delimiter;\n    if (!this._.commenting && !this._.quoting && (isDelimiter || isRowDelimiter)) {\n      if (isRowDelimiter) {\n        isRowDelimiterLength = this.options.rowDelimiter.filter(function(rd) {\n          return chars.substr(i, rd.length) === rd;\n        })[0].length;\n      }\n      if (isRowDelimiter && this._.line.length === 0 && (this._.field == null)) {\n        if (wasCommenting || this.options.skip_empty_lines) {\n          i += isRowDelimiterLength;\n          this._.nextChar = chars.charAt(i);\n          continue;\n        }\n      }\n      if (rtrim) {\n        if (!this._.closingQuote) {\n          this._.field = (ref1 = this._.field) != null ? ref1.trimRight() : void 0;\n        }\n      }\n      this._.line.push(auto_parse(this._.field || ''));\n      this._.closingQuote = 0;\n      this._.field = null;\n      if (isDelimiter) {\n        i += this.options.delimiter.length;\n        this._.nextChar = chars.charAt(i);\n        if (end && !this._.nextChar) {\n          isRowDelimiter = true;\n          this._.line.push('');\n        }\n      }\n      if (isRowDelimiter) {\n        err = this.__push(this._.line);\n        if (err) {\n          return err;\n        }\n        this._.line = [];\n        i += isRowDelimiterLength;\n        this._.nextChar = chars.charAt(i);\n        continue;\n      }\n    } else if (!this._.commenting && !this._.quoting && (char === ' ' || char === '\\t')) {\n      if (this._.field == null) {\n        this._.field = '';\n      }\n      if (!(ltrim && !this._.field)) {\n        this._.field += char;\n      }\n      i++;\n    } else if (!this._.commenting) {\n      if (this._.field == null) {\n        this._.field = '';\n      }\n      this._.field += char;\n      i++;\n    } else {\n      i++;\n    }\n    if (!this._.commenting && ((ref2 = this._.field) != null ? ref2.length : void 0) > this.options.max_limit_on_data_read) {\n      return Error(\"Field exceeds max_limit_on_data_read setting (\" + this.options.max_limit_on_data_read + \") \" + (JSON.stringify(this.options.delimiter)));\n    }\n    if (!this._.commenting && ((ref3 = this._.line) != null ? ref3.length : void 0) > this.options.max_limit_on_data_read) {\n      return Error(\"Row delimiter not found in the file \" + (JSON.stringify(this.options.rowDelimiter)));\n    }\n  }\n  if (end) {\n    if (this._.field != null) {\n      if (rtrim) {\n        if (!this._.closingQuote) {\n          this._.field = (ref4 = this._.field) != null ? ref4.trimRight() : void 0;\n        }\n      }\n      this._.line.push(auto_parse(this._.field || ''));\n      this._.field = null;\n    }\n    if (((ref5 = this._.field) != null ? ref5.length : void 0) > this.options.max_limit_on_data_read) {\n      return Error(\"Delimiter not found in the file \" + (JSON.stringify(this.options.delimiter)));\n    }\n    if (l === 0) {\n      this.lines++;\n    }\n    if (this._.line.length > this.options.max_limit_on_data_read) {\n      return Error(\"Row delimiter not found in the file \" + (JSON.stringify(this.options.rowDelimiter)));\n    }\n  }\n  this._.buf = chars.substr(i);\n  return null;\n};\n\nisObjLiteral = function(_obj) {\n  var _test;\n  _test = _obj;\n  if (typeof _obj !== 'object' || _obj === null || Array.isArray(_obj)) {\n    return false;\n  } else {\n    return (function() {\n      while (!false) {\n        if (Object.getPrototypeOf(_test = Object.getPrototypeOf(_test)) === null) {\n          break;\n        }\n      }\n      return Object.getPrototypeOf(_obj === _test);\n    })();\n  }\n};\n","// Generated by CoffeeScript 1.12.7\nvar StringDecoder, parse;\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nparse = require('./index');\n\nmodule.exports = function(data, options) {\n  var decoder, err, parser, records;\n  if (options == null) {\n    options = {};\n  }\n  records = options.objname ? {} : [];\n  if (data instanceof Buffer) {\n    decoder = new StringDecoder();\n    data = decoder.write(data);\n  }\n  parser = new parse.Parser(options);\n  parser.push = function(record) {\n    if (options.objname) {\n      return records[record[0]] = record[1];\n    } else {\n      return records.push(record);\n    }\n  };\n  err = parser.__write(data, false);\n  if (err) {\n    throw err;\n  }\n  if (data instanceof Buffer) {\n    err = parser.__write(data.end(), true);\n    if (err) {\n      throw err;\n    }\n  }\n  parser._flush((function() {}));\n  return records;\n};\n","// Generated by CoffeeScript 1.12.7\nvar Stringifier, get, stream, util;\n\nstream = require('stream');\n\nutil = require('util');\n\nget = require('lodash.get');\n\nmodule.exports = function() {\n  var callback, chunks, data, options, stringifier;\n  if (arguments.length === 3) {\n    data = arguments[0];\n    options = arguments[1];\n    callback = arguments[2];\n  } else if (arguments.length === 2) {\n    if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n    if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else {\n      options = arguments[1];\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n    } else if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  }\n  if (options == null) {\n    options = {};\n  }\n  stringifier = new Stringifier(options);\n  if (data) {\n    process.nextTick(function() {\n      var d, j, len;\n      for (j = 0, len = data.length; j < len; j++) {\n        d = data[j];\n        stringifier.write(d);\n      }\n      return stringifier.end();\n    });\n  }\n  if (callback) {\n    chunks = [];\n    stringifier.on('readable', function() {\n      var chunk, results;\n      results = [];\n      while (chunk = stringifier.read()) {\n        results.push(chunks.push(chunk));\n      }\n      return results;\n    });\n    stringifier.on('error', function(err) {\n      return callback(err);\n    });\n    stringifier.on('end', function() {\n      return callback(null, chunks.join(''));\n    });\n  }\n  return stringifier;\n};\n\nStringifier = function(opts) {\n  var base, base1, base10, base11, base12, base13, base2, base3, base4, base5, base6, base7, base8, base9, k, options, v;\n  if (opts == null) {\n    opts = {};\n  }\n  options = {};\n  for (k in opts) {\n    v = opts[k];\n    options[k] = v;\n  }\n  stream.Transform.call(this, options);\n  this.options = options;\n  if ((base = this.options).delimiter == null) {\n    base.delimiter = ',';\n  }\n  if ((base1 = this.options).quote == null) {\n    base1.quote = '\"';\n  }\n  if ((base2 = this.options).quoted == null) {\n    base2.quoted = false;\n  }\n  if ((base3 = this.options).quotedEmpty == null) {\n    base3.quotedEmpty = void 0;\n  }\n  if ((base4 = this.options).quotedString == null) {\n    base4.quotedString = false;\n  }\n  if ((base5 = this.options).eof == null) {\n    base5.eof = true;\n  }\n  if ((base6 = this.options).escape == null) {\n    base6.escape = '\"';\n  }\n  if ((base7 = this.options).columns == null) {\n    base7.columns = null;\n  }\n  if ((base8 = this.options).header == null) {\n    base8.header = false;\n  }\n  if ((base9 = this.options).formatters == null) {\n    base9.formatters = {};\n  }\n  if ((base10 = this.options.formatters).date == null) {\n    base10.date = function(value) {\n      return '' + value.getTime();\n    };\n  }\n  if ((base11 = this.options.formatters).bool == null) {\n    base11.bool = function(value) {\n      if (value) {\n        return '1';\n      } else {\n        return '';\n      }\n    };\n  }\n  if ((base12 = this.options.formatters).object == null) {\n    base12.object = function(value) {\n      return JSON.stringify(value);\n    };\n  }\n  if ((base13 = this.options).rowDelimiter == null) {\n    base13.rowDelimiter = '\\n';\n  }\n  if (this.countWriten == null) {\n    this.countWriten = 0;\n  }\n  switch (this.options.rowDelimiter) {\n    case 'auto':\n      this.options.rowDelimiter = null;\n      break;\n    case 'unix':\n      this.options.rowDelimiter = \"\\n\";\n      break;\n    case 'mac':\n      this.options.rowDelimiter = \"\\r\";\n      break;\n    case 'windows':\n      this.options.rowDelimiter = \"\\r\\n\";\n      break;\n    case 'unicode':\n      this.options.rowDelimiter = \"\\u2028\";\n  }\n  return this;\n};\n\nutil.inherits(Stringifier, stream.Transform);\n\nmodule.exports.Stringifier = Stringifier;\n\nStringifier.prototype.headers = function() {\n  var k, label, labels;\n  if (!this.options.header) {\n    return;\n  }\n  if (!this.options.columns) {\n    return;\n  }\n  labels = this.options.columns;\n  if (typeof labels === 'object') {\n    labels = (function() {\n      var results;\n      results = [];\n      for (k in labels) {\n        label = labels[k];\n        results.push(label);\n      }\n      return results;\n    })();\n  }\n  if (this.options.eof) {\n    labels = this.stringify(labels) + this.options.rowDelimiter;\n  } else {\n    labels = this.stringify(labels);\n  }\n  return stream.Transform.prototype.write.call(this, labels);\n};\n\nStringifier.prototype.end = function(chunk, encoding, callback) {\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  return stream.Transform.prototype.end.apply(this, arguments);\n};\n\nStringifier.prototype.write = function(chunk, encoding, callback) {\n  var base, e, preserve;\n  if (chunk == null) {\n    return;\n  }\n  preserve = typeof chunk !== 'object';\n  if (!preserve) {\n    if (this.countWriten === 0 && !Array.isArray(chunk)) {\n      if ((base = this.options).columns == null) {\n        base.columns = Object.keys(chunk);\n      }\n    }\n    try {\n      this.emit('record', chunk, this.countWriten);\n    } catch (error) {\n      e = error;\n      return this.emit('error', e);\n    }\n    if (this.options.eof) {\n      chunk = this.stringify(chunk) + this.options.rowDelimiter;\n    } else {\n      chunk = this.stringify(chunk);\n      if (this.options.header || this.countWriten) {\n        chunk = this.options.rowDelimiter + chunk;\n      }\n    }\n  }\n  if (typeof chunk === 'number') {\n    chunk = \"\" + chunk;\n  }\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  if (!preserve) {\n    this.countWriten++;\n  }\n  return stream.Transform.prototype.write.call(this, chunk, encoding, callback);\n};\n\nStringifier.prototype._transform = function(chunk, encoding, callback) {\n  this.push(chunk);\n  return callback();\n};\n\nStringifier.prototype.stringify = function(line) {\n  var _line, column, columns, containsEscape, containsLinebreak, containsQuote, containsdelimiter, delimiter, escape, field, i, j, l, newLine, quote, ref, ref1, regexp, shouldQuote, value;\n  if (typeof line !== 'object') {\n    return line;\n  }\n  columns = this.options.columns;\n  if (typeof columns === 'object' && columns !== null && !Array.isArray(columns)) {\n    columns = Object.keys(columns);\n  }\n  delimiter = this.options.delimiter;\n  quote = this.options.quote;\n  escape = this.options.escape;\n  if (!Array.isArray(line)) {\n    _line = [];\n    if (columns) {\n      for (i = j = 0, ref = columns.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        column = columns[i];\n        value = get(line, column);\n        _line[i] = (typeof value === 'undefined' || value === null) ? '' : value;\n      }\n    } else {\n      for (column in line) {\n        _line.push(line[column]);\n      }\n    }\n    line = _line;\n    _line = null;\n  } else if (columns) {\n    line.splice(columns.length);\n  }\n  if (Array.isArray(line)) {\n    newLine = '';\n    for (i = l = 0, ref1 = line.length; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {\n      field = line[i];\n      if (typeof field === 'string') {\n\n      } else if (typeof field === 'number') {\n        field = '' + field;\n      } else if (typeof field === 'boolean') {\n        field = this.options.formatters.bool(field);\n      } else if (field instanceof Date) {\n        field = this.options.formatters.date(field);\n      } else if (typeof field === 'object' && field !== null) {\n        field = this.options.formatters.object(field);\n      }\n      if (field) {\n        containsdelimiter = field.indexOf(delimiter) >= 0;\n        containsQuote = field.indexOf(quote) >= 0;\n        containsEscape = field.indexOf(escape) >= 0 && (escape !== quote);\n        containsLinebreak = field.indexOf('\\r') >= 0 || field.indexOf('\\n') >= 0;\n        shouldQuote = containsQuote || containsdelimiter || containsLinebreak || this.options.quoted || (this.options.quotedString && typeof line[i] === 'string');\n        if (shouldQuote && containsEscape) {\n          regexp = escape === '\\\\' ? new RegExp(escape + escape, 'g') : new RegExp(escape, 'g');\n          field = field.replace(regexp, escape + escape);\n        }\n        if (containsQuote) {\n          regexp = new RegExp(quote, 'g');\n          field = field.replace(regexp, escape + quote);\n        }\n        if (shouldQuote) {\n          field = quote + field + quote;\n        }\n        newLine += field;\n      } else if (this.options.quotedEmpty || ((this.options.quotedEmpty == null) && line[i] === '' && this.options.quotedString)) {\n        newLine += quote + quote;\n      }\n      if (i !== line.length - 1) {\n        newLine += delimiter;\n      }\n    }\n    line = newLine;\n  }\n  return line;\n};\n","// Generated by CoffeeScript 1.12.7\nvar StringDecoder, stringify;\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nstringify = require('./index');\n\nmodule.exports = function(records, options) {\n  var data, decoder, i, len, record, stringifier;\n  if (options == null) {\n    options = {};\n  }\n  data = [];\n  if (records instanceof Buffer) {\n    decoder = new StringDecoder();\n    records = decoder.write(records);\n  }\n  stringifier = new stringify.Stringifier(options);\n  stringifier.push = function(record) {\n    if (record) {\n      return data.push(record.toString());\n    }\n  };\n  for (i = 0, len = records.length; i < len; i++) {\n    record = records[i];\n    stringifier.write(record);\n  }\n  stringifier.end();\n  return data.join('');\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill\nvar objectKeys = Object.keys || objectKeysPolyfill\nvar bind = Function.prototype.bind || functionBindPolyfill\n\nfunction EventEmitter() {\n  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n    this._events = objectCreate(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nvar hasDefineProperty;\ntry {\n  var o = {};\n  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n  hasDefineProperty = o.x === 0;\n} catch (err) { hasDefineProperty = false }\nif (hasDefineProperty) {\n  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n    enumerable: true,\n    get: function() {\n      return defaultMaxListeners;\n    },\n    set: function(arg) {\n      // check whether the input is a positive number (whose value is zero or\n      // greater and not a NaN).\n      if (typeof arg !== 'number' || arg < 0 || arg !== arg)\n        throw new TypeError('\"defaultMaxListeners\" must be a positive number');\n      defaultMaxListeners = arg;\n    }\n  });\n} else {\n  EventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    if (arguments.length > 1)\n      er = arguments[1];\n    if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Unhandled \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n      // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n      // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = objectCreate(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n          listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n          prepend ? [listener, existing] : [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n            existing.length + ' \"' + String(type) + '\" listeners ' +\n            'added. Use emitter.setMaxListeners() to ' +\n            'increase limit.');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        if (typeof console === 'object' && console.warn) {\n          console.warn('%s: %s', w.name, w.message);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    switch (arguments.length) {\n      case 0:\n        return this.listener.call(this.target);\n      case 1:\n        return this.listener.call(this.target, arguments[0]);\n      case 2:\n        return this.listener.call(this.target, arguments[0], arguments[1]);\n      case 3:\n        return this.listener.call(this.target, arguments[0], arguments[1],\n            arguments[2]);\n      default:\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i)\n          args[i] = arguments[i];\n        this.listener.apply(this.target, args);\n    }\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = bind.call(onceWrapper, state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = objectCreate(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else\n          spliceOne(list, position);\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = objectCreate(null);\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = objectCreate(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = objectKeys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = objectCreate(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (!events)\n    return [];\n\n  var evlistener = events[type];\n  if (!evlistener)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n  var F = function() {};\n  F.prototype = proto;\n  return new F;\n}\nfunction objectKeysPolyfill(obj) {\n  var keys = [];\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {\n    keys.push(k);\n  }\n  return k;\n}\nfunction functionBindPolyfill(context) {\n  var fn = this;\n  return function () {\n    return fn.apply(context, arguments);\n  };\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","/**\n * @license\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash core -o ./dist/lodash.core.js`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.10';\n\n  /** Error message constants. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_PARTIAL_FLAG = 32;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      stringTag = '[object String]';\n\n  /** Used to match HTML entities and HTML characters. */\n  var reUnescapedHtml = /[&<>\"']/g,\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    array.push.apply(array, values);\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return baseMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /** Used for built-in method references. */\n  var arrayProto = Array.prototype,\n      objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to generate unique IDs. */\n  var idCounter = 0;\n\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n  var nativeObjectToString = objectProto.toString;\n\n  /** Used to restore the original `_` reference in `_.noConflict`. */\n  var oldDash = root._;\n\n  /** Built-in value references. */\n  var objectCreate = Object.create,\n      propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeIsFinite = root.isFinite,\n      nativeKeys = overArg(Object.keys, Object),\n      nativeMax = Math.max;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps `value` to enable implicit method\n   * chain sequences. Methods that operate on and return arrays, collections,\n   * and functions can be chained together. Methods that retrieve a single value\n   * or may return a primitive value will automatically end the chain sequence\n   * and return the unwrapped value. Otherwise, the value must be unwrapped\n   * with `_#value`.\n   *\n   * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n   * enabled using `_.chain`.\n   *\n   * The execution of chained methods is lazy, that is, it's deferred until\n   * `_#value` is implicitly or explicitly called.\n   *\n   * Lazy evaluation allows several methods to support shortcut fusion.\n   * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n   * the creation of intermediate arrays and can greatly reduce the number of\n   * iteratee executions. Sections of a chain sequence qualify for shortcut\n   * fusion if the section is applied to an array and iteratees accept only\n   * one argument. The heuristic for whether a section qualifies for shortcut\n   * fusion is subject to change.\n   *\n   * Chaining is supported in custom builds as long as the `_#value` method is\n   * directly or indirectly included in the build.\n   *\n   * In addition to lodash methods, wrappers have `Array` and `String` methods.\n   *\n   * The wrapper `Array` methods are:\n   * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n   *\n   * The wrapper `String` methods are:\n   * `replace` and `split`\n   *\n   * The wrapper methods that support shortcut fusion are:\n   * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n   * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n   * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n   *\n   * The chainable wrapper methods are:\n   * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n   * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n   * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n   * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n   * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n   * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n   * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n   * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n   * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n   * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n   * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n   * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n   * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n   * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n   * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n   * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n   * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n   * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n   * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n   * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n   * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n   * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n   * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n   * `zipObject`, `zipObjectDeep`, and `zipWith`\n   *\n   * The wrapper methods that are **not** chainable by default are:\n   * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n   * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n   * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n   * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n   * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n   * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n   * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n   * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n   * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n   * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n   * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n   * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n   * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n   * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n   * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n   * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n   * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n   * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n   * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n   * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n   * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n   * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n   * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n   * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n   * `upperFirst`, `value`, and `words`\n   *\n   * @name _\n   * @constructor\n   * @category Seq\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // Returns an unwrapped value.\n   * wrapped.reduce(_.add);\n   * // => 6\n   *\n   * // Returns a wrapped value.\n   * var squares = wrapped.map(square);\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash(value) {\n    return value instanceof LodashWrapper\n      ? value\n      : new LodashWrapper(value);\n  }\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} proto The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  var baseCreate = (function() {\n    function object() {}\n    return function(proto) {\n      if (!isObject(proto)) {\n        return {};\n      }\n      if (objectCreate) {\n        return objectCreate(proto);\n      }\n      object.prototype = proto;\n      var result = new object;\n      object.prototype = undefined;\n      return result;\n    };\n  }());\n\n  /**\n   * The base constructor for creating `lodash` wrapper objects.\n   *\n   * @private\n   * @param {*} value The value to wrap.\n   * @param {boolean} [chainAll] Enable explicit method chain sequences.\n   */\n  function LodashWrapper(value, chainAll) {\n    this.__wrapped__ = value;\n    this.__actions__ = [];\n    this.__chain__ = !!chainAll;\n  }\n\n  LodashWrapper.prototype = baseCreate(lodash.prototype);\n  LodashWrapper.prototype.constructor = LodashWrapper;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns `value` to `key` of `object` if the existing value is not equivalent\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function assignValue(object, key, value) {\n    var objValue = object[key];\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n        (value === undefined && !(key in object))) {\n      baseAssignValue(object, key, value);\n    }\n  }\n\n  /**\n   * The base implementation of `assignValue` and `assignMergeValue` without\n   * value checks.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function baseAssignValue(object, key, value) {\n    object[key] = value;\n  }\n\n  /**\n   * The base implementation of `_.delay` and `_.defer` which accepts `args`\n   * to provide to `func`.\n   *\n   * @private\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {Array} args The arguments to provide to `func`.\n   * @returns {number|Object} Returns the timer id or timeout object.\n   */\n  function baseDelay(func, wait, args) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\n  }\n\n  /**\n   * The base implementation of `_.forEach` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   */\n  var baseEach = createBaseEach(baseForOwn);\n\n  /**\n   * The base implementation of `_.every` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`\n   */\n  function baseEvery(collection, predicate) {\n    var result = true;\n    baseEach(collection, function(value, index, collection) {\n      result = !!predicate(value, index, collection);\n      return result;\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of methods like `_.max` and `_.min` which accepts a\n   * `comparator` to determine the extremum value.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The iteratee invoked per iteration.\n   * @param {Function} comparator The comparator used to compare values.\n   * @returns {*} Returns the extremum value.\n   */\n  function baseExtremum(array, iteratee, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index],\n          current = iteratee(value);\n\n      if (current != null && (computed === undefined\n            ? (current === current && !false)\n            : comparator(current, computed)\n          )) {\n        var computed = current,\n            result = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.filter` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function baseFilter(collection, predicate) {\n    var result = [];\n    baseEach(collection, function(value, index, collection) {\n      if (predicate(value, index, collection)) {\n        result.push(value);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.flatten` with support for restricting flattening.\n   *\n   * @private\n   * @param {Array} array The array to flatten.\n   * @param {number} depth The maximum recursion depth.\n   * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n   * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n   * @param {Array} [result=[]] The initial result value.\n   * @returns {Array} Returns the new flattened array.\n   */\n  function baseFlatten(array, depth, predicate, isStrict, result) {\n    var index = -1,\n        length = array.length;\n\n    predicate || (predicate = isFlattenable);\n    result || (result = []);\n\n    while (++index < length) {\n      var value = array[index];\n      if (depth > 0 && predicate(value)) {\n        if (depth > 1) {\n          // Recursively flatten arrays (susceptible to call stack limits).\n          baseFlatten(value, depth - 1, predicate, isStrict, result);\n        } else {\n          arrayPush(result, value);\n        }\n      } else if (!isStrict) {\n        result[result.length] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `baseForOwn` which iterates over `object`\n   * properties returned by `keysFunc` and invokes `iteratee` for each property.\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {Function} keysFunc The function to get the keys of `object`.\n   * @returns {Object} Returns `object`.\n   */\n  var baseFor = createBaseFor();\n\n  /**\n   * The base implementation of `_.forOwn` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Object} Returns `object`.\n   */\n  function baseForOwn(object, iteratee) {\n    return object && baseFor(object, iteratee, keys);\n  }\n\n  /**\n   * The base implementation of `_.functions` which creates an array of\n   * `object` function property names filtered from `props`.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @param {Array} props The property names to filter.\n   * @returns {Array} Returns the function names.\n   */\n  function baseFunctions(object, props) {\n    return baseFilter(props, function(key) {\n      return isFunction(object[key]);\n    });\n  }\n\n  /**\n   * The base implementation of `getTag` without fallbacks for buggy environments.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the `toStringTag`.\n   */\n  function baseGetTag(value) {\n    return objectToString(value);\n  }\n\n  /**\n   * The base implementation of `_.gt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is greater than `other`,\n   *  else `false`.\n   */\n  function baseGt(value, other) {\n    return value > other;\n  }\n\n  /**\n   * The base implementation of `_.isArguments`.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   */\n  var baseIsArguments = noop;\n\n  /**\n   * The base implementation of `_.isDate` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   */\n  function baseIsDate(value) {\n    return isObjectLike(value) && baseGetTag(value) == dateTag;\n  }\n\n  /**\n   * The base implementation of `_.isEqual` which supports partial comparisons\n   * and tracks traversed objects.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @param {boolean} bitmask The bitmask flags.\n   *  1 - Unordered comparison\n   *  2 - Partial comparison\n   * @param {Function} [customizer] The function to customize comparisons.\n   * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   */\n  function baseIsEqual(value, other, bitmask, customizer, stack) {\n    if (value === other) {\n      return true;\n    }\n    if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n      return value !== value && other !== other;\n    }\n    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n  }\n\n  /**\n   * A specialized version of `baseIsEqual` for arrays and objects which performs\n   * deep comparisons and tracks traversed objects enabling objects with circular\n   * references to be compared.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n    var objIsArr = isArray(object),\n        othIsArr = isArray(other),\n        objTag = objIsArr ? arrayTag : baseGetTag(object),\n        othTag = othIsArr ? arrayTag : baseGetTag(other);\n\n    objTag = objTag == argsTag ? objectTag : objTag;\n    othTag = othTag == argsTag ? objectTag : othTag;\n\n    var objIsObj = objTag == objectTag,\n        othIsObj = othTag == objectTag,\n        isSameTag = objTag == othTag;\n\n    stack || (stack = []);\n    var objStack = find(stack, function(entry) {\n      return entry[0] == object;\n    });\n    var othStack = find(stack, function(entry) {\n      return entry[0] == other;\n    });\n    if (objStack && othStack) {\n      return objStack[1] == other;\n    }\n    stack.push([object, other]);\n    stack.push([other, object]);\n    if (isSameTag && !objIsObj) {\n      var result = (objIsArr)\n        ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n        : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      stack.pop();\n      return result;\n    }\n    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n      if (objIsWrapped || othIsWrapped) {\n        var objUnwrapped = objIsWrapped ? object.value() : object,\n            othUnwrapped = othIsWrapped ? other.value() : other;\n\n        var result = equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        stack.pop();\n        return result;\n      }\n    }\n    if (!isSameTag) {\n      return false;\n    }\n    var result = equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    stack.pop();\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.isRegExp` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   */\n  function baseIsRegExp(value) {\n    return isObjectLike(value) && baseGetTag(value) == regexpTag;\n  }\n\n  /**\n   * The base implementation of `_.iteratee`.\n   *\n   * @private\n   * @param {*} [value=_.identity] The value to convert to an iteratee.\n   * @returns {Function} Returns the iteratee.\n   */\n  function baseIteratee(func) {\n    if (typeof func == 'function') {\n      return func;\n    }\n    if (func == null) {\n      return identity;\n    }\n    return (typeof func == 'object' ? baseMatches : baseProperty)(func);\n  }\n\n  /**\n   * The base implementation of `_.lt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is less than `other`,\n   *  else `false`.\n   */\n  function baseLt(value, other) {\n    return value < other;\n  }\n\n  /**\n   * The base implementation of `_.map` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function baseMap(collection, iteratee) {\n    var index = -1,\n        result = isArrayLike(collection) ? Array(collection.length) : [];\n\n    baseEach(collection, function(value, key, collection) {\n      result[++index] = iteratee(value, key, collection);\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.matches` which doesn't clone `source`.\n   *\n   * @private\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   */\n  function baseMatches(source) {\n    var props = nativeKeys(source);\n    return function(object) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length];\n        if (!(key in object &&\n              baseIsEqual(source[key], object[key], COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG)\n            )) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  /**\n   * The base implementation of `_.pick` without support for individual\n   * property identifiers.\n   *\n   * @private\n   * @param {Object} object The source object.\n   * @param {string[]} paths The property paths to pick.\n   * @returns {Object} Returns the new object.\n   */\n  function basePick(object, props) {\n    object = Object(object);\n    return reduce(props, function(result, key) {\n      if (key in object) {\n        result[key] = object[key];\n      }\n      return result;\n    }, {});\n  }\n\n  /**\n   * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @returns {Function} Returns the new function.\n   */\n  function baseRest(func, start) {\n    return setToString(overRest(func, start, identity), func + '');\n  }\n\n  /**\n   * The base implementation of `_.slice` without an iteratee call guard.\n   *\n   * @private\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function baseSlice(array, start, end) {\n    var index = -1,\n        length = array.length;\n\n    if (start < 0) {\n      start = -start > length ? 0 : (length + start);\n    }\n    end = end > length ? length : end;\n    if (end < 0) {\n      end += length;\n    }\n    length = start > end ? 0 : ((end - start) >>> 0);\n    start >>>= 0;\n\n    var result = Array(length);\n    while (++index < length) {\n      result[index] = array[index + start];\n    }\n    return result;\n  }\n\n  /**\n   * Copies the values of `source` to `array`.\n   *\n   * @private\n   * @param {Array} source The array to copy values from.\n   * @param {Array} [array=[]] The array to copy values to.\n   * @returns {Array} Returns `array`.\n   */\n  function copyArray(source) {\n    return baseSlice(source, 0, source.length);\n  }\n\n  /**\n   * The base implementation of `_.some` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function baseSome(collection, predicate) {\n    var result;\n\n    baseEach(collection, function(value, index, collection) {\n      result = predicate(value, index, collection);\n      return !result;\n    });\n    return !!result;\n  }\n\n  /**\n   * The base implementation of `wrapperValue` which returns the result of\n   * performing a sequence of actions on the unwrapped `value`, where each\n   * successive action is supplied the return value of the previous.\n   *\n   * @private\n   * @param {*} value The unwrapped value.\n   * @param {Array} actions Actions to perform to resolve the unwrapped value.\n   * @returns {*} Returns the resolved value.\n   */\n  function baseWrapperValue(value, actions) {\n    var result = value;\n    return reduce(actions, function(result, action) {\n      return action.func.apply(action.thisArg, arrayPush([result], action.args));\n    }, result);\n  }\n\n  /**\n   * Compares values to sort them in ascending order.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function compareAscending(value, other) {\n    if (value !== other) {\n      var valIsDefined = value !== undefined,\n          valIsNull = value === null,\n          valIsReflexive = value === value,\n          valIsSymbol = false;\n\n      var othIsDefined = other !== undefined,\n          othIsNull = other === null,\n          othIsReflexive = other === other,\n          othIsSymbol = false;\n\n      if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n          (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n          (valIsNull && othIsDefined && othIsReflexive) ||\n          (!valIsDefined && othIsReflexive) ||\n          !valIsReflexive) {\n        return 1;\n      }\n      if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n          (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n          (othIsNull && valIsDefined && valIsReflexive) ||\n          (!othIsDefined && valIsReflexive) ||\n          !othIsReflexive) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Copies properties of `source` to `object`.\n   *\n   * @private\n   * @param {Object} source The object to copy properties from.\n   * @param {Array} props The property identifiers to copy.\n   * @param {Object} [object={}] The object to copy properties to.\n   * @param {Function} [customizer] The function to customize copied values.\n   * @returns {Object} Returns `object`.\n   */\n  function copyObject(source, props, object, customizer) {\n    var isNew = !object;\n    object || (object = {});\n\n    var index = -1,\n        length = props.length;\n\n    while (++index < length) {\n      var key = props[index];\n\n      var newValue = customizer\n        ? customizer(object[key], source[key], key, object, source)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = source[key];\n      }\n      if (isNew) {\n        baseAssignValue(object, key, newValue);\n      } else {\n        assignValue(object, key, newValue);\n      }\n    }\n    return object;\n  }\n\n  /**\n   * Creates a function like `_.assign`.\n   *\n   * @private\n   * @param {Function} assigner The function to assign values.\n   * @returns {Function} Returns the new assigner function.\n   */\n  function createAssigner(assigner) {\n    return baseRest(function(object, sources) {\n      var index = -1,\n          length = sources.length,\n          customizer = length > 1 ? sources[length - 1] : undefined;\n\n      customizer = (assigner.length > 3 && typeof customizer == 'function')\n        ? (length--, customizer)\n        : undefined;\n\n      object = Object(object);\n      while (++index < length) {\n        var source = sources[index];\n        if (source) {\n          assigner(object, source, index, customizer);\n        }\n      }\n      return object;\n    });\n  }\n\n  /**\n   * Creates a `baseEach` or `baseEachRight` function.\n   *\n   * @private\n   * @param {Function} eachFunc The function to iterate over a collection.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseEach(eachFunc, fromRight) {\n    return function(collection, iteratee) {\n      if (collection == null) {\n        return collection;\n      }\n      if (!isArrayLike(collection)) {\n        return eachFunc(collection, iteratee);\n      }\n      var length = collection.length,\n          index = fromRight ? length : -1,\n          iterable = Object(collection);\n\n      while ((fromRight ? index-- : ++index < length)) {\n        if (iteratee(iterable[index], index, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    };\n  }\n\n  /**\n   * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n   *\n   * @private\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseFor(fromRight) {\n    return function(object, iteratee, keysFunc) {\n      var index = -1,\n          iterable = Object(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (length--) {\n        var key = props[fromRight ? length : ++index];\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n      return object;\n    };\n  }\n\n  /**\n   * Creates a function that produces an instance of `Ctor` regardless of\n   * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n   *\n   * @private\n   * @param {Function} Ctor The constructor to wrap.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createCtor(Ctor) {\n    return function() {\n      // Use a `switch` statement to work with class constructors. See\n      // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n      // for more details.\n      var args = arguments;\n      var thisBinding = baseCreate(Ctor.prototype),\n          result = Ctor.apply(thisBinding, args);\n\n      // Mimic the constructor's `return` behavior.\n      // See https://es5.github.io/#x13.2.2 for more details.\n      return isObject(result) ? result : thisBinding;\n    };\n  }\n\n  /**\n   * Creates a `_.find` or `_.findLast` function.\n   *\n   * @private\n   * @param {Function} findIndexFunc The function to find the collection index.\n   * @returns {Function} Returns the new find function.\n   */\n  function createFind(findIndexFunc) {\n    return function(collection, predicate, fromIndex) {\n      var iterable = Object(collection);\n      if (!isArrayLike(collection)) {\n        var iteratee = baseIteratee(predicate, 3);\n        collection = keys(collection);\n        predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n      }\n      var index = findIndexFunc(collection, predicate, fromIndex);\n      return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke it with the `this` binding\n   * of `thisArg` and `partials` prepended to the arguments it receives.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} partials The arguments to prepend to those provided to\n   *  the new function.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createPartial(func, bitmask, thisArg, partials) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    var isBind = bitmask & WRAP_BIND_FLAG,\n        Ctor = createCtor(func);\n\n    function wrapper() {\n      var argsIndex = -1,\n          argsLength = arguments.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          args = Array(leftLength + argsLength),\n          fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n      while (++leftIndex < leftLength) {\n        args[leftIndex] = partials[leftIndex];\n      }\n      while (argsLength--) {\n        args[leftIndex++] = arguments[++argsIndex];\n      }\n      return fn.apply(isBind ? thisArg : this, args);\n    }\n    return wrapper;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for arrays with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Array} array The array to compare.\n   * @param {Array} other The other array to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `array` and `other` objects.\n   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n   */\n  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n        arrLength = array.length,\n        othLength = other.length;\n\n    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n      return false;\n    }\n    var index = -1,\n        result = true,\n        seen = (bitmask & COMPARE_UNORDERED_FLAG) ? [] : undefined;\n\n    // Ignore non-index properties.\n    while (++index < arrLength) {\n      var arrValue = array[index],\n          othValue = other[index];\n\n      var compared;\n      if (compared !== undefined) {\n        if (compared) {\n          continue;\n        }\n        result = false;\n        break;\n      }\n      // Recursively compare arrays (susceptible to call stack limits).\n      if (seen) {\n        if (!baseSome(other, function(othValue, othIndex) {\n              if (!indexOf(seen, othIndex) &&\n                  (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                return seen.push(othIndex);\n              }\n            })) {\n          result = false;\n          break;\n        }\n      } else if (!(\n            arrValue === othValue ||\n              equalFunc(arrValue, othValue, bitmask, customizer, stack)\n          )) {\n        result = false;\n        break;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for comparing objects of\n   * the same `toStringTag`.\n   *\n   * **Note:** This function only supports comparing values with tags of\n   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {string} tag The `toStringTag` of the objects to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n    switch (tag) {\n\n      case boolTag:\n      case dateTag:\n      case numberTag:\n        // Coerce booleans to `1` or `0` and dates to milliseconds.\n        // Invalid dates are coerced to `NaN`.\n        return eq(+object, +other);\n\n      case errorTag:\n        return object.name == other.name && object.message == other.message;\n\n      case regexpTag:\n      case stringTag:\n        // Coerce regexes to strings and treat strings, primitives and objects,\n        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n        // for more details.\n        return object == (other + '');\n\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for objects with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n        objProps = keys(object),\n        objLength = objProps.length,\n        othProps = keys(other),\n        othLength = othProps.length;\n\n    if (objLength != othLength && !isPartial) {\n      return false;\n    }\n    var index = objLength;\n    while (index--) {\n      var key = objProps[index];\n      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n        return false;\n      }\n    }\n    var result = true;\n\n    var skipCtor = isPartial;\n    while (++index < objLength) {\n      key = objProps[index];\n      var objValue = object[key],\n          othValue = other[key];\n\n      var compared;\n      // Recursively compare objects (susceptible to call stack limits).\n      if (!(compared === undefined\n            ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n            : compared\n          )) {\n        result = false;\n        break;\n      }\n      skipCtor || (skipCtor = key == 'constructor');\n    }\n    if (result && !skipCtor) {\n      var objCtor = object.constructor,\n          othCtor = other.constructor;\n\n      // Non `Object` object instances with different constructors are not equal.\n      if (objCtor != othCtor &&\n          ('constructor' in object && 'constructor' in other) &&\n          !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n            typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n        result = false;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseRest` which flattens the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @returns {Function} Returns the new function.\n   */\n  function flatRest(func) {\n    return setToString(overRest(func, undefined, flatten), func + '');\n  }\n\n  /**\n   * Checks if `value` is a flattenable `arguments` object or array.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n   */\n  function isFlattenable(value) {\n    return isArray(value) || isArguments(value);\n  }\n\n  /**\n   * Checks if `value` is a valid array-like index.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n   */\n  function isIndex(value, length) {\n    var type = typeof value;\n    length = length == null ? MAX_SAFE_INTEGER : length;\n\n    return !!length &&\n      (type == 'number' ||\n        (type != 'symbol' && reIsUint.test(value))) &&\n          (value > -1 && value % 1 == 0 && value < length);\n  }\n\n  /**\n   * Checks if the given arguments are from an iteratee call.\n   *\n   * @private\n   * @param {*} value The potential iteratee value argument.\n   * @param {*} index The potential iteratee index or key argument.\n   * @param {*} object The potential iteratee object argument.\n   * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n   *  else `false`.\n   */\n  function isIterateeCall(value, index, object) {\n    if (!isObject(object)) {\n      return false;\n    }\n    var type = typeof index;\n    if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)\n        ) {\n      return eq(object[index], value);\n    }\n    return false;\n  }\n\n  /**\n   * This function is like\n   * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * except that it includes inherited enumerable properties.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n  function nativeKeysIn(object) {\n    var result = [];\n    if (object != null) {\n      for (var key in Object(object)) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `value` to a string using `Object.prototype.toString`.\n   *\n   * @private\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   */\n  function objectToString(value) {\n    return nativeObjectToString.call(value);\n  }\n\n  /**\n   * A specialized version of `baseRest` which transforms the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @param {Function} transform The rest array transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overRest(func, start, transform) {\n    start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n    return function() {\n      var args = arguments,\n          index = -1,\n          length = nativeMax(args.length - start, 0),\n          array = Array(length);\n\n      while (++index < length) {\n        array[index] = args[start + index];\n      }\n      index = -1;\n      var otherArgs = Array(start + 1);\n      while (++index < start) {\n        otherArgs[index] = args[index];\n      }\n      otherArgs[start] = transform(array);\n      return func.apply(this, otherArgs);\n    };\n  }\n\n  /**\n   * Sets the `toString` method of `func` to return `string`.\n   *\n   * @private\n   * @param {Function} func The function to modify.\n   * @param {Function} string The `toString` result.\n   * @returns {Function} Returns `func`.\n   */\n  var setToString = identity;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values removed. The values `false`, `null`,\n   * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns the new array of filtered values.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    return baseFilter(array, Boolean);\n  }\n\n  /**\n   * Creates a new array concatenating `array` with any additional arrays\n   * and/or values.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Array\n   * @param {Array} array The array to concatenate.\n   * @param {...*} [values] The values to concatenate.\n   * @returns {Array} Returns the new concatenated array.\n   * @example\n   *\n   * var array = [1];\n   * var other = _.concat(array, 2, [3], [[4]]);\n   *\n   * console.log(other);\n   * // => [1, 2, 3, [4]]\n   *\n   * console.log(array);\n   * // => [1]\n   */\n  function concat() {\n    var length = arguments.length;\n    if (!length) {\n      return [];\n    }\n    var args = Array(length - 1),\n        array = arguments[0],\n        index = length;\n\n    while (index--) {\n      args[index - 1] = arguments[index];\n    }\n    return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n  }\n\n  /**\n   * This method is like `_.find` except that it returns the index of the first\n   * element `predicate` returns truthy for instead of the element itself.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the found element, else `-1`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'active': false },\n   *   { 'user': 'fred',    'active': false },\n   *   { 'user': 'pebbles', 'active': true }\n   * ];\n   *\n   * _.findIndex(users, function(o) { return o.user == 'barney'; });\n   * // => 0\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.findIndex(users, { 'user': 'fred', 'active': false });\n   * // => 1\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.findIndex(users, ['active', false]);\n   * // => 0\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.findIndex(users, 'active');\n   * // => 2\n   */\n  function findIndex(array, predicate, fromIndex) {\n    var length = array == null ? 0 : array.length;\n    if (!length) {\n      return -1;\n    }\n    var index = fromIndex == null ? 0 : toInteger(fromIndex);\n    if (index < 0) {\n      index = nativeMax(length + index, 0);\n    }\n    return baseFindIndex(array, baseIteratee(predicate, 3), index);\n  }\n\n  /**\n   * Flattens `array` a single level deep.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, [3, [4]], 5]\n   */\n  function flatten(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? baseFlatten(array, 1) : [];\n  }\n\n  /**\n   * Recursively flattens `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flattenDeep([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, 3, 4, 5]\n   */\n  function flattenDeep(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? baseFlatten(array, INFINITY) : [];\n  }\n\n  /**\n   * Gets the first element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias first\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the first element of `array`.\n   * @example\n   *\n   * _.head([1, 2, 3]);\n   * // => 1\n   *\n   * _.head([]);\n   * // => undefined\n   */\n  function head(array) {\n    return (array && array.length) ? array[0] : undefined;\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `value` is found in `array`\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons. If `fromIndex` is negative, it's used as the\n   * offset from the end of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 1, 2], 2);\n   * // => 1\n   *\n   * // Search from the `fromIndex`.\n   * _.indexOf([1, 2, 1, 2], 2, 2);\n   * // => 3\n   */\n  function indexOf(array, value, fromIndex) {\n    var length = array == null ? 0 : array.length;\n    if (typeof fromIndex == 'number') {\n      fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n    } else {\n      fromIndex = 0;\n    }\n    var index = (fromIndex || 0) - 1,\n        isReflexive = value === value;\n\n    while (++index < length) {\n      var other = array[index];\n      if ((isReflexive ? other === value : other !== other)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Gets the last element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the last element of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   */\n  function last(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? array[length - 1] : undefined;\n  }\n\n  /**\n   * Creates a slice of `array` from `start` up to, but not including, `end`.\n   *\n   * **Note:** This method is used instead of\n   * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n   * returned.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function slice(array, start, end) {\n    var length = array == null ? 0 : array.length;\n    start = start == null ? 0 : +start;\n    end = end === undefined ? length : +end;\n    return length ? baseSlice(array, start, end) : [];\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n   * chain sequences enabled. The result of such sequences must be unwrapped\n   * with `_#value`.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.3.0\n   * @category Seq\n   * @param {*} value The value to wrap.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36 },\n   *   { 'user': 'fred',    'age': 40 },\n   *   { 'user': 'pebbles', 'age': 1 }\n   * ];\n   *\n   * var youngest = _\n   *   .chain(users)\n   *   .sortBy('age')\n   *   .map(function(o) {\n   *     return o.user + ' is ' + o.age;\n   *   })\n   *   .head()\n   *   .value();\n   * // => 'pebbles is 1'\n   */\n  function chain(value) {\n    var result = lodash(value);\n    result.__chain__ = true;\n    return result;\n  }\n\n  /**\n   * This method invokes `interceptor` and returns `value`. The interceptor\n   * is invoked with one argument; (value). The purpose of this method is to\n   * \"tap into\" a method chain sequence in order to modify intermediate results.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * _([1, 2, 3])\n   *  .tap(function(array) {\n   *    // Mutate input array.\n   *    array.pop();\n   *  })\n   *  .reverse()\n   *  .value();\n   * // => [2, 1]\n   */\n  function tap(value, interceptor) {\n    interceptor(value);\n    return value;\n  }\n\n  /**\n   * This method is like `_.tap` except that it returns the result of `interceptor`.\n   * The purpose of this method is to \"pass thru\" values replacing intermediate\n   * results in a method chain sequence.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns the result of `interceptor`.\n   * @example\n   *\n   * _('  abc  ')\n   *  .chain()\n   *  .trim()\n   *  .thru(function(value) {\n   *    return [value];\n   *  })\n   *  .value();\n   * // => ['abc']\n   */\n  function thru(value, interceptor) {\n    return interceptor(value);\n  }\n\n  /**\n   * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n   *\n   * @name chain\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 }\n   * ];\n   *\n   * // A sequence without explicit chaining.\n   * _(users).head();\n   * // => { 'user': 'barney', 'age': 36 }\n   *\n   * // A sequence with explicit chaining.\n   * _(users)\n   *   .chain()\n   *   .head()\n   *   .pick('user')\n   *   .value();\n   * // => { 'user': 'barney' }\n   */\n  function wrapperChain() {\n    return chain(this);\n  }\n\n  /**\n   * Executes the chain sequence to resolve the unwrapped value.\n   *\n   * @name value\n   * @memberOf _\n   * @since 0.1.0\n   * @alias toJSON, valueOf\n   * @category Seq\n   * @returns {*} Returns the resolved unwrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).value();\n   * // => [1, 2, 3]\n   */\n  function wrapperValue() {\n    return baseWrapperValue(this.__wrapped__, this.__actions__);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `predicate` returns truthy for **all** elements of `collection`.\n   * Iteration is stopped once `predicate` returns falsey. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * **Note:** This method returns `true` for\n   * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n   * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n   * elements of empty collections.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.every([true, 1, null, 'yes'], Boolean);\n   * // => false\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': false },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.every(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.every(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.every(users, 'active');\n   * // => false\n   */\n  function every(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseEvery(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning an array of all elements\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * **Note:** Unlike `_.remove`, this method returns a new array.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   * @see _.reject\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * _.filter(users, function(o) { return !o.active; });\n   * // => objects for ['fred']\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, { 'age': 36, 'active': true });\n   * // => objects for ['barney']\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, ['active', false]);\n   * // => objects for ['fred']\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.filter(users, 'active');\n   * // => objects for ['barney']\n   */\n  function filter(collection, predicate) {\n    return baseFilter(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning the first element\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {*} Returns the matched element, else `undefined`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36, 'active': true },\n   *   { 'user': 'fred',    'age': 40, 'active': false },\n   *   { 'user': 'pebbles', 'age': 1,  'active': true }\n   * ];\n   *\n   * _.find(users, function(o) { return o.age < 40; });\n   * // => object for 'barney'\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.find(users, { 'age': 1, 'active': true });\n   * // => object for 'pebbles'\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.find(users, ['active', false]);\n   * // => object for 'fred'\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.find(users, 'active');\n   * // => object for 'barney'\n   */\n  var find = createFind(findIndex);\n\n  /**\n   * Iterates over elements of `collection` and invokes `iteratee` for each element.\n   * The iteratee is invoked with three arguments: (value, index|key, collection).\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n   * property are iterated like arrays. To avoid this behavior use `_.forIn`\n   * or `_.forOwn` for object iteration.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias each\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   * @see _.forEachRight\n   * @example\n   *\n   * _.forEach([1, 2], function(value) {\n   *   console.log(value);\n   * });\n   * // => Logs `1` then `2`.\n   *\n   * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n   */\n  function forEach(collection, iteratee) {\n    return baseEach(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Creates an array of values by running each element in `collection` thru\n   * `iteratee`. The iteratee is invoked with three arguments:\n   * (value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n   *\n   * The guarded methods are:\n   * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n   * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n   * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n   * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * _.map([4, 8], square);\n   * // => [16, 64]\n   *\n   * _.map({ 'a': 4, 'b': 8 }, square);\n   * // => [16, 64] (iteration order is not guaranteed)\n   *\n   * var users = [\n   *   { 'user': 'barney' },\n   *   { 'user': 'fred' }\n   * ];\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, 'user');\n   * // => ['barney', 'fred']\n   */\n  function map(collection, iteratee) {\n    return baseMap(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Reduces `collection` to a value which is the accumulated result of running\n   * each element in `collection` thru `iteratee`, where each successive\n   * invocation is supplied the return value of the previous. If `accumulator`\n   * is not given, the first element of `collection` is used as the initial\n   * value. The iteratee is invoked with four arguments:\n   * (accumulator, value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.reduce`, `_.reduceRight`, and `_.transform`.\n   *\n   * The guarded methods are:\n   * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n   * and `sortBy`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @returns {*} Returns the accumulated value.\n   * @see _.reduceRight\n   * @example\n   *\n   * _.reduce([1, 2], function(sum, n) {\n   *   return sum + n;\n   * }, 0);\n   * // => 3\n   *\n   * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n   *   (result[value] || (result[value] = [])).push(key);\n   *   return result;\n   * }, {});\n   * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n   */\n  function reduce(collection, iteratee, accumulator) {\n    return baseReduce(collection, baseIteratee(iteratee), accumulator, arguments.length < 3, baseEach);\n  }\n\n  /**\n   * Gets the size of `collection` by returning its length for array-like\n   * values or the number of own enumerable string keyed properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object|string} collection The collection to inspect.\n   * @returns {number} Returns the collection size.\n   * @example\n   *\n   * _.size([1, 2, 3]);\n   * // => 3\n   *\n   * _.size({ 'a': 1, 'b': 2 });\n   * // => 2\n   *\n   * _.size('pebbles');\n   * // => 7\n   */\n  function size(collection) {\n    if (collection == null) {\n      return 0;\n    }\n    collection = isArrayLike(collection) ? collection : nativeKeys(collection);\n    return collection.length;\n  }\n\n  /**\n   * Checks if `predicate` returns truthy for **any** element of `collection`.\n   * Iteration is stopped once `predicate` returns truthy. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.some([null, 0, 'yes', false], Boolean);\n   * // => true\n   *\n   * var users = [\n   *   { 'user': 'barney', 'active': true },\n   *   { 'user': 'fred',   'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.some(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.some(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.some(users, 'active');\n   * // => true\n   */\n  function some(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseSome(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Creates an array of elements, sorted in ascending order by the results of\n   * running each element in a collection thru each iteratee. This method\n   * performs a stable sort, that is, it preserves the original sort order of\n   * equal elements. The iteratees are invoked with one argument: (value).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {...(Function|Function[])} [iteratees=[_.identity]]\n   *  The iteratees to sort by.\n   * @returns {Array} Returns the new sorted array.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'fred',   'age': 48 },\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 },\n   *   { 'user': 'barney', 'age': 34 }\n   * ];\n   *\n   * _.sortBy(users, [function(o) { return o.user; }]);\n   * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n   *\n   * _.sortBy(users, ['user', 'age']);\n   * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n   */\n  function sortBy(collection, iteratee) {\n    var index = 0;\n    iteratee = baseIteratee(iteratee);\n\n    return baseMap(baseMap(collection, function(value, key, collection) {\n      return { 'value': value, 'index': index++, 'criteria': iteratee(value, key, collection) };\n    }).sort(function(object, other) {\n      return compareAscending(object.criteria, other.criteria) || (object.index - other.index);\n    }), baseProperty('value'));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that invokes `func`, with the `this` binding and arguments\n   * of the created function, while it's called less than `n` times. Subsequent\n   * calls to the created function return the result of the last `func` invocation.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {number} n The number of calls at which `func` is no longer invoked.\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * jQuery(element).on('click', _.before(5, addContactToList));\n   * // => Allows adding up to 4 contacts to the list.\n   */\n  function before(n, func) {\n    var result;\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    n = toInteger(n);\n    return function() {\n      if (--n > 0) {\n        result = func.apply(this, arguments);\n      }\n      if (n <= 1) {\n        func = undefined;\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that invokes `func` with the `this` binding of `thisArg`\n   * and `partials` prepended to the arguments it receives.\n   *\n   * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n   * may be used as a placeholder for partially applied arguments.\n   *\n   * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n   * property of bound functions.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to bind.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {...*} [partials] The arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * function greet(greeting, punctuation) {\n   *   return greeting + ' ' + this.user + punctuation;\n   * }\n   *\n   * var object = { 'user': 'fred' };\n   *\n   * var bound = _.bind(greet, object, 'hi');\n   * bound('!');\n   * // => 'hi fred!'\n   *\n   * // Bound with placeholders.\n   * var bound = _.bind(greet, object, _, '!');\n   * bound('hi');\n   * // => 'hi fred!'\n   */\n  var bind = baseRest(function(func, thisArg, partials) {\n    return createPartial(func, WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG, thisArg, partials);\n  });\n\n  /**\n   * Defers invoking the `func` until the current call stack has cleared. Any\n   * additional arguments are provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to defer.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.defer(function(text) {\n   *   console.log(text);\n   * }, 'deferred');\n   * // => Logs 'deferred' after one millisecond.\n   */\n  var defer = baseRest(function(func, args) {\n    return baseDelay(func, 1, args);\n  });\n\n  /**\n   * Invokes `func` after `wait` milliseconds. Any additional arguments are\n   * provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.delay(function(text) {\n   *   console.log(text);\n   * }, 1000, 'later');\n   * // => Logs 'later' after one second.\n   */\n  var delay = baseRest(function(func, wait, args) {\n    return baseDelay(func, toNumber(wait) || 0, args);\n  });\n\n  /**\n   * Creates a function that negates the result of the predicate `func`. The\n   * `func` predicate is invoked with the `this` binding and arguments of the\n   * created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {Function} predicate The predicate to negate.\n   * @returns {Function} Returns the new negated function.\n   * @example\n   *\n   * function isEven(n) {\n   *   return n % 2 == 0;\n   * }\n   *\n   * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n   * // => [1, 3, 5]\n   */\n  function negate(predicate) {\n    if (typeof predicate != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return function() {\n      var args = arguments;\n      return !predicate.apply(this, args);\n    };\n  }\n\n  /**\n   * Creates a function that is restricted to invoking `func` once. Repeat calls\n   * to the function return the value of the first invocation. The `func` is\n   * invoked with the `this` binding and arguments of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var initialize = _.once(createApplication);\n   * initialize();\n   * initialize();\n   * // => `createApplication` is invoked once\n   */\n  function once(func) {\n    return before(2, func);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a shallow clone of `value`.\n   *\n   * **Note:** This method is loosely based on the\n   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n   * and supports cloning arrays, array buffers, booleans, date objects, maps,\n   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n   * arrays. The own enumerable properties of `arguments` objects are cloned\n   * as plain objects. An empty object is returned for uncloneable values such\n   * as error objects, functions, DOM nodes, and WeakMaps.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to clone.\n   * @returns {*} Returns the cloned value.\n   * @see _.cloneDeep\n   * @example\n   *\n   * var objects = [{ 'a': 1 }, { 'b': 2 }];\n   *\n   * var shallow = _.clone(objects);\n   * console.log(shallow[0] === objects[0]);\n   * // => true\n   */\n  function clone(value) {\n    if (!isObject(value)) {\n      return value;\n    }\n    return isArray(value) ? copyArray(value) : copyObject(value, nativeKeys(value));\n  }\n\n  /**\n   * Performs a\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * comparison between two values to determine if they are equivalent.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.eq(object, object);\n   * // => true\n   *\n   * _.eq(object, other);\n   * // => false\n   *\n   * _.eq('a', 'a');\n   * // => true\n   *\n   * _.eq('a', Object('a'));\n   * // => false\n   *\n   * _.eq(NaN, NaN);\n   * // => true\n   */\n  function eq(value, other) {\n    return value === other || (value !== value && other !== other);\n  }\n\n  /**\n   * Checks if `value` is likely an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   *  else `false`.\n   * @example\n   *\n   * _.isArguments(function() { return arguments; }());\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n      !propertyIsEnumerable.call(value, 'callee');\n  };\n\n  /**\n   * Checks if `value` is classified as an `Array` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n   * @example\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   *\n   * _.isArray(document.body.children);\n   * // => false\n   *\n   * _.isArray('abc');\n   * // => false\n   *\n   * _.isArray(_.noop);\n   * // => false\n   */\n  var isArray = Array.isArray;\n\n  /**\n   * Checks if `value` is array-like. A value is considered array-like if it's\n   * not a function and has a `value.length` that's an integer greater than or\n   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n   * @example\n   *\n   * _.isArrayLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLike(document.body.children);\n   * // => true\n   *\n   * _.isArrayLike('abc');\n   * // => true\n   *\n   * _.isArrayLike(_.noop);\n   * // => false\n   */\n  function isArrayLike(value) {\n    return value != null && isLength(value.length) && !isFunction(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a boolean primitive or object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n   * @example\n   *\n   * _.isBoolean(false);\n   * // => true\n   *\n   * _.isBoolean(null);\n   * // => false\n   */\n  function isBoolean(value) {\n    return value === true || value === false ||\n      (isObjectLike(value) && baseGetTag(value) == boolTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Date` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   * @example\n   *\n   * _.isDate(new Date);\n   * // => true\n   *\n   * _.isDate('Mon April 23 2012');\n   * // => false\n   */\n  var isDate = baseIsDate;\n\n  /**\n   * Checks if `value` is an empty object, collection, map, or set.\n   *\n   * Objects are considered empty if they have no own enumerable string keyed\n   * properties.\n   *\n   * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n   * jQuery-like collections are considered empty if they have a `length` of `0`.\n   * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty(null);\n   * // => true\n   *\n   * _.isEmpty(true);\n   * // => true\n   *\n   * _.isEmpty(1);\n   * // => true\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({ 'a': 1 });\n   * // => false\n   */\n  function isEmpty(value) {\n    if (isArrayLike(value) &&\n        (isArray(value) || isString(value) ||\n          isFunction(value.splice) || isArguments(value))) {\n      return !value.length;\n    }\n    return !nativeKeys(value).length;\n  }\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent.\n   *\n   * **Note:** This method supports comparing arrays, array buffers, booleans,\n   * date objects, error objects, maps, numbers, `Object` objects, regexes,\n   * sets, strings, symbols, and typed arrays. `Object` objects are compared\n   * by their own, not inherited, enumerable properties. Functions and DOM\n   * nodes are compared by strict equality, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.isEqual(object, other);\n   * // => true\n   *\n   * object === other;\n   * // => false\n   */\n  function isEqual(value, other) {\n    return baseIsEqual(value, other);\n  }\n\n  /**\n   * Checks if `value` is a finite primitive number.\n   *\n   * **Note:** This method is based on\n   * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n   * @example\n   *\n   * _.isFinite(3);\n   * // => true\n   *\n   * _.isFinite(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isFinite(Infinity);\n   * // => false\n   *\n   * _.isFinite('3');\n   * // => false\n   */\n  function isFinite(value) {\n    return typeof value == 'number' && nativeIsFinite(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Function` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   *\n   * _.isFunction(/abc/);\n   * // => false\n   */\n  function isFunction(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 9 which returns 'object' for typed arrays and other constructors.\n    var tag = baseGetTag(value);\n    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n  }\n\n  /**\n   * Checks if `value` is a valid array-like length.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n   * @example\n   *\n   * _.isLength(3);\n   * // => true\n   *\n   * _.isLength(Number.MIN_VALUE);\n   * // => false\n   *\n   * _.isLength(Infinity);\n   * // => false\n   *\n   * _.isLength('3');\n   * // => false\n   */\n  function isLength(value) {\n    return typeof value == 'number' &&\n      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n  }\n\n  /**\n   * Checks if `value` is the\n   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(_.noop);\n   * // => true\n   *\n   * _.isObject(null);\n   * // => false\n   */\n  function isObject(value) {\n    var type = typeof value;\n    return value != null && (type == 'object' || type == 'function');\n  }\n\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n  function isObjectLike(value) {\n    return value != null && typeof value == 'object';\n  }\n\n  /**\n   * Checks if `value` is `NaN`.\n   *\n   * **Note:** This method is based on\n   * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n   * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n   * `undefined` and other non-number values.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   * @example\n   *\n   * _.isNaN(NaN);\n   * // => true\n   *\n   * _.isNaN(new Number(NaN));\n   * // => true\n   *\n   * isNaN(undefined);\n   * // => true\n   *\n   * _.isNaN(undefined);\n   * // => false\n   */\n  function isNaN(value) {\n    // An `NaN` primitive is the only value that is not equal to itself.\n    // Perform the `toStringTag` check first to avoid errors with some\n    // ActiveX objects in IE.\n    return isNumber(value) && value != +value;\n  }\n\n  /**\n   * Checks if `value` is `null`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n   * @example\n   *\n   * _.isNull(null);\n   * // => true\n   *\n   * _.isNull(void 0);\n   * // => false\n   */\n  function isNull(value) {\n    return value === null;\n  }\n\n  /**\n   * Checks if `value` is classified as a `Number` primitive or object.\n   *\n   * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n   * classified as numbers, use the `_.isFinite` method.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n   * @example\n   *\n   * _.isNumber(3);\n   * // => true\n   *\n   * _.isNumber(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isNumber(Infinity);\n   * // => true\n   *\n   * _.isNumber('3');\n   * // => false\n   */\n  function isNumber(value) {\n    return typeof value == 'number' ||\n      (isObjectLike(value) && baseGetTag(value) == numberTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `RegExp` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   * @example\n   *\n   * _.isRegExp(/abc/);\n   * // => true\n   *\n   * _.isRegExp('/abc/');\n   * // => false\n   */\n  var isRegExp = baseIsRegExp;\n\n  /**\n   * Checks if `value` is classified as a `String` primitive or object.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('abc');\n   * // => true\n   *\n   * _.isString(1);\n   * // => false\n   */\n  function isString(value) {\n    return typeof value == 'string' ||\n      (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n  }\n\n  /**\n   * Checks if `value` is `undefined`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n   * @example\n   *\n   * _.isUndefined(void 0);\n   * // => true\n   *\n   * _.isUndefined(null);\n   * // => false\n   */\n  function isUndefined(value) {\n    return value === undefined;\n  }\n\n  /**\n   * Converts `value` to an array.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {Array} Returns the converted array.\n   * @example\n   *\n   * _.toArray({ 'a': 1, 'b': 2 });\n   * // => [1, 2]\n   *\n   * _.toArray('abc');\n   * // => ['a', 'b', 'c']\n   *\n   * _.toArray(1);\n   * // => []\n   *\n   * _.toArray(null);\n   * // => []\n   */\n  function toArray(value) {\n    if (!isArrayLike(value)) {\n      return values(value);\n    }\n    return value.length ? copyArray(value) : [];\n  }\n\n  /**\n   * Converts `value` to an integer.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {number} Returns the converted integer.\n   * @example\n   *\n   * _.toInteger(3.2);\n   * // => 3\n   *\n   * _.toInteger(Number.MIN_VALUE);\n   * // => 0\n   *\n   * _.toInteger(Infinity);\n   * // => 1.7976931348623157e+308\n   *\n   * _.toInteger('3.2');\n   * // => 3\n   */\n  var toInteger = Number;\n\n  /**\n   * Converts `value` to a number.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to process.\n   * @returns {number} Returns the number.\n   * @example\n   *\n   * _.toNumber(3.2);\n   * // => 3.2\n   *\n   * _.toNumber(Number.MIN_VALUE);\n   * // => 5e-324\n   *\n   * _.toNumber(Infinity);\n   * // => Infinity\n   *\n   * _.toNumber('3.2');\n   * // => 3.2\n   */\n  var toNumber = Number;\n\n  /**\n   * Converts `value` to a string. An empty string is returned for `null`\n   * and `undefined` values. The sign of `-0` is preserved.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   * @example\n   *\n   * _.toString(null);\n   * // => ''\n   *\n   * _.toString(-0);\n   * // => '-0'\n   *\n   * _.toString([1, 2, 3]);\n   * // => '1,2,3'\n   */\n  function toString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable string keyed properties of source objects to the\n   * destination object. Source objects are applied from left to right.\n   * Subsequent sources overwrite property assignments of previous sources.\n   *\n   * **Note:** This method mutates `object` and is loosely based on\n   * [`Object.assign`](https://mdn.io/Object/assign).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.10.0\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assignIn\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assign({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var assign = createAssigner(function(object, source) {\n    copyObject(source, nativeKeys(source), object);\n  });\n\n  /**\n   * This method is like `_.assign` except that it iterates over own and\n   * inherited source properties.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @alias extend\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assign\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n   */\n  var assignIn = createAssigner(function(object, source) {\n    copyObject(source, nativeKeysIn(source), object);\n  });\n\n  /**\n   * Creates an object that inherits from the `prototype` object. If a\n   * `properties` object is given, its own enumerable string keyed properties\n   * are assigned to the created object.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Object\n   * @param {Object} prototype The object to inherit from.\n   * @param {Object} [properties] The properties to assign to the object.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * function Circle() {\n   *   Shape.call(this);\n   * }\n   *\n   * Circle.prototype = _.create(Shape.prototype, {\n   *   'constructor': Circle\n   * });\n   *\n   * var circle = new Circle;\n   * circle instanceof Circle;\n   * // => true\n   *\n   * circle instanceof Shape;\n   * // => true\n   */\n  function create(prototype, properties) {\n    var result = baseCreate(prototype);\n    return properties == null ? result : assign(result, properties);\n  }\n\n  /**\n   * Assigns own and inherited enumerable string keyed properties of source\n   * objects to the destination object for all destination properties that\n   * resolve to `undefined`. Source objects are applied from left to right.\n   * Once a property is set, additional values of the same property are ignored.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.defaultsDeep\n   * @example\n   *\n   * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n   * // => { 'a': 1, 'b': 2 }\n   */\n  var defaults = baseRest(function(object, sources) {\n    object = Object(object);\n\n    var index = -1;\n    var length = sources.length;\n    var guard = length > 2 ? sources[2] : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      length = 1;\n    }\n\n    while (++index < length) {\n      var source = sources[index];\n      var props = keysIn(source);\n      var propsIndex = -1;\n      var propsLength = props.length;\n\n      while (++propsIndex < propsLength) {\n        var key = props[propsIndex];\n        var value = object[key];\n\n        if (value === undefined ||\n            (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n          object[key] = source[key];\n        }\n      }\n    }\n\n    return object;\n  });\n\n  /**\n   * Checks if `path` is a direct property of `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path to check.\n   * @returns {boolean} Returns `true` if `path` exists, else `false`.\n   * @example\n   *\n   * var object = { 'a': { 'b': 2 } };\n   * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n   *\n   * _.has(object, 'a');\n   * // => true\n   *\n   * _.has(object, 'a.b');\n   * // => true\n   *\n   * _.has(object, ['a', 'b']);\n   * // => true\n   *\n   * _.has(other, 'a');\n   * // => false\n   */\n  function has(object, path) {\n    return object != null && hasOwnProperty.call(object, path);\n  }\n\n  /**\n   * Creates an array of the own enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects. See the\n   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * for more details.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keys(new Foo);\n   * // => ['a', 'b'] (iteration order is not guaranteed)\n   *\n   * _.keys('hi');\n   * // => ['0', '1']\n   */\n  var keys = nativeKeys;\n\n  /**\n   * Creates an array of the own and inherited enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keysIn(new Foo);\n   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n   */\n  var keysIn = nativeKeysIn;\n\n  /**\n   * Creates an object composed of the picked `object` properties.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The source object.\n   * @param {...(string|string[])} [paths] The property paths to pick.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * var object = { 'a': 1, 'b': '2', 'c': 3 };\n   *\n   * _.pick(object, ['a', 'c']);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var pick = flatRest(function(object, paths) {\n    return object == null ? {} : basePick(object, paths);\n  });\n\n  /**\n   * This method is like `_.get` except that if the resolved value is a\n   * function it's invoked with the `this` binding of its parent object and\n   * its result is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path of the property to resolve.\n   * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n   * @returns {*} Returns the resolved value.\n   * @example\n   *\n   * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n   *\n   * _.result(object, 'a[0].b.c1');\n   * // => 3\n   *\n   * _.result(object, 'a[0].b.c2');\n   * // => 4\n   *\n   * _.result(object, 'a[0].b.c3', 'default');\n   * // => 'default'\n   *\n   * _.result(object, 'a[0].b.c3', _.constant('default'));\n   * // => 'default'\n   */\n  function result(object, path, defaultValue) {\n    var value = object == null ? undefined : object[path];\n    if (value === undefined) {\n      value = defaultValue;\n    }\n    return isFunction(value) ? value.call(object) : value;\n  }\n\n  /**\n   * Creates an array of the own enumerable string keyed property values of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property values.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.values(new Foo);\n   * // => [1, 2] (iteration order is not guaranteed)\n   *\n   * _.values('hi');\n   * // => ['h', 'i']\n   */\n  function values(object) {\n    return object == null ? [] : baseValues(object, keys(object));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n   * corresponding HTML entities.\n   *\n   * **Note:** No other characters are escaped. To escape additional\n   * characters use a third-party library like [_he_](https://mths.be/he).\n   *\n   * Though the \">\" character is escaped for symmetry, characters like\n   * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n   * unless they're part of a tag or unquoted attribute value. See\n   * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n   * (under \"semi-related fun fact\") for more details.\n   *\n   * When working with HTML you should always\n   * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n   * XSS vectors.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category String\n   * @param {string} [string=''] The string to escape.\n   * @returns {string} Returns the escaped string.\n   * @example\n   *\n   * _.escape('fred, barney, & pebbles');\n   * // => 'fred, barney, &amp; pebbles'\n   */\n  function escape(string) {\n    string = toString(string);\n    return (string && reHasUnescapedHtml.test(string))\n      ? string.replace(reUnescapedHtml, escapeHtmlChar)\n      : string;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * This method returns the first argument it receives.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   *\n   * console.log(_.identity(object) === object);\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Creates a function that invokes `func` with the arguments of the created\n   * function. If `func` is a property name, the created function returns the\n   * property value for a given element. If `func` is an array or object, the\n   * created function returns `true` for elements that contain the equivalent\n   * source properties, otherwise it returns `false`.\n   *\n   * @static\n   * @since 4.0.0\n   * @memberOf _\n   * @category Util\n   * @param {*} [func=_.identity] The value to convert to a callback.\n   * @returns {Function} Returns the callback.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n   * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, _.iteratee(['user', 'fred']));\n   * // => [{ 'user': 'fred', 'age': 40 }]\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, _.iteratee('user'));\n   * // => ['barney', 'fred']\n   *\n   * // Create custom iteratee shorthands.\n   * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n   *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n   *     return func.test(string);\n   *   };\n   * });\n   *\n   * _.filter(['abc', 'def'], /ef/);\n   * // => ['def']\n   */\n  var iteratee = baseIteratee;\n\n  /**\n   * Creates a function that performs a partial deep comparison between a given\n   * object and `source`, returning `true` if the given object has equivalent\n   * property values, else `false`.\n   *\n   * **Note:** The created function is equivalent to `_.isMatch` with `source`\n   * partially applied.\n   *\n   * Partial comparisons will match empty array and empty object `source`\n   * values against any array or object value, respectively. See `_.isEqual`\n   * for a list of supported value comparisons.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Util\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   * @example\n   *\n   * var objects = [\n   *   { 'a': 1, 'b': 2, 'c': 3 },\n   *   { 'a': 4, 'b': 5, 'c': 6 }\n   * ];\n   *\n   * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n   * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n   */\n  function matches(source) {\n    return baseMatches(assign({}, source));\n  }\n\n  /**\n   * Adds all own enumerable string keyed function properties of a source\n   * object to the destination object. If `object` is a function, then methods\n   * are added to its prototype as well.\n   *\n   * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n   * avoid conflicts caused by modifying the original.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {Function|Object} [object=lodash] The destination object.\n   * @param {Object} source The object of functions to add.\n   * @param {Object} [options={}] The options object.\n   * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n   * @returns {Function|Object} Returns `object`.\n   * @example\n   *\n   * function vowels(string) {\n   *   return _.filter(string, function(v) {\n   *     return /[aeiou]/i.test(v);\n   *   });\n   * }\n   *\n   * _.mixin({ 'vowels': vowels });\n   * _.vowels('fred');\n   * // => ['e']\n   *\n   * _('fred').vowels().value();\n   * // => ['e']\n   *\n   * _.mixin({ 'vowels': vowels }, { 'chain': false });\n   * _('fred').vowels();\n   * // => ['e']\n   */\n  function mixin(object, source, options) {\n    var props = keys(source),\n        methodNames = baseFunctions(source, props);\n\n    if (options == null &&\n        !(isObject(source) && (methodNames.length || !props.length))) {\n      options = source;\n      source = object;\n      object = this;\n      methodNames = baseFunctions(source, keys(source));\n    }\n    var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n        isFunc = isFunction(object);\n\n    baseEach(methodNames, function(methodName) {\n      var func = source[methodName];\n      object[methodName] = func;\n      if (isFunc) {\n        object.prototype[methodName] = function() {\n          var chainAll = this.__chain__;\n          if (chain || chainAll) {\n            var result = object(this.__wrapped__),\n                actions = result.__actions__ = copyArray(this.__actions__);\n\n            actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n            result.__chain__ = chainAll;\n            return result;\n          }\n          return func.apply(object, arrayPush([this.value()], arguments));\n        };\n      }\n    });\n\n    return object;\n  }\n\n  /**\n   * Reverts the `_` variable to its previous value and returns a reference to\n   * the `lodash` function.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @returns {Function} Returns the `lodash` function.\n   * @example\n   *\n   * var lodash = _.noConflict();\n   */\n  function noConflict() {\n    if (root._ === this) {\n      root._ = oldDash;\n    }\n    return this;\n  }\n\n  /**\n   * This method returns `undefined`.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Util\n   * @example\n   *\n   * _.times(2, _.noop);\n   * // => [undefined, undefined]\n   */\n  function noop() {\n    // No operation performed.\n  }\n\n  /**\n   * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {string} [prefix=''] The value to prefix the ID with.\n   * @returns {string} Returns the unique ID.\n   * @example\n   *\n   * _.uniqueId('contact_');\n   * // => 'contact_104'\n   *\n   * _.uniqueId();\n   * // => '105'\n   */\n  function uniqueId(prefix) {\n    var id = ++idCounter;\n    return toString(prefix) + id;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Computes the maximum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the maximum value.\n   * @example\n   *\n   * _.max([4, 2, 8, 6]);\n   * // => 8\n   *\n   * _.max([]);\n   * // => undefined\n   */\n  function max(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseGt)\n      : undefined;\n  }\n\n  /**\n   * Computes the minimum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the minimum value.\n   * @example\n   *\n   * _.min([4, 2, 8, 6]);\n   * // => 2\n   *\n   * _.min([]);\n   * // => undefined\n   */\n  function min(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseLt)\n      : undefined;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return wrapped values in chain sequences.\n  lodash.assignIn = assignIn;\n  lodash.before = before;\n  lodash.bind = bind;\n  lodash.chain = chain;\n  lodash.compact = compact;\n  lodash.concat = concat;\n  lodash.create = create;\n  lodash.defaults = defaults;\n  lodash.defer = defer;\n  lodash.delay = delay;\n  lodash.filter = filter;\n  lodash.flatten = flatten;\n  lodash.flattenDeep = flattenDeep;\n  lodash.iteratee = iteratee;\n  lodash.keys = keys;\n  lodash.map = map;\n  lodash.matches = matches;\n  lodash.mixin = mixin;\n  lodash.negate = negate;\n  lodash.once = once;\n  lodash.pick = pick;\n  lodash.slice = slice;\n  lodash.sortBy = sortBy;\n  lodash.tap = tap;\n  lodash.thru = thru;\n  lodash.toArray = toArray;\n  lodash.values = values;\n\n  // Add aliases.\n  lodash.extend = assignIn;\n\n  // Add methods to `lodash.prototype`.\n  mixin(lodash, lodash);\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return unwrapped values in chain sequences.\n  lodash.clone = clone;\n  lodash.escape = escape;\n  lodash.every = every;\n  lodash.find = find;\n  lodash.forEach = forEach;\n  lodash.has = has;\n  lodash.head = head;\n  lodash.identity = identity;\n  lodash.indexOf = indexOf;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isBoolean = isBoolean;\n  lodash.isDate = isDate;\n  lodash.isEmpty = isEmpty;\n  lodash.isEqual = isEqual;\n  lodash.isFinite = isFinite;\n  lodash.isFunction = isFunction;\n  lodash.isNaN = isNaN;\n  lodash.isNull = isNull;\n  lodash.isNumber = isNumber;\n  lodash.isObject = isObject;\n  lodash.isRegExp = isRegExp;\n  lodash.isString = isString;\n  lodash.isUndefined = isUndefined;\n  lodash.last = last;\n  lodash.max = max;\n  lodash.min = min;\n  lodash.noConflict = noConflict;\n  lodash.noop = noop;\n  lodash.reduce = reduce;\n  lodash.result = result;\n  lodash.size = size;\n  lodash.some = some;\n  lodash.uniqueId = uniqueId;\n\n  // Add aliases.\n  lodash.each = forEach;\n  lodash.first = head;\n\n  mixin(lodash, (function() {\n    var source = {};\n    baseForOwn(lodash, function(func, methodName) {\n      if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n        source[methodName] = func;\n      }\n    });\n    return source;\n  }()), { 'chain': false });\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type {string}\n   */\n  lodash.VERSION = VERSION;\n\n  // Add `Array` methods to `lodash.prototype`.\n  baseEach(['pop', 'join', 'replace', 'reverse', 'split', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n    var func = (/^(?:replace|split)$/.test(methodName) ? String.prototype : arrayProto)[methodName],\n        chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n        retUnwrapped = /^(?:pop|join|replace|shift)$/.test(methodName);\n\n    lodash.prototype[methodName] = function() {\n      var args = arguments;\n      if (retUnwrapped && !this.__chain__) {\n        var value = this.value();\n        return func.apply(isArray(value) ? value : [], args);\n      }\n      return this[chainName](function(value) {\n        return func.apply(isArray(value) ? value : [], args);\n      });\n    };\n  });\n\n  // Add chain sequence methods to the `lodash` wrapper.\n  lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n  /*--------------------------------------------------------------------------*/\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = lodash;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return lodash;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = lodash)._ = lodash;\n    // Export for CommonJS support.\n    freeExports._ = lodash;\n  }\n  else {\n    // Export to the global object.\n    root._ = lodash;\n  }\n}.call(this));\n","module.exports = MultiStream\n\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\ninherits(MultiStream, stream.Readable)\n\nfunction MultiStream (streams, opts) {\n  var self = this\n  if (!(self instanceof MultiStream)) return new MultiStream(streams, opts)\n  stream.Readable.call(self, opts)\n\n  self.destroyed = false\n\n  self._drained = false\n  self._forwarding = false\n  self._current = null\n  self._toStreams2 = (opts && opts.objectMode) ? toStreams2Obj : toStreams2Buf\n\n  if (typeof streams === 'function') {\n    self._queue = streams\n  } else {\n    self._queue = streams.map(self._toStreams2)\n    self._queue.forEach(function (stream) {\n      if (typeof stream !== 'function') self._attachErrorListener(stream)\n    })\n  }\n\n  self._next()\n}\n\nMultiStream.obj = function (streams) {\n  return new MultiStream(streams, { objectMode: true, highWaterMark: 16 })\n}\n\nMultiStream.prototype._read = function () {\n  this._drained = true\n  this._forward()\n}\n\nMultiStream.prototype._forward = function () {\n  if (this._forwarding || !this._drained || !this._current) return\n  this._forwarding = true\n\n  var chunk\n  while ((chunk = this._current.read()) !== null) {\n    this._drained = this.push(chunk)\n  }\n\n  this._forwarding = false\n}\n\nMultiStream.prototype.destroy = function (err) {\n  if (this.destroyed) return\n  this.destroyed = true\n\n  if (this._current && this._current.destroy) this._current.destroy()\n  if (typeof this._queue !== 'function') {\n    this._queue.forEach(function (stream) {\n      if (stream.destroy) stream.destroy()\n    })\n  }\n\n  if (err) this.emit('error', err)\n  this.emit('close')\n}\n\nMultiStream.prototype._next = function () {\n  var self = this\n  self._current = null\n\n  if (typeof self._queue === 'function') {\n    self._queue(function (err, stream) {\n      if (err) return self.destroy(err)\n      stream = self._toStreams2(stream)\n      self._attachErrorListener(stream)\n      self._gotNextStream(stream)\n    })\n  } else {\n    var stream = self._queue.shift()\n    if (typeof stream === 'function') {\n      stream = self._toStreams2(stream())\n      self._attachErrorListener(stream)\n    }\n    self._gotNextStream(stream)\n  }\n}\n\nMultiStream.prototype._gotNextStream = function (stream) {\n  var self = this\n\n  if (!stream) {\n    self.push(null)\n    self.destroy()\n    return\n  }\n\n  self._current = stream\n  self._forward()\n\n  stream.on('readable', onReadable)\n  stream.once('end', onEnd)\n  stream.once('close', onClose)\n\n  function onReadable () {\n    self._forward()\n  }\n\n  function onClose () {\n    if (!stream._readableState.ended) {\n      self.destroy()\n    }\n  }\n\n  function onEnd () {\n    self._current = null\n    stream.removeListener('readable', onReadable)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('close', onClose)\n    self._next()\n  }\n}\n\nMultiStream.prototype._attachErrorListener = function (stream) {\n  var self = this\n  if (!stream) return\n\n  stream.once('error', onError)\n\n  function onError (err) {\n    stream.removeListener('error', onError)\n    self.destroy(err)\n  }\n}\n\nfunction toStreams2Obj (s) {\n  return toStreams2(s, {objectMode: true, highWaterMark: 16})\n}\n\nfunction toStreams2Buf (s) {\n  return toStreams2(s)\n}\n\nfunction toStreams2 (s, opts) {\n  if (!s || typeof s === 'function' || s._readableState) return s\n\n  var wrap = new stream.Readable(opts).wrap(s)\n  if (s.destroy) {\n    wrap.destroy = s.destroy.bind(s)\n  }\n  return wrap\n}\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._40 = 0;\n  this._65 = 0;\n  this._55 = null;\n  this._72 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._37 = null;\nPromise._87 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._65 === 3) {\n    self = self._55;\n  }\n  if (Promise._37) {\n    Promise._37(self);\n  }\n  if (self._65 === 0) {\n    if (self._40 === 0) {\n      self._40 = 1;\n      self._72 = deferred;\n      return;\n    }\n    if (self._40 === 1) {\n      self._40 = 2;\n      self._72 = [self._72, deferred];\n      return;\n    }\n    self._72.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._65 === 1) {\n        resolve(deferred.promise, self._55);\n      } else {\n        reject(deferred.promise, self._55);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._55);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._65 = 3;\n      self._55 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._65 = 1;\n  self._55 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._65 = 2;\n  self._55 = newValue;\n  if (Promise._87) {\n    Promise._87(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._40 === 1) {\n    handle(self, self._72);\n    self._72 = null;\n  }\n  if (self._40 === 2) {\n    for (var i = 0; i < self._72.length; i++) {\n      handle(self, self._72[i]);\n    }\n    self._72 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._65 = 1;\n  p._55 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._65 === 3) {\n            val = val._55;\n          }\n          if (val._65 === 1) return res(i, val._55);\n          if (val._65 === 2) reject(val._55);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","module.exports = require('./lib/_stream_duplex.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","module.exports = require('events').EventEmitter;\n","module.exports = require('./readable').PassThrough\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./lib/_stream_writable.js');\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  exports.stripBOM = function(str) {\n    if (str[0] === '\\uFEFF') {\n      return str.substring(1);\n    } else {\n      return str;\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, escapeCDATA, requiresCDATA, wrapCDATA,\n    hasProp = {}.hasOwnProperty;\n\n  builder = require('xmlbuilder');\n\n  defaults = require('./defaults').defaults;\n\n  requiresCDATA = function(entry) {\n    return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\n  };\n\n  wrapCDATA = function(entry) {\n    return \"<![CDATA[\" + (escapeCDATA(entry)) + \"]]>\";\n  };\n\n  escapeCDATA = function(entry) {\n    return entry.replace(']]>', ']]]]><![CDATA[>');\n  };\n\n  exports.Builder = (function() {\n    function Builder(opts) {\n      var key, ref, value;\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n    }\n\n    Builder.prototype.buildObject = function(rootObj) {\n      var attrkey, charkey, render, rootElement, rootName;\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      if ((Object.keys(rootObj).length === 1) && (this.options.rootName === defaults['0.2'].rootName)) {\n        rootName = Object.keys(rootObj)[0];\n        rootObj = rootObj[rootName];\n      } else {\n        rootName = this.options.rootName;\n      }\n      render = (function(_this) {\n        return function(element, obj) {\n          var attr, child, entry, index, key, value;\n          if (typeof obj !== 'object') {\n            if (_this.options.cdata && requiresCDATA(obj)) {\n              element.raw(wrapCDATA(obj));\n            } else {\n              element.txt(obj);\n            }\n          } else if (Array.isArray(obj)) {\n            for (index in obj) {\n              if (!hasProp.call(obj, index)) continue;\n              child = obj[index];\n              for (key in child) {\n                entry = child[key];\n                element = render(element.ele(key), entry).up();\n              }\n            }\n          } else {\n            for (key in obj) {\n              if (!hasProp.call(obj, key)) continue;\n              child = obj[key];\n              if (key === attrkey) {\n                if (typeof child === \"object\") {\n                  for (attr in child) {\n                    value = child[attr];\n                    element = element.att(attr, value);\n                  }\n                }\n              } else if (key === charkey) {\n                if (_this.options.cdata && requiresCDATA(child)) {\n                  element = element.raw(wrapCDATA(child));\n                } else {\n                  element = element.txt(child);\n                }\n              } else if (Array.isArray(child)) {\n                for (index in child) {\n                  if (!hasProp.call(child, index)) continue;\n                  entry = child[index];\n                  if (typeof entry === 'string') {\n                    if (_this.options.cdata && requiresCDATA(entry)) {\n                      element = element.ele(key).raw(wrapCDATA(entry)).up();\n                    } else {\n                      element = element.ele(key, entry).up();\n                    }\n                  } else {\n                    element = render(element.ele(key), entry).up();\n                  }\n                }\n              } else if (typeof child === \"object\") {\n                element = render(element.ele(key), child).up();\n              } else {\n                if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\n                  element = element.ele(key).raw(wrapCDATA(child)).up();\n                } else {\n                  if (child == null) {\n                    child = '';\n                  }\n                  element = element.ele(key, child.toString()).up();\n                }\n              }\n            }\n          }\n          return element;\n        };\n      })(this);\n      rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\n        headless: this.options.headless,\n        allowSurrogateChars: this.options.allowSurrogateChars\n      });\n      return render(rootElement, rootObj).end(this.options.renderOpts);\n    };\n\n    return Builder;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  exports.defaults = {\n    \"0.1\": {\n      explicitCharkey: false,\n      trim: true,\n      normalize: true,\n      normalizeTags: false,\n      attrkey: \"@\",\n      charkey: \"#\",\n      explicitArray: false,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: false,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '@@',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      emptyTag: ''\n    },\n    \"0.2\": {\n      explicitCharkey: false,\n      trim: false,\n      normalize: false,\n      normalizeTags: false,\n      attrkey: \"$\",\n      charkey: \"_\",\n      explicitArray: true,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: true,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      preserveChildrenOrder: false,\n      childkey: '$$',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      rootName: 'root',\n      xmldec: {\n        'version': '1.0',\n        'encoding': 'UTF-8',\n        'standalone': true\n      },\n      doctype: null,\n      renderOpts: {\n        'pretty': true,\n        'indent': '  ',\n        'newline': '\\n'\n      },\n      headless: false,\n      chunkSize: 10000,\n      emptyTag: '',\n      cdata: false\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var bom, defaults, events, isEmpty, processItem, processors, sax, setImmediate,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  sax = require('sax');\n\n  events = require('events');\n\n  bom = require('./bom');\n\n  processors = require('./processors');\n\n  setImmediate = require('timers').setImmediate;\n\n  defaults = require('./defaults').defaults;\n\n  isEmpty = function(thing) {\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\n  };\n\n  processItem = function(processors, item, key) {\n    var i, len, process;\n    for (i = 0, len = processors.length; i < len; i++) {\n      process = processors[i];\n      item = process(item, key);\n    }\n    return item;\n  };\n\n  exports.Parser = (function(superClass) {\n    extend(Parser, superClass);\n\n    function Parser(opts) {\n      this.parseString = bind(this.parseString, this);\n      this.reset = bind(this.reset, this);\n      this.assignOrPush = bind(this.assignOrPush, this);\n      this.processAsync = bind(this.processAsync, this);\n      var key, ref, value;\n      if (!(this instanceof exports.Parser)) {\n        return new exports.Parser(opts);\n      }\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n      if (this.options.normalizeTags) {\n        if (!this.options.tagNameProcessors) {\n          this.options.tagNameProcessors = [];\n        }\n        this.options.tagNameProcessors.unshift(processors.normalize);\n      }\n      this.reset();\n    }\n\n    Parser.prototype.processAsync = function() {\n      var chunk, err;\n      try {\n        if (this.remaining.length <= this.options.chunkSize) {\n          chunk = this.remaining;\n          this.remaining = '';\n          this.saxParser = this.saxParser.write(chunk);\n          return this.saxParser.close();\n        } else {\n          chunk = this.remaining.substr(0, this.options.chunkSize);\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n          this.saxParser = this.saxParser.write(chunk);\n          return setImmediate(this.processAsync);\n        }\n      } catch (error1) {\n        err = error1;\n        if (!this.saxParser.errThrown) {\n          this.saxParser.errThrown = true;\n          return this.emit(err);\n        }\n      }\n    };\n\n    Parser.prototype.assignOrPush = function(obj, key, newValue) {\n      if (!(key in obj)) {\n        if (!this.options.explicitArray) {\n          return obj[key] = newValue;\n        } else {\n          return obj[key] = [newValue];\n        }\n      } else {\n        if (!(obj[key] instanceof Array)) {\n          obj[key] = [obj[key]];\n        }\n        return obj[key].push(newValue);\n      }\n    };\n\n    Parser.prototype.reset = function() {\n      var attrkey, charkey, ontext, stack;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(this.options.strict, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      this.saxParser.errThrown = false;\n      this.saxParser.onerror = (function(_this) {\n        return function(error) {\n          _this.saxParser.resume();\n          if (!_this.saxParser.errThrown) {\n            _this.saxParser.errThrown = true;\n            return _this.emit(\"error\", error);\n          }\n        };\n      })(this);\n      this.saxParser.onend = (function(_this) {\n        return function() {\n          if (!_this.saxParser.ended) {\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      this.saxParser.ended = false;\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      this.saxParser.onopentag = (function(_this) {\n        return function(node) {\n          var key, newValue, obj, processedKey, ref;\n          obj = {};\n          obj[charkey] = \"\";\n          if (!_this.options.ignoreAttrs) {\n            ref = node.attributes;\n            for (key in ref) {\n              if (!hasProp.call(ref, key)) continue;\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                obj[attrkey] = {};\n              }\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n              if (_this.options.mergeAttrs) {\n                _this.assignOrPush(obj, processedKey, newValue);\n              } else {\n                obj[attrkey][processedKey] = newValue;\n              }\n            }\n          }\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n          if (_this.options.xmlns) {\n            obj[_this.options.xmlnskey] = {\n              uri: node.uri,\n              local: node.local\n            };\n          }\n          return stack.push(obj);\n        };\n      })(this);\n      this.saxParser.onclosetag = (function(_this) {\n        return function() {\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n          obj = stack.pop();\n          nodeName = obj[\"#name\"];\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n            delete obj[\"#name\"];\n          }\n          if (obj.cdata === true) {\n            cdata = obj.cdata;\n            delete obj.cdata;\n          }\n          s = stack[stack.length - 1];\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\n            emptyStr = obj[charkey];\n            delete obj[charkey];\n          } else {\n            if (_this.options.trim) {\n              obj[charkey] = obj[charkey].trim();\n            }\n            if (_this.options.normalize) {\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n            }\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n              obj = obj[charkey];\n            }\n          }\n          if (isEmpty(obj)) {\n            obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n          }\n          if (_this.options.validator != null) {\n            xpath = \"/\" + ((function() {\n              var i, len, results;\n              results = [];\n              for (i = 0, len = stack.length; i < len; i++) {\n                node = stack[i];\n                results.push(node[\"#name\"]);\n              }\n              return results;\n            })()).concat(nodeName).join(\"/\");\n            (function() {\n              var err;\n              try {\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n              } catch (error1) {\n                err = error1;\n                return _this.emit(\"error\", err);\n              }\n            })();\n          }\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n            if (!_this.options.preserveChildrenOrder) {\n              node = {};\n              if (_this.options.attrkey in obj) {\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\n                delete obj[_this.options.attrkey];\n              }\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                node[_this.options.charkey] = obj[_this.options.charkey];\n                delete obj[_this.options.charkey];\n              }\n              if (Object.getOwnPropertyNames(obj).length > 0) {\n                node[_this.options.childkey] = obj;\n              }\n              obj = node;\n            } else if (s) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              objClone = {};\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                objClone[key] = obj[key];\n              }\n              s[_this.options.childkey].push(objClone);\n              delete obj[\"#name\"];\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n          }\n          if (stack.length > 0) {\n            return _this.assignOrPush(s, nodeName, obj);\n          } else {\n            if (_this.options.explicitRoot) {\n              old = obj;\n              obj = {};\n              obj[nodeName] = old;\n            }\n            _this.resultObject = obj;\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      ontext = (function(_this) {\n        return function(text) {\n          var charChild, s;\n          s = stack[stack.length - 1];\n          if (s) {\n            s[charkey] += text;\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              charChild = {\n                '#name': '__text__'\n              };\n              charChild[charkey] = text;\n              if (_this.options.normalize) {\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n              s[_this.options.childkey].push(charChild);\n            }\n            return s;\n          }\n        };\n      })(this);\n      this.saxParser.ontext = ontext;\n      return this.saxParser.oncdata = (function(_this) {\n        return function(text) {\n          var s;\n          s = ontext(text);\n          if (s) {\n            return s.cdata = true;\n          }\n        };\n      })(this);\n    };\n\n    Parser.prototype.parseString = function(str, cb) {\n      var err;\n      if ((cb != null) && typeof cb === \"function\") {\n        this.on(\"end\", function(result) {\n          this.reset();\n          return cb(null, result);\n        });\n        this.on(\"error\", function(err) {\n          this.reset();\n          return cb(err);\n        });\n      }\n      try {\n        str = str.toString();\n        if (str.trim() === '') {\n          this.emit(\"end\", null);\n          return true;\n        }\n        str = bom.stripBOM(str);\n        if (this.options.async) {\n          this.remaining = str;\n          setImmediate(this.processAsync);\n          return this.saxParser;\n        }\n        return this.saxParser.write(str).close();\n      } catch (error1) {\n        err = error1;\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n          this.emit('error', err);\n          return this.saxParser.errThrown = true;\n        } else if (this.saxParser.ended) {\n          throw err;\n        }\n      }\n    };\n\n    return Parser;\n\n  })(events.EventEmitter);\n\n  exports.parseString = function(str, a, b) {\n    var cb, options, parser;\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n      options = {};\n    }\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var prefixMatch;\n\n  prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n  exports.normalize = function(str) {\n    return str.toLowerCase();\n  };\n\n  exports.firstCharLowerCase = function(str) {\n    return str.charAt(0).toLowerCase() + str.slice(1);\n  };\n\n  exports.stripPrefix = function(str) {\n    return str.replace(prefixMatch, '');\n  };\n\n  exports.parseNumbers = function(str) {\n    if (!isNaN(str)) {\n      str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\n    }\n    return str;\n  };\n\n  exports.parseBooleans = function(str) {\n    if (/^(?:true|false)$/i.test(str)) {\n      str = str.toLowerCase() === 'true';\n    }\n    return str;\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, parser, processors,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  defaults = require('./defaults');\n\n  builder = require('./builder');\n\n  parser = require('./parser');\n\n  processors = require('./processors');\n\n  exports.defaults = defaults.defaults;\n\n  exports.processors = processors;\n\n  exports.ValidationError = (function(superClass) {\n    extend(ValidationError, superClass);\n\n    function ValidationError(message) {\n      this.message = message;\n    }\n\n    return ValidationError;\n\n  })(Error);\n\n  exports.Builder = builder.Builder;\n\n  exports.Parser = parser.Parser;\n\n  exports.parseString = parser.parseString;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var assign, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    slice = [].slice,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function() {\n    var i, key, len, source, sources, target;\n    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute;\n\n  module.exports = XMLAttribute = (function() {\n    function XMLAttribute(parent, name, value) {\n      this.options = parent.options;\n      this.stringify = parent.stringify;\n      if (name == null) {\n        throw new Error(\"Missing attribute name of element \" + parent.name);\n      }\n      if (value == null) {\n        throw new Error(\"Missing attribute value for attribute \" + name + \" of element \" + parent.name);\n      }\n      this.name = this.stringify.attName(name);\n      this.value = this.stringify.attValue(value);\n    }\n\n    XMLAttribute.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLAttribute.prototype.toString = function(options) {\n      return this.options.writer.set(options).attribute(this);\n    };\n\n    return XMLAttribute;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLCData = (function(superClass) {\n    extend(XMLCData, superClass);\n\n    function XMLCData(parent, text) {\n      XMLCData.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text\");\n      }\n      this.text = this.stringify.cdata(text);\n    }\n\n    XMLCData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCData.prototype.toString = function(options) {\n      return this.options.writer.set(options).cdata(this);\n    };\n\n    return XMLCData;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLComment, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLComment = (function(superClass) {\n    extend(XMLComment, superClass);\n\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text\");\n      }\n      this.text = this.stringify.comment(text);\n    }\n\n    XMLComment.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLComment.prototype.toString = function(options) {\n      return this.options.writer.set(options).comment(this);\n    };\n\n    return XMLComment;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDAttList, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDAttList = (function(superClass) {\n    extend(XMLDTDAttList, superClass);\n\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name\");\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type\");\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default\");\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT\");\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT\");\n      }\n      this.elementName = this.stringify.eleName(elementName);\n      this.attributeName = this.stringify.attName(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdAttList(this);\n    };\n\n    return XMLDTDAttList;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDElement, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDElement = (function(superClass) {\n    extend(XMLDTDElement, superClass);\n\n    function XMLDTDElement(parent, name, value) {\n      XMLDTDElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.eleName(name);\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    XMLDTDElement.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdElement(this);\n    };\n\n    return XMLDTDElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDEntity, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDEntity = (function(superClass) {\n    extend(XMLDTDEntity, superClass);\n\n    function XMLDTDEntity(parent, pe, name, value) {\n      XMLDTDEntity.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing entity name\");\n      }\n      if (value == null) {\n        throw new Error(\"Missing entity value\");\n      }\n      this.pe = !!pe;\n      this.name = this.stringify.eleName(name);\n      if (!isObject(value)) {\n        this.value = this.stringify.dtdEntityValue(value);\n      } else {\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public and/or system identifiers are required for an external entity\");\n        }\n        if (value.pubID && !value.sysID) {\n          throw new Error(\"System identifier is required for a public external entity\");\n        }\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n        if (value.nData != null) {\n          this.nData = this.stringify.dtdNData(value.nData);\n        }\n        if (this.pe && this.nData) {\n          throw new Error(\"Notation declaration is not allowed in a parameter entity\");\n        }\n      }\n    }\n\n    XMLDTDEntity.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdEntity(this);\n    };\n\n    return XMLDTDEntity;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDNotation, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDNotation = (function(superClass) {\n    extend(XMLDTDNotation, superClass);\n\n    function XMLDTDNotation(parent, name, value) {\n      XMLDTDNotation.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing notation name\");\n      }\n      if (!value.pubID && !value.sysID) {\n        throw new Error(\"Public or system identifiers are required for an external entity\");\n      }\n      this.name = this.stringify.eleName(name);\n      if (value.pubID != null) {\n        this.pubID = this.stringify.dtdPubID(value.pubID);\n      }\n      if (value.sysID != null) {\n        this.sysID = this.stringify.dtdSysID(value.sysID);\n      }\n    }\n\n    XMLDTDNotation.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdNotation(this);\n    };\n\n    return XMLDTDNotation;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDeclaration, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDeclaration = (function(superClass) {\n    extend(XMLDeclaration, superClass);\n\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var ref;\n      XMLDeclaration.__super__.constructor.call(this, parent);\n      if (isObject(version)) {\n        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    XMLDeclaration.prototype.toString = function(options) {\n      return this.options.writer.set(options).declaration(this);\n    };\n\n    return XMLDeclaration;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  module.exports = XMLDocType = (function(superClass) {\n    extend(XMLDocType, superClass);\n\n    function XMLDocType(parent, pubID, sysID) {\n      var ref, ref1;\n      XMLDocType.__super__.constructor.call(this, parent);\n      this.documentObject = parent;\n      if (isObject(pubID)) {\n        ref = pubID, pubID = ref.pubID, sysID = ref.sysID;\n      }\n      if (sysID == null) {\n        ref1 = [pubID, sysID], sysID = ref1[0], pubID = ref1[1];\n      }\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n\n    XMLDocType.prototype.element = function(name, value) {\n      var child;\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var child;\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.entity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.pEntity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.notation = function(name, value) {\n      var child;\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.toString = function(options) {\n      return this.options.writer.set(options).docType(this);\n    };\n\n    XMLDocType.prototype.ele = function(name, value) {\n      return this.element(name, value);\n    };\n\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n\n    XMLDocType.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocType.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocType.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    XMLDocType.prototype.up = function() {\n      return this.root() || this.documentObject;\n    };\n\n    return XMLDocType;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isPlainObject = require('./Utility').isPlainObject;\n\n  XMLNode = require('./XMLNode');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocument = (function(superClass) {\n    extend(XMLDocument, superClass);\n\n    function XMLDocument(options) {\n      XMLDocument.__super__.constructor.call(this, null);\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.stringify = new XMLStringifier(options);\n      this.isDocument = true;\n    }\n\n    XMLDocument.prototype.end = function(writer) {\n      var writerOptions;\n      if (!writer) {\n        writer = this.options.writer;\n      } else if (isPlainObject(writer)) {\n        writerOptions = writer;\n        writer = this.options.writer.set(writerOptions);\n      }\n      return writer.document(this);\n    };\n\n    XMLDocument.prototype.toString = function(options) {\n      return this.options.writer.set(options).document(this);\n    };\n\n    return XMLDocument;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, isFunction, isObject, isPlainObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject;\n\n  XMLElement = require('./XMLElement');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocumentCB = (function() {\n    function XMLDocumentCB(options, onData, onEnd) {\n      var writerOptions;\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter(options);\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter(writerOptions);\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function() {};\n      this.onEndCallback = onEnd || function() {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    XMLDocumentCB.prototype.node = function(name, attributes, text) {\n      var ref1;\n      if (name == null) {\n        throw new Error(\"Missing node name\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node\");\n      }\n      this.openCurrent();\n      name = name.valueOf();\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.element = function(name, attributes, text) {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.dtdElement.apply(this, arguments);\n      } else {\n        return this.node(name, attributes, text);\n      }\n    };\n\n    XMLDocumentCB.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode\");\n      }\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.currentNode.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.text = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.cdata = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.comment = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.raw = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.instruction = function(target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = target.valueOf();\n      }\n      if (value != null) {\n        value = value.valueOf();\n      }\n      if (Array.isArray(target)) {\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.currentLevel + 1));\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dtdElement = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.entity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.pEntity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.notation = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.up = function() {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.end = function() {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    };\n\n    XMLDocumentCB.prototype.openCurrent = function() {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    };\n\n    XMLDocumentCB.prototype.openNode = function(node) {\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node instanceof XMLElement) {\n          this.root = node;\n        }\n        this.onData(this.writer.openNode(node, this.currentLevel));\n        return node.isOpen = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.closeNode = function(node) {\n      if (!node.isClosed) {\n        this.onData(this.writer.closeNode(node, this.currentLevel));\n        return node.isClosed = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.onData = function(chunk) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk);\n    };\n\n    XMLDocumentCB.prototype.onEnd = function() {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    };\n\n    XMLDocumentCB.prototype.ele = function() {\n      return this.element.apply(this, arguments);\n    };\n\n    XMLDocumentCB.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    };\n\n    XMLDocumentCB.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLDocumentCB.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.att = function() {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.a = function() {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocumentCB.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocumentCB.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    return XMLDocumentCB;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute, XMLElement, XMLNode, isFunction, isObject, ref,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction;\n\n  XMLNode = require('./XMLNode');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  module.exports = XMLElement = (function(superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name\");\n      }\n      this.name = this.stringify.eleName(name);\n      this.attributes = {};\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n      if (parent.isDocument) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n      }\n    }\n\n    XMLElement.prototype.clone = function() {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n      clonedSelf.attributes = {};\n      ref1 = this.attributes;\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attributes[attName] = att.clone();\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function(child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function(name) {\n      var attName, i, len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name\");\n      }\n      name = name.valueOf();\n      if (Array.isArray(name)) {\n        for (i = 0, len = name.length; i < len; i++) {\n          attName = name[i];\n          delete this.attributes[attName];\n        }\n      } else {\n        delete this.attributes[name];\n      }\n      return this;\n    };\n\n    XMLElement.prototype.toString = function(options) {\n      return this.options.writer.set(options).element(this);\n    };\n\n    XMLElement.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    return XMLElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLElement, XMLNode, XMLProcessingInstruction, XMLRaw, XMLText, isEmpty, isFunction, isObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isEmpty = ref.isEmpty;\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  module.exports = XMLNode = (function() {\n    function XMLNode(parent) {\n      this.parent = parent;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.children = [];\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n      }\n    }\n\n    XMLNode.prototype.element = function(name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref1, val;\n      lastChild = null;\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if ((isObject(val)) && (isEmpty(val))) {\n            val = null;\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            lastChild = this.element(key);\n            lastChild.element(val);\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name);\n      }\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function() {\n      var i, ref1;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element\");\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref1 = [])), ref1;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function(name, attributes, text) {\n      var child, ref1;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      attributes || (attributes = {});\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function(value) {\n      var child;\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function(value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function(value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.commentBefore = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.commentAfter = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function(value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.instruction = function(target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = target.valueOf();\n      }\n      if (value != null) {\n        value = value.valueOf();\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n\n    XMLNode.prototype.instructionBefore = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.instructionAfter = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children[0] instanceof XMLDeclaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n\n    XMLNode.prototype.doctype = function(pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref1, ref2;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref1 = doc.children;\n      for (i = j = 0, len = ref1.length; j < len; i = ++j) {\n        child = ref1[i];\n        if (child instanceof XMLDocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref2 = doc.children;\n      for (i = k = 0, len1 = ref2.length; k < len1; i = ++k) {\n        child = ref2[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.document = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.end = function(options) {\n      return this.document().end(options);\n    };\n\n    XMLNode.prototype.prev = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node\");\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node\");\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importDocument = function(doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.dtd = function(pubID, sysID) {\n      return this.doctype(pubID, sysID);\n    };\n\n    XMLNode.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.u = function() {\n      return this.up();\n    };\n\n    XMLNode.prototype.importXMLBuilder = function(doc) {\n      return this.importDocument(doc);\n    };\n\n    return XMLNode;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLProcessingInstruction,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLProcessingInstruction = (function(superClass) {\n    extend(XMLProcessingInstruction, superClass);\n\n    function XMLProcessingInstruction(parent, target, value) {\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target\");\n      }\n      this.target = this.stringify.insTarget(target);\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function(options) {\n      return this.options.writer.set(options).processingInstruction(this);\n    };\n\n    return XMLProcessingInstruction;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLRaw,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLRaw = (function(superClass) {\n    extend(XMLRaw, superClass);\n\n    function XMLRaw(parent, text) {\n      XMLRaw.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing raw text\");\n      }\n      this.value = this.stringify.raw(text);\n    }\n\n    XMLRaw.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLRaw.prototype.toString = function(options) {\n      return this.options.writer.set(options).raw(this);\n    };\n\n    return XMLRaw;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStreamWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStreamWriter = (function(superClass) {\n    extend(XMLStreamWriter, superClass);\n\n    function XMLStreamWriter(stream, options) {\n      XMLStreamWriter.__super__.constructor.call(this, options);\n      this.stream = stream;\n    }\n\n    XMLStreamWriter.prototype.document = function(doc) {\n      var child, i, j, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        child.isLastRootNode = false;\n      }\n      doc.children[doc.children.length - 1].isLastRootNode = true;\n      ref1 = doc.children;\n      results = [];\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\n        child = ref1[j];\n        switch (false) {\n          case !(child instanceof XMLDeclaration):\n            results.push(this.declaration(child));\n            break;\n          case !(child instanceof XMLDocType):\n            results.push(this.docType(child));\n            break;\n          case !(child instanceof XMLComment):\n            results.push(this.comment(child));\n            break;\n          case !(child instanceof XMLProcessingInstruction):\n            results.push(this.processingInstruction(child));\n            break;\n          default:\n            results.push(this.element(child));\n        }\n      }\n      return results;\n    };\n\n    XMLStreamWriter.prototype.attribute = function(att) {\n      return this.stream.write(' ' + att.name + '=\"' + att.value + '\"');\n    };\n\n    XMLStreamWriter.prototype.cdata = function(node, level) {\n      return this.stream.write(this.space(level) + '<![CDATA[' + node.text + ']]>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.comment = function(node, level) {\n      return this.stream.write(this.space(level) + '<!-- ' + node.text + ' -->' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.declaration = function(node, level) {\n      this.stream.write(this.space(level));\n      this.stream.write('<?xml version=\"' + node.version + '\"');\n      if (node.encoding != null) {\n        this.stream.write(' encoding=\"' + node.encoding + '\"');\n      }\n      if (node.standalone != null) {\n        this.stream.write(' standalone=\"' + node.standalone + '\"');\n      }\n      this.stream.write(this.spacebeforeslash + '?>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.docType = function(node, level) {\n      var child, i, len, ref;\n      level || (level = 0);\n      this.stream.write(this.space(level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node));\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          switch (false) {\n            case !(child instanceof XMLDTDAttList):\n              this.dtdAttList(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDElement):\n              this.dtdElement(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDEntity):\n              this.dtdEntity(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDNotation):\n              this.dtdNotation(child, level + 1);\n              break;\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(']');\n      }\n      this.stream.write(this.spacebeforeslash + '>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.element = function(node, level) {\n      var att, child, i, len, name, ref, ref1, space;\n      level || (level = 0);\n      space = this.space(level);\n      this.stream.write(space + '<' + node.name);\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          this.stream.write('></' + node.name + '>');\n        } else {\n          this.stream.write(this.spacebeforeslash + '/>');\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        this.stream.write('>');\n        this.stream.write(node.children[0].value);\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.newline);\n        ref1 = node.children;\n        for (i = 0, len = ref1.length; i < len; i++) {\n          child = ref1[i];\n          switch (false) {\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLElement):\n              this.element(child, level + 1);\n              break;\n            case !(child instanceof XMLRaw):\n              this.raw(child, level + 1);\n              break;\n            case !(child instanceof XMLText):\n              this.text(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(space + '</' + node.name + '>');\n      }\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.processingInstruction = function(node, level) {\n      this.stream.write(this.space(level) + '<?' + node.target);\n      if (node.value) {\n        this.stream.write(' ' + node.value);\n      }\n      return this.stream.write(this.spacebeforeslash + '?>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.raw = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.text = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdAttList = function(node, level) {\n      this.stream.write(this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType);\n      if (node.defaultValueType !== '#DEFAULT') {\n        this.stream.write(' ' + node.defaultValueType);\n      }\n      if (node.defaultValue) {\n        this.stream.write(' \"' + node.defaultValue + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdElement = function(node, level) {\n      this.stream.write(this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value);\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdEntity = function(node, level) {\n      this.stream.write(this.space(level) + '<!ENTITY');\n      if (node.pe) {\n        this.stream.write(' %');\n      }\n      this.stream.write(' ' + node.name);\n      if (node.value) {\n        this.stream.write(' \"' + node.value + '\"');\n      } else {\n        if (node.pubID && node.sysID) {\n          this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n        } else if (node.sysID) {\n          this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n        }\n        if (node.nData) {\n          this.stream.write(' NDATA ' + node.nData);\n        }\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdNotation = function(node, level) {\n      this.stream.write(this.space(level) + '<!NOTATION ' + node.name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.pubID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.endline = function(node) {\n      if (!node.isLastRootNode) {\n        return this.newline;\n      } else {\n        return '';\n      }\n    };\n\n    return XMLStreamWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = (function(superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function(doc) {\n      var child, i, len, r, ref;\n      this.textispresent = false;\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += (function() {\n          switch (false) {\n            case !(child instanceof XMLDeclaration):\n              return this.declaration(child);\n            case !(child instanceof XMLDocType):\n              return this.docType(child);\n            case !(child instanceof XMLComment):\n              return this.comment(child);\n            case !(child instanceof XMLProcessingInstruction):\n              return this.processingInstruction(child);\n            default:\n              return this.element(child, 0);\n          }\n        }).call(this);\n      }\n      if (this.pretty && r.slice(-this.newline.length) === this.newline) {\n        r = r.slice(0, -this.newline.length);\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.attribute = function(att) {\n      return ' ' + att.name + '=\"' + att.value + '\"';\n    };\n\n    XMLStringWriter.prototype.cdata = function(node, level) {\n      return this.space(level) + '<![CDATA[' + node.text + ']]>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.comment = function(node, level) {\n      return this.space(level) + '<!-- ' + node.text + ' -->' + this.newline;\n    };\n\n    XMLStringWriter.prototype.declaration = function(node, level) {\n      var r;\n      r = this.space(level);\n      r += '<?xml version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      r += this.spacebeforeslash + '?>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.docType = function(node, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      r = this.space(level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.newline;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLDTDAttList):\n                return this.dtdAttList(child, level + 1);\n              case !(child instanceof XMLDTDElement):\n                return this.dtdElement(child, level + 1);\n              case !(child instanceof XMLDTDEntity):\n                return this.dtdEntity(child, level + 1);\n              case !(child instanceof XMLDTDNotation):\n                return this.dtdNotation(child, level + 1);\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        r += ']';\n      }\n      r += this.spacebeforeslash + '>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.element = function(node, level) {\n      var att, child, i, j, len, len1, name, r, ref, ref1, ref2, space, textispresentwasset;\n      level || (level = 0);\n      textispresentwasset = false;\n      if (this.textispresent) {\n        this.newline = '';\n        this.pretty = false;\n      } else {\n        this.newline = this.newlinedefault;\n        this.pretty = this.prettydefault;\n      }\n      space = this.space(level);\n      r = '';\n      r += space + '<' + node.name;\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          r += '></' + node.name + '>' + this.newline;\n        } else {\n          r += this.spacebeforeslash + '/>' + this.newline;\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        r += '>';\n        r += node.children[0].value;\n        r += '</' + node.name + '>' + this.newline;\n      } else {\n        if (this.dontprettytextnodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if (child.value != null) {\n              this.textispresent++;\n              textispresentwasset = true;\n              break;\n            }\n          }\n        }\n        if (this.textispresent) {\n          this.newline = '';\n          this.pretty = false;\n          space = this.space(level);\n        }\n        r += '>' + this.newline;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLElement):\n                return this.element(child, level + 1);\n              case !(child instanceof XMLRaw):\n                return this.raw(child, level + 1);\n              case !(child instanceof XMLText):\n                return this.text(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        if (textispresentwasset) {\n          this.textispresent--;\n        }\n        if (!this.textispresent) {\n          this.newline = this.newlinedefault;\n          this.pretty = this.prettydefault;\n        }\n        r += space + '</' + node.name + '>' + this.newline;\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.processingInstruction = function(node, level) {\n      var r;\n      r = this.space(level) + '<?' + node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      r += this.spacebeforeslash + '?>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.raw = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.text = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdAttList = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdElement = function(node, level) {\n      return this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value + this.spacebeforeslash + '>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdEntity = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ENTITY';\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdNotation = function(node, level) {\n      var r;\n      r = this.space(level) + '<!NOTATION ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.openNode = function(node, level) {\n      var att, name, r, ref;\n      level || (level = 0);\n      if (node instanceof XMLElement) {\n        r = this.space(level) + '<' + node.name;\n        ref = node.attributes;\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          r += this.attribute(att);\n        }\n        r += (node.children ? '>' : '/>') + this.newline;\n        return r;\n      } else {\n        r = this.space(level) + '<!DOCTYPE ' + node.rootNodeName;\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        r += (node.children ? ' [' : '>') + this.newline;\n        return r;\n      }\n    };\n\n    XMLStringWriter.prototype.closeNode = function(node, level) {\n      level || (level = 0);\n      switch (false) {\n        case !(node instanceof XMLElement):\n          return this.space(level) + '</' + node.name + '>' + this.newline;\n        case !(node instanceof XMLDocType):\n          return this.space(level) + ']>' + this.newline;\n      }\n    };\n\n    return XMLStringWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringifier,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.noDoubleEncoding = options.noDoubleEncoding;\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.eleName = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.eleText = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(this.elEscape(val));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attName = function(val) {\n      return val = '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      val = '' + val || '';\n      return this.attEscape(val);\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (val != null) {\n        return '' + val || '';\n      } else {\n        return val;\n      }\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var res;\n      res = str.match(/[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/);\n      if (res) {\n        throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.elEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLText,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLText = (function(superClass) {\n    extend(XMLText, superClass);\n\n    function XMLText(parent, text) {\n      XMLText.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing element text\");\n      }\n      this.value = this.stringify.eleText(text);\n    }\n\n    XMLText.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLText.prototype.toString = function(options) {\n      return this.options.writer.set(options).text(this);\n    };\n\n    return XMLText;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLWriterBase,\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLWriterBase = (function() {\n    function XMLWriterBase(options) {\n      var key, ref, ref1, ref2, ref3, ref4, ref5, ref6, value;\n      options || (options = {});\n      this.pretty = options.pretty || false;\n      this.allowEmpty = (ref = options.allowEmpty) != null ? ref : false;\n      if (this.pretty) {\n        this.indent = (ref1 = options.indent) != null ? ref1 : '  ';\n        this.newline = (ref2 = options.newline) != null ? ref2 : '\\n';\n        this.offset = (ref3 = options.offset) != null ? ref3 : 0;\n        this.dontprettytextnodes = (ref4 = options.dontprettytextnodes) != null ? ref4 : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n      this.spacebeforeslash = (ref5 = options.spacebeforeslash) != null ? ref5 : '';\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref6 = options.writer || {};\n      for (key in ref6) {\n        if (!hasProp.call(ref6, key)) continue;\n        value = ref6[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.set = function(options) {\n      var key, ref, value;\n      options || (options = {});\n      if (\"pretty\" in options) {\n        this.pretty = options.pretty;\n      }\n      if (\"allowEmpty\" in options) {\n        this.allowEmpty = options.allowEmpty;\n      }\n      if (this.pretty) {\n        this.indent = \"indent\" in options ? options.indent : '  ';\n        this.newline = \"newline\" in options ? options.newline : '\\n';\n        this.offset = \"offset\" in options ? options.offset : 0;\n        this.dontprettytextnodes = \"dontprettytextnodes\" in options ? options.dontprettytextnodes : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n      this.spacebeforeslash = \"spacebeforeslash\" in options ? options.spacebeforeslash : '';\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n      return this;\n    };\n\n    XMLWriterBase.prototype.space = function(level) {\n      var indent;\n      if (this.pretty) {\n        indent = (level || 0) + this.offset + 1;\n        if (indent > 0) {\n          return new Array(indent).join(this.indent);\n        } else {\n          return '';\n        }\n      } else {\n        return '';\n      }\n    };\n\n    return XMLWriterBase;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\n\n  ref = require('./Utility'), assign = ref.assign, isFunction = ref.isFunction;\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLDocumentCB = require('./XMLDocumentCB');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  XMLStreamWriter = require('./XMLStreamWriter');\n\n  module.exports.create = function(name, xmldec, doctype, options) {\n    var doc, root;\n    if (name == null) {\n      throw new Error(\"Root element needs a name\");\n    }\n    options = assign({}, xmldec, doctype, options);\n    doc = new XMLDocument(options);\n    root = doc.element(name);\n    if (!options.headless) {\n      doc.declaration(options);\n      if ((options.pubID != null) || (options.sysID != null)) {\n        doc.doctype(options);\n      }\n    }\n    return root;\n  };\n\n  module.exports.begin = function(options, onData, onEnd) {\n    var ref1;\n    if (isFunction(options)) {\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\n      options = {};\n    }\n    if (onData) {\n      return new XMLDocumentCB(options, onData, onEnd);\n    } else {\n      return new XMLDocument(options);\n    }\n  };\n\n  module.exports.stringWriter = function(options) {\n    return new XMLStringWriter(options);\n  };\n\n  module.exports.streamWriter = function(stream, options) {\n    return new XMLStreamWriter(stream, options);\n  };\n\n}).call(this);\n"]}