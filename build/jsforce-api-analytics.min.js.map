{"version":3,"sources":["node_modules/browser-pack/_prelude.js","lib/api/analytics.js","jsforce-api-analytics.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","jsforce","modules","api","Analytics","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","_","ReportInstance","report","id","_report","_conn","prototype","retrieve","callback","conn","url","_baseUrl","join","request","thenCall","Report","describe","del","destroy","method","clone","name","data","reportMetadata","params","headers","Content-Type","body","JSON","stringify","explain","run","exec","execute","options","isFunction","details","metadata","executeAsync","instance","instances","Dashboard","components","componentIds","isArray","isString","status","refresh","folderid","isObject","folderId","reports","dashboard","dashboards","on","analytics"],"mappings":"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","file":"jsforce-api-analytics.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\n * @file Manages Salesforce Analytics API\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _ = window.jsforce.require('lodash/core'),\n    jsforce = window.jsforce.require('./core'),\n    Promise  = window.jsforce.require('./promise');\n\n/**\n * Report instance to retrieving asynchronously executed result\n *\n * @protected\n * @class Analytics~ReportInstance\n * @param {Analytics~Report} report - Report\n * @param {String} id - Report instance id\n */\nvar ReportInstance = function(report, id) {\n  this._report = report;\n  this._conn = report._conn;\n  this.id = id;\n};\n\n/**\n * Retrieve report result asynchronously executed\n *\n * @method Analytics~ReportInstance#retrieve\n * @param {Callback.<Analytics~ReportResult>} [callback] - Callback function\n * @returns {Promise.<Analytics~ReportResult>}\n */\nReportInstance.prototype.retrieve = function(callback) {\n  var conn = this._conn,\n      report = this._report;\n  var url = [ conn._baseUrl(), \"analytics\", \"reports\", report.id, \"instances\", this.id ].join('/');\n  return conn.request(url).thenCall(callback);\n};\n\n/**\n * Report object in Analytics API\n *\n * @protected\n * @class Analytics~Report\n * @param {Connection} conn Connection\n */\nvar Report = function(conn, id) {\n  this._conn = conn;\n  this.id = id;\n};\n\n/**\n * Describe report metadata\n *\n * @method Analytics~Report#describe\n * @param {Callback.<Analytics~ReportMetadata>} [callback] - Callback function\n * @returns {Promise.<Analytics~ReportMetadata>}\n */\nReport.prototype.describe = function(callback) {\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\", this.id, \"describe\" ].join('/');\n  return this._conn.request(url).thenCall(callback);\n};\n\n/**\n * Synonym of Analytics~Report#destroy()\n *\n * @method Analytics~Report#delete\n * @param {Callback.<Analytics~ReportResult>} [callback] - Callback function\n * @returns {Promise.<Analytics~ReportResult>}\n */\n/**\n * Synonym of Analytics~Report#destroy()\n *\n * @method Analytics~Report#del\n * @param {Callback.<Analytics~ReportResult>} [callback] - Callback function\n * @returns {Promise.<Analytics~ReportResult>}\n */\n/**\n * Destroy a report\n *\n * @method Analytics~Report#destroy\n * @param {Callback.<Analytics~ReportResult>} [callback] - Callback function\n * @returns {Promise.<Analytics~ReportResult>}\n */\nReport.prototype[\"delete\"] =\nReport.prototype.del =\nReport.prototype.destroy = function(callback) {\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\", this.id ].join('/');\n  return this._conn.request({method: 'DELETE', url: url}).thenCall(callback);\n};\n\n/**\n * Clones a given report\n *\n * @method Analytics~Report#clone\n * @param {String} name - The name of the new report\n * @param {Callback.<Analytics~ReportResult>} [callback] - Callback function\n * @returns {Promise.<Analytics~ReportResult>}\n */\nReport.prototype.clone = function(name, callback) {\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\" ].join('/');\n  url += \"?cloneId=\" + this.id;\n  var data = { reportMetadata: { name: name } };\n  var params = { method : 'POST', url: url, headers: { \"Content-Type\" : \"application/json\" }, body: JSON.stringify(data)};\n\n  return this._conn.request(params).thenCall(callback);\n};\n\n/**\n * Explain plan for executing report\n *\n * @method Analytics~Report#explain\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\n * @returns {Promise.<ExplainInfo>}\n */\nReport.prototype.explain = function(callback) {\n  var url = \"/query/?explain=\" + this.id;\n  return this._conn.request(url).thenCall(callback);\n};\n\n\n/**\n * Run report synchronously\n *\n * @method Analytics~Report#execute\n * @param {Object} [options] - Options\n * @param {Boolean} options.details - Flag if include detail in result\n * @param {Analytics~ReportMetadata} options.metadata - Overriding report metadata\n * @param {Callback.<Analytics~ReportResult>} [callback] - Callback function\n * @returns {Promise.<Analytics~ReportResult>}\n */\nReport.prototype.run =\nReport.prototype.exec =\nReport.prototype.execute = function(options, callback) {\n  options = options || {};\n  if (_.isFunction(options)) {\n    callback = options;\n    options = {};\n  }\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\", this.id ].join('/');\n  url += \"?includeDetails=\" + (options.details ? \"true\" : \"false\");\n  var params = { method : options.metadata ? 'POST' : 'GET', url : url };\n  if (options.metadata) {\n    params.headers = { \"Content-Type\" : \"application/json\" };\n    params.body = JSON.stringify(options.metadata);\n  }\n  return this._conn.request(params).thenCall(callback);\n};\n\n\n/**\n * Run report asynchronously\n *\n * @method Analytics~Report#executeAsync\n * @param {Object} [options] - Options\n * @param {Boolean} options.details - Flag if include detail in result\n * @param {Analytics~ReportMetadata} options.metadata - Overriding report metadata\n * @param {Callback.<Analytics~ReportInstanceAttrs>} [callback] - Callback function\n * @returns {Promise.<Analytics~ReportInstanceAttrs>}\n */\nReport.prototype.executeAsync = function(options, callback) {\n  options = options || {};\n  if (_.isFunction(options)) {\n    callback = options;\n    options = {};\n  }\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\", this.id, \"instances\" ].join('/');\n  if (options.details) {\n    url += \"?includeDetails=true\";\n  }\n  var params = { method : 'POST', url : url, body: \"\" };\n  if (options.metadata) {\n    params.headers = { \"Content-Type\" : \"application/json\" };\n    params.body = JSON.stringify(options.metadata);\n  }\n  return this._conn.request(params).thenCall(callback);\n};\n\n/**\n * Get report instance for specified instance ID\n *\n * @method Analytics~Report#instance\n * @param {String} id - Report instance ID\n * @returns {Analytics~ReportInstance}\n */\nReport.prototype.instance = function(id) {\n  return new ReportInstance(this, id);\n};\n\n/**\n * List report instances which had been executed asynchronously\n *\n * @method Analytics~Report#instances\n * @param {Callback.<Array.<Analytics~ReportInstanceAttrs>>} [callback] - Callback function\n * @returns {Promise.<Array.<Analytics~ReportInstanceAttrs>>}\n */\nReport.prototype.instances = function(callback) {\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\", this.id, \"instances\" ].join('/');\n  return this._conn.request(url).thenCall(callback);\n};\n\n/**\n * Dashboard object in the Analytics API\n *\n * @protected\n * @class Analytics-Dashboard\n * @param {Connection} conn Connection\n * @param {String} id - The Id\n */\n\nvar Dashboard = function(conn, id) {\n  this._conn = conn;\n  this.id = id;\n};\n\n/**\n * Describe dashboard metadata\n *\n * @method Analytics~Dashboard#describe\n * @param {Callback.<Analytics-DashboardMetadata>} [callback] - Callback function\n * @returns {Promise.<Analytics-DashboardMetadata>}\n */\nDashboard.prototype.describe = function(callback) {\n  var url = [ this._conn._baseUrl(), \"analytics\", \"dashboards\", this.id, \"describe\" ].join('/');\n  return this._conn.request(url).thenCall(callback);\n};\n\n/**\n * Get details about dashboard components\n *\n * @method Analytics~Dashboard#components\n * @param {Callback.<Analytics-DashboardComponentMetadata>} [callback] - Callback function\n * @returns {Promise.<Analytics-DashboardComponentMetadata>}\n */\nDashboard.prototype.components = function(componentIds, callback) {\n  var url = [ this._conn._baseUrl(), \"analytics\", \"dashboards\", this.id].join('/');\n  var data = {};\n  if (_.isFunction(componentIds)) {\n    callback = componentIds;\n  } else if (_.isArray(componentIds)) {\n    data.componentIds = componentIds;\n  } else if (_.isString(componentIds)) {\n    data.componentIds = [ componentIds ];\n  }\n  var params = { method : 'POST', url : url, headers : { \"Content-Type\" : \"application/json\" }, body : JSON.stringify(data)};\n  return this._conn.request(params).thenCall(callback);\n};\n\n/**\n * Get dashboard status\n *\n * @method Analytics~Dashboard#status\n * @param {Callback.<Analytics-DashboardStatusMetadata>} [callback] - Callback function\n * @returns {Promise.<Analytics-DashboardStatusMetadata>}\n */\nDashboard.prototype.status = function(callback) {\n  var url = [ this._conn._baseUrl(), \"analytics\", \"dashboards\", this.id, \"status\" ].join('/');\n  return this._conn.request(url).thenCall(callback);\n};\n\n/**\n * Refresh a dashboard\n *\n * @method Analytics~Dashboard#refresh\n * @param {Callback.<Analytics-DashboardStatusUrl>} [callback] - Callback function\n * @returns {Promise.<Analytics-DashboardStatusUrl>}\n */\nDashboard.prototype.refresh = function(callback) {\n  var url = [ this._conn._baseUrl(), \"analytics\", \"dashboards\", this.id ].join('/');\n  var params = { method : 'PUT', url : url, body: '' };\n  return this._conn.request(params).thenCall(callback);\n};\n\n/**\n * Clone a dashboard\n *\n * @method Analytics~Dashboard#clone\n * @param {Callback.<Analytics-DashboardMetadata>} [callback] - Callback function\n * @returns {Promise.<Analytics-DashboardMetadata>}\n */\nDashboard.prototype.clone = function(name, folderid, callback) {\n  var url = [ this._conn._baseUrl(), \"analytics\", \"dashboards\" ].join('/');\n  url += \"?cloneId=\" + this.id;\n  var data = {};\n\n  if (_.isObject(name)) {\n    data = name;\n    callback = folderid;\n  } else {\n    data.name = name;\n    data.folderId = folderid;\n  }\n  var params = { method : 'POST', url : url, headers : { \"Content-Type\" : \"application/json\" }, body : JSON.stringify(data)};\n\n  return this._conn.request(params).thenCall(callback);\n};\n\n/**\n * Synonym of Analytics~Dashboard#destroy()\n *\n * @method Analytics~Dashboard#delete\n * @param {Callback.<Analytics~DashboardResult>} [callback] - Callback function\n * @returns {Promise.<Analytics~DashboardResult>}\n */\n/**\n * Synonym of Analytics~Dashboard#destroy()\n *\n * @method Analytics~Dashboard#del\n * @param {Callback.<Analytics~DashboardResult>} [callback] - Callback function\n * @returns {Promise.<Analytics~DashboardResult>}\n */\n/**\n * Destroy a dashboard\n *\n * @method Analytics~Dashboard#destroy\n * @param {Callback.<Analytics~DashboardResult>} [callback] - Callback function\n * @returns {Promise.<Analytics~DashboardResult>}\n */\nDashboard.prototype[\"delete\"] =\nDashboard.prototype.del =\nDashboard.prototype.destroy = function(callback) {\n  var url = [ this._conn._baseUrl(), \"analytics\", \"dashboards\", this.id ].join('/');\n  return this._conn.request({method: 'DELETE', url: url}).thenCall(callback);\n};\n\n/**\n * API class for Analytics API\n *\n * @class\n * @param {Connection} conn Connection\n */\nvar Analytics = function(conn) {\n  this._conn = conn;\n};\n\n/**\n * Get report object of Analytics API\n *\n * @param {String} id - Report Id\n * @returns {Analytics~Report}\n */\nAnalytics.prototype.report = function(id) {\n  return new Report(this._conn, id);\n};\n\n/**\n * Get recent report list\n *\n * @param {Callback.<Array.<Analytics~ReportInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<Analytics~ReportInfo>>}\n */\nAnalytics.prototype.reports = function(callback) {\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\" ].join('/');\n  return this._conn.request(url).thenCall(callback);\n};\n\n/**\n * Get dashboard object of Analytics API\n *\n * @param {String} id - Dashboard Id\n * @returns {Analytics~Dashboard}\n */\nAnalytics.prototype.dashboard = function(id) {\n  return new Dashboard(this._conn, id);\n};\n\n/**\n * Get recent dashboard list\n *\n * @param {Callback.<Array.<Analytics~DashboardInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<Analytics~DashboardInfo>>}\n */\nAnalytics.prototype.dashboards = function(callback) {\n  var url = [ this._conn._baseUrl(), \"analytics\", \"dashboards\" ].join('/');\n  return this._conn.request(url).thenCall(callback);\n};\n\n/*--------------------------------------------*/\n/*\n * Register hook in connection instantiation for dynamically adding this API module features\n */\njsforce.on('connection:new', function(conn) {\n  conn.analytics = new Analytics(conn);\n});\n\n\nmodule.exports = Analytics;\n","!function(t){var n;\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):(n=(n=(n=(n=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).jsforce||(n.jsforce={})).modules||(n.modules={})).api||(n.api={})).Analytics=t()}(function(){return function i(s,a,c){function u(n,t){if(!a[n]){if(!s[n]){var e=\"function\"==typeof require&&require;if(!t&&e)return e(n,!0);if(l)return l(n,!0);var o=new Error(\"Cannot find module '\"+n+\"'\");throw o.code=\"MODULE_NOT_FOUND\",o}var r=a[n]={exports:{}};s[n][0].call(r.exports,function(t){return u(s[n][1][t]||t)},r,r.exports,i,s,a,c)}return a[n].exports}for(var l=\"function\"==typeof require&&require,t=0;t<c.length;t++)u(c[t]);return u}({1:[function(t,n,e){\"use strict\";function o(t,n){this._report=t,this._conn=t._conn,this.id=n}var s=window.jsforce.require(\"lodash/core\"),r=window.jsforce.require(\"./core\");window.jsforce.require(\"./promise\");o.prototype.retrieve=function(t){var n=this._conn,e=this._report,o=[n._baseUrl(),\"analytics\",\"reports\",e.id,\"instances\",this.id].join(\"/\");return n.request(o).thenCall(t)};function i(t,n){this._conn=t,this.id=n}i.prototype.describe=function(t){var n=[this._conn._baseUrl(),\"analytics\",\"reports\",this.id,\"describe\"].join(\"/\");return this._conn.request(n).thenCall(t)},i.prototype.delete=i.prototype.del=i.prototype.destroy=function(t){var n=[this._conn._baseUrl(),\"analytics\",\"reports\",this.id].join(\"/\");return this._conn.request({method:\"DELETE\",url:n}).thenCall(t)},i.prototype.clone=function(t,n){var e=[this._conn._baseUrl(),\"analytics\",\"reports\"].join(\"/\"),o={reportMetadata:{name:t}},r={method:\"POST\",url:e+=\"?cloneId=\"+this.id,headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(o)};return this._conn.request(r).thenCall(n)},i.prototype.explain=function(t){var n=\"/query/?explain=\"+this.id;return this._conn.request(n).thenCall(t)},i.prototype.run=i.prototype.exec=i.prototype.execute=function(t,n){t=t||{},s.isFunction(t)&&(n=t,t={});var e=[this._conn._baseUrl(),\"analytics\",\"reports\",this.id].join(\"/\");e+=\"?includeDetails=\"+(t.details?\"true\":\"false\");var o={method:t.metadata?\"POST\":\"GET\",url:e};return t.metadata&&(o.headers={\"Content-Type\":\"application/json\"},o.body=JSON.stringify(t.metadata)),this._conn.request(o).thenCall(n)},i.prototype.executeAsync=function(t,n){t=t||{},s.isFunction(t)&&(n=t,t={});var e=[this._conn._baseUrl(),\"analytics\",\"reports\",this.id,\"instances\"].join(\"/\");t.details&&(e+=\"?includeDetails=true\");var o={method:\"POST\",url:e,body:\"\"};return t.metadata&&(o.headers={\"Content-Type\":\"application/json\"},o.body=JSON.stringify(t.metadata)),this._conn.request(o).thenCall(n)},i.prototype.instance=function(t){return new o(this,t)},i.prototype.instances=function(t){var n=[this._conn._baseUrl(),\"analytics\",\"reports\",this.id,\"instances\"].join(\"/\");return this._conn.request(n).thenCall(t)};function a(t,n){this._conn=t,this.id=n}a.prototype.describe=function(t){var n=[this._conn._baseUrl(),\"analytics\",\"dashboards\",this.id,\"describe\"].join(\"/\");return this._conn.request(n).thenCall(t)},a.prototype.components=function(t,n){var e=[this._conn._baseUrl(),\"analytics\",\"dashboards\",this.id].join(\"/\"),o={};s.isFunction(t)?n=t:s.isArray(t)?o.componentIds=t:s.isString(t)&&(o.componentIds=[t]);var r={method:\"POST\",url:e,headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(o)};return this._conn.request(r).thenCall(n)},a.prototype.status=function(t){var n=[this._conn._baseUrl(),\"analytics\",\"dashboards\",this.id,\"status\"].join(\"/\");return this._conn.request(n).thenCall(t)},a.prototype.refresh=function(t){var n={method:\"PUT\",url:[this._conn._baseUrl(),\"analytics\",\"dashboards\",this.id].join(\"/\"),body:\"\"};return this._conn.request(n).thenCall(t)},a.prototype.clone=function(t,n,e){var o=[this._conn._baseUrl(),\"analytics\",\"dashboards\"].join(\"/\");o+=\"?cloneId=\"+this.id;var r={};s.isObject(t)?(r=t,e=n):(r.name=t,r.folderId=n);var i={method:\"POST\",url:o,headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(r)};return this._conn.request(i).thenCall(e)},a.prototype.delete=a.prototype.del=a.prototype.destroy=function(t){var n=[this._conn._baseUrl(),\"analytics\",\"dashboards\",this.id].join(\"/\");return this._conn.request({method:\"DELETE\",url:n}).thenCall(t)};function c(t){this._conn=t}c.prototype.report=function(t){return new i(this._conn,t)},c.prototype.reports=function(t){var n=[this._conn._baseUrl(),\"analytics\",\"reports\"].join(\"/\");return this._conn.request(n).thenCall(t)},c.prototype.dashboard=function(t){return new a(this._conn,t)},c.prototype.dashboards=function(t){var n=[this._conn._baseUrl(),\"analytics\",\"dashboards\"].join(\"/\");return this._conn.request(n).thenCall(t)},r.on(\"connection:new\",function(t){t.analytics=new c(t)}),n.exports=c},{}]},{},[1])(1)});\n//# sourceMappingURL=jsforce-api-analytics.min.js.map\n"]}